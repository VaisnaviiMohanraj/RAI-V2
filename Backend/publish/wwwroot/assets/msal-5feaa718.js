import{r as e,R as t}from"./vendor-324528e4.js";
/*! @azure/msal-common v15.12.0 2025-08-19 */const r={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},n=200,o=400,i=400,s=499,a=500,c=599,l="GET",h="POST",d=[r.OPENID_SCOPE,r.PROFILE_SCOPE,r.OFFLINE_ACCESS_SCOPE],u=[...d,r.EMAIL_SCOPE],g="Content-Type",p="Content-Length",m="Retry-After",f="X-AnchorMailbox",y="x-ms-request-id",v="x-ms-httpver",w="active-account-filters",C="common",I="organizations",k="consumers",A="access_token",T="xms_cc",b="login",S="select_account",_="consent",P="none",R="no_session",E="code",M="id_token token refresh_token",O="query",q="fragment",N="query",x="authorization_code",H="refresh_token",L="MSSTS",U="ADFS",D="Generic",F="-",B=".",K={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},$="appmetadata",z="1",j="authority-metadata",G=86400,W="config",Q="cache",J="network",V="hardcoded_values",Y={SCHEMA_VERSION:5,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},X={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},Z=60,ee=3600,te="throttling",re="retry-after, h429",ne="invalid_grant",oe="client_mismatch",ie="1",se="3",ae="4",ce="2",le="4",he="5",de="0",ue="1",ge="2",pe="3",me="4",fe="pop",ye="unexpected_error",ve="post_request_failed",we={[ye]:"Unexpected error in authentication.",[ve]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};class Ce extends Error{constructor(e,t,n){super(t?`${e}: ${t}`:e),Object.setPrototypeOf(this,Ce.prototype),this.errorCode=e||r.EMPTY_STRING,this.errorMessage=t||r.EMPTY_STRING,this.subError=n||r.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function Ie(e,t){return new Ce(e,t?`${we[e]} ${t}`:we[e])}
/*! @azure/msal-common v15.12.0 2025-08-19 */const ke="client_info_decoding_error",Ae="client_info_empty_error",Te="token_parsing_error",be="null_or_empty_token",Se="endpoints_resolution_error",_e="network_error",Pe="openid_config_error",Re="hash_not_deserialized",Ee="invalid_state",Me="state_mismatch",Oe="state_not_found",qe="nonce_mismatch",Ne="auth_time_not_found",xe="max_age_transpired",He="multiple_matching_tokens",Le="multiple_matching_accounts",Ue="multiple_matching_appMetadata",De="request_cannot_be_made",Fe="cannot_remove_empty_scope",Be="cannot_append_scopeset",Ke="empty_input_scopeset",$e="device_code_polling_cancelled",ze="device_code_expired",je="device_code_unknown_error",Ge="no_account_in_silent_request",We="invalid_cache_record",Qe="invalid_cache_environment",Je="no_account_found",Ve="no_crypto_object",Ye="unexpected_credential_type",Xe="invalid_assertion",Ze="invalid_client_credential",et="token_refresh_required",tt="user_timeout_reached",rt="token_claims_cnf_required_for_signedjwt",nt="authorization_code_missing_from_server_response",ot="binding_key_not_removed",it="end_session_endpoint_not_supported",st="key_id_missing",at="no_network_connectivity",ct="user_canceled",lt="missing_tenant_id_error",ht="method_not_implemented",dt="nested_app_auth_bridge_disabled",ut={[ke]:"The client info could not be parsed/decoded correctly",[Ae]:"The client info was empty",[Te]:"Token cannot be parsed",[be]:"The token is null or empty",[Se]:"Endpoints cannot be resolved",[_e]:"Network request failed",[Pe]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[Re]:"The hash parameters could not be deserialized",[Ee]:"State was not the expected format",[Me]:"State mismatch error",[Oe]:"State not found",[qe]:"Nonce mismatch error",[Ne]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[xe]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[He]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[Le]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[Ue]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[De]:"Token request cannot be made without authorization code or refresh token.",[Fe]:"Cannot remove null or empty scope from ScopeSet",[Be]:"Cannot append ScopeSet",[Ke]:"Empty input ScopeSet cannot be processed",[$e]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[ze]:"Device code is expired.",[je]:"Device code stopped polling for unknown reasons.",[Ge]:"Please pass an account object, silent flow is not supported without account information",[We]:"Cache record object was null or undefined.",[Qe]:"Invalid environment when attempting to create cache entry",[Je]:"No account found in cache for given key.",[Ve]:"No crypto object detected.",[Ye]:"Unexpected credential type.",[Xe]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[Ze]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[et]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[tt]:"User defined timeout for device code polling reached",[rt]:"Cannot generate a POP jwt if the token_claims are not populated",[nt]:"Server response does not contain an authorization code to proceed",[ot]:"Could not remove the credential's binding key from storage.",[it]:"The provided authority does not support logout",[st]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[at]:"No network connectivity. Check your internet connection.",[ct]:"User cancelled the flow.",[lt]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[ht]:"This method has not been implemented",[dt]:"The nested app auth bridge is disabled"};class gt extends Ce{constructor(e,t){super(e,t?`${ut[e]}: ${t}`:ut[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,gt.prototype)}}function pt(e,t){return new gt(e,t)}
/*! @azure/msal-common v15.12.0 2025-08-19 */const mt={createNewGuid:()=>{throw pt(ht)},base64Decode:()=>{throw pt(ht)},base64Encode:()=>{throw pt(ht)},base64UrlEncode:()=>{throw pt(ht)},encodeKid:()=>{throw pt(ht)},async getPublicKeyThumbprint(){throw pt(ht)},async removeTokenBindingKey(){throw pt(ht)},async clearKeystore(){throw pt(ht)},async signJwt(){throw pt(ht)},async hashString(){throw pt(ht)}};
/*! @azure/msal-common v15.12.0 2025-08-19 */var ft,yt;(yt=ft||(ft={}))[yt.Error=0]="Error",yt[yt.Warning=1]="Warning",yt[yt.Info=2]="Info",yt[yt.Verbose=3]="Verbose",yt[yt.Trace=4]="Trace";class vt{constructor(e,t,n){this.level=ft.Info;const o=e||vt.createDefaultLoggerOptions();this.localCallback=o.loggerCallback||(()=>{}),this.piiLoggingEnabled=o.piiLoggingEnabled||!1,this.level="number"==typeof o.logLevel?o.logLevel:ft.Info,this.correlationId=o.correlationId||r.EMPTY_STRING,this.packageName=t||r.EMPTY_STRING,this.packageVersion=n||r.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:ft.Info}}clone(e,t,r){return new vt({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:r||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const r=`${`[${(new Date).toUTCString()}] : [${t.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${ft[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,r,t.containsPii||!1)}executeCallback(e,t,r){this.localCallback&&this.localCallback(e,t,r)}error(e,t){this.logMessage(e,{logLevel:ft.Error,containsPii:!1,correlationId:t||r.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:ft.Error,containsPii:!0,correlationId:t||r.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:ft.Warning,containsPii:!1,correlationId:t||r.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:ft.Warning,containsPii:!0,correlationId:t||r.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:ft.Info,containsPii:!1,correlationId:t||r.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:ft.Info,containsPii:!0,correlationId:t||r.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:ft.Verbose,containsPii:!1,correlationId:t||r.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:ft.Verbose,containsPii:!0,correlationId:t||r.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:ft.Trace,containsPii:!1,correlationId:t||r.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:ft.Trace,containsPii:!0,correlationId:t||r.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}
/*! @azure/msal-common v15.12.0 2025-08-19 */const wt="@azure/msal-common",Ct="15.12.0",It="none",kt="redirect_uri_empty",At="claims_request_parsing_error",Tt="authority_uri_insecure",bt="url_parse_error",St="empty_url_error",_t="empty_input_scopes_error",Pt="invalid_claims",Rt="token_request_empty",Et="logout_request_empty",Mt="invalid_code_challenge_method",Ot="pkce_params_missing",qt="invalid_cloud_discovery_metadata",Nt="invalid_authority_metadata",xt="untrusted_authority",Ht="missing_ssh_jwk",Lt="missing_ssh_kid",Ut="missing_nonce_authentication_header",Dt="invalid_authentication_header",Ft="cannot_set_OIDCOptions",Bt="cannot_allow_platform_broker",Kt="authority_mismatch",$t="invalid_request_method_for_EAR",zt="invalid_authorize_post_body_parameters",jt={[kt]:"A redirect URI is required for all calls, and none has been set.",[At]:"Could not parse the given claims request object.",[Tt]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[bt]:"URL could not be parsed into appropriate segments.",[St]:"URL was empty or null.",[_t]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[Pt]:"Given claims parameter must be a stringified JSON object.",[Rt]:"Token request was empty and not found in cache.",[Et]:"The logout request was null or undefined.",[Mt]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[Ot]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[qt]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[Nt]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[xt]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[Ht]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[Lt]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[Ut]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[Dt]:"Invalid authentication header provided",[Ft]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[Bt]:"Cannot set allowPlatformBroker parameter to true when not in AAD protocol mode.",[Kt]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.",[zt]:"Invalid authorize post body parameters provided. If you are using authorizePostBodyParameters, the request method must be POST. Please check the request method and parameters.",[$t]:"Invalid request method for EAR protocol mode. The request method cannot be GET when using EAR protocol mode. Please change the request method to POST."};class Gt extends Ce{constructor(e){super(e,jt[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,Gt.prototype)}}function Wt(e){return new Gt(e)}
/*! @azure/msal-common v15.12.0 2025-08-19 */class Qt{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return 0===Object.keys(t).length}catch(t){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},r=e.split("&"),n=e=>decodeURIComponent(e.replace(/\+/g," "));return r.forEach(e=>{if(e.trim()){const[r,o]=e.split(/=(.+)/g,2);r&&o&&(t[n(r)]=n(o))}}),t}static trimArrayEntries(e){return e.map(e=>e.trim())}static removeEmptyStringsFromArray(e){return e.filter(e=>!!e)}static jsonParseHelper(e){try{return JSON.parse(e)}catch(t){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */class Jt{constructor(e){const t=e?Qt.trimArrayEntries([...e]):[],r=t?Qt.removeEmptyStringsFromArray(t):[];if(!r||!r.length)throw Wt(_t);this.scopes=new Set,r.forEach(e=>this.scopes.add(e))}static fromString(e){const t=(e||r.EMPTY_STRING).split(" ");return new Jt(t)}static createSearchScopes(e){const t=e&&e.length>0?e:[...d],n=new Jt(t);return n.containsOnlyOIDCScopes()?n.removeScope(r.OFFLINE_ACCESS_SCOPE):n.removeOIDCScopes(),n}containsScope(e){const t=this.printScopesLowerCase().split(" "),r=new Jt(t);return!!e&&r.scopes.has(e.toLowerCase())}containsScopeSet(e){return!(!e||e.scopes.size<=0)&&(this.scopes.size>=e.scopes.size&&e.asArray().every(e=>this.containsScope(e)))}containsOnlyOIDCScopes(){let e=0;return u.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(e=>this.appendScope(e))}catch(t){throw pt(Be)}}removeScope(e){if(!e)throw pt(Fe);this.scopes.delete(e.trim())}removeOIDCScopes(){u.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw pt(Ke);const t=new Set;return e.scopes.forEach(e=>t.add(e.toLowerCase())),this.scopes.forEach(e=>t.add(e.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw pt(Ke);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),r=e.getScopeCount(),n=this.getScopeCount();return t.size<n+r}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){if(this.scopes){return this.asArray().join(" ")}return r.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}
/*! @azure/msal-common v15.12.0 2025-08-19 */function Vt(e,t){return!!e&&!!t&&e===t.split(".")[1]}function Yt(e,t,r,n){if(n){const{oid:t,sub:r,tid:o,name:i,tfp:s,acr:a,preferred_username:c,upn:l,login_hint:h}=n,d=o||s||a||"";return{tenantId:d,localAccountId:t||r||"",name:i,username:c||l||"",loginHint:h,isHomeTenant:Vt(d,e)}}return{tenantId:r,localAccountId:t,username:"",isHomeTenant:Vt(r,e)}}function Xt(e,t,r,n){let o=e;if(t){const{isHomeTenant:r,...n}=t;o={...e,...n}}if(r){const{isHomeTenant:t,...i}=Yt(e.homeAccountId,e.localAccountId,e.tenantId,r);return o={...o,...i,idTokenClaims:r,idToken:n},o}return o}
/*! @azure/msal-common v15.12.0 2025-08-19 */function Zt(e,t){const r=function(e){if(!e)throw pt(be);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw pt(Te);return t[2]}(e);try{const e=t(r);return JSON.parse(e)}catch(n){throw pt(Te)}}function er(e,t){if(0===t||Date.now()-3e5>e+t)throw pt(xe)}
/*! @azure/msal-common v15.12.0 2025-08-19 */function tr(e){if(!e)return e;let t=e.toLowerCase();return Qt.endsWith(t,"?")?t=t.slice(0,-1):Qt.endsWith(t,"?/")&&(t=t.slice(0,-2)),Qt.endsWith(t,"/")||(t+="/"),t}function rr(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function nr(e){if(!e||e.indexOf("=")<0)return null;try{const t=rr(e),r=Object.fromEntries(new URLSearchParams(t));if(r.code||r.ear_jwe||r.error||r.error_description||r.state)return r}catch(t){throw pt(Re)}return null}function or(e,t=!0,r){const n=new Array;return e.forEach((e,o)=>{!t&&r&&o in r?n.push(`${o}=${e}`):n.push(`${o}=${encodeURIComponent(e)}`)}),n.join("&")}function ir(e){if(!e)return e;const t=e.split("#")[0];try{const e=new URL(t);return tr(e.origin+e.pathname+e.search)}catch(r){return tr(t)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */class sr{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw Wt(St);e.includes("#")||(this._urlString=sr.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return Qt.endsWith(t,"?")?t=t.slice(0,-1):Qt.endsWith(t,"?/")&&(t=t.slice(0,-2)),Qt.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(t){throw Wt(bt)}if(!e.HostNameAndPort||!e.PathSegments)throw Wt(bt);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw Wt(Tt)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return sr.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),r=t.PathSegments;return!e||0===r.length||r[0]!==C&&r[0]!==I||(r[0]=e),sr.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw Wt(bt);const r={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let n=r.AbsolutePath.split("/");return n=n.filter(e=>e&&e.length>0),r.PathSegments=n,r.QueryString&&r.QueryString.endsWith("/")&&(r.QueryString=r.QueryString.substring(0,r.QueryString.length-1)),r}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),r=e.match(t);if(!r)throw Wt(bt);return r[2]}static getAbsoluteUrl(e,t){if(e[0]===r.FORWARD_SLASH){const r=new sr(t).getUrlComponents();return r.Protocol+"//"+r.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new sr(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!nr(e)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */const ar={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},cr={metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},lr=new Set;function hr(e,t,r,n){if(null==n||n.trace(`getAliasesFromMetadata called with source: ${r}`),e&&t){const o=dr(t,e);if(o)return null==n||n.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${r}, returning aliases`),o.aliases;null==n||n.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${r}`)}return null}function dr(e,t){for(let r=0;r<e.length;r++){const n=e[r];if(n.aliases.includes(t))return n}return null}
/*! @azure/msal-common v15.12.0 2025-08-19 */cr.metadata.forEach(e=>{e.aliases.forEach(e=>{lr.add(e)})});const ur="cache_quota_exceeded",gr="cache_error_unknown",pr={[ur]:"Exceeded cache storage capacity.",[gr]:"Unexpected error occurred when using cache storage."};class mr extends Ce{constructor(e,t){const r=t||(pr[e]?pr[e]:pr[gr]);super(`${e}: ${r}`),Object.setPrototypeOf(this,mr.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=r}}function fr(e){return e instanceof Error?"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota")?new mr(ur):new mr(e.name,e.message):new mr(gr)}
/*! @azure/msal-common v15.12.0 2025-08-19 */class yr{constructor(e,t,r,n,o){this.clientId=e,this.cryptoImpl=t,this.commonLogger=r.clone(wt,Ct),this.staticAuthorityOptions=o,this.performanceClient=n}getAllAccounts(e,t){return this.buildTenantProfiles(this.getAccountsFilteredBy(e,t),t,e)}getAccountInfoFilteredBy(e,t){if(0===Object.keys(e).length||Object.values(e).every(e=>!e))return this.commonLogger.warning("getAccountInfoFilteredBy: Account filter is empty or invalid, returning null"),null;const r=this.getAllAccounts(e,t);if(r.length>1){return r.sort(e=>e.idTokenClaims?-1:1)[0]}return 1===r.length?r[0]:null}getBaseAccountInfo(e,t){const r=this.getAccountsFilteredBy(e,t);return r.length>0?r[0].getAccountInfo():null}buildTenantProfiles(e,t,r){return e.flatMap(e=>this.getTenantProfilesFromAccountEntity(e,t,null==r?void 0:r.tenantId,r))}getTenantedAccountInfoByFilter(e,t,r,n,o){let i,s=null;if(o&&!this.tenantProfileMatchesFilter(r,o))return null;const a=this.getIdToken(e,n,t,r.tenantId);return a&&(i=Zt(a.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(i,o))?null:(s=Xt(e,r,i,null==a?void 0:a.secret),s)}getTenantProfilesFromAccountEntity(e,t,r,n){const o=e.getAccountInfo();let i=o.tenantProfiles||new Map;const s=this.getTokenKeys();if(r){const e=i.get(r);if(!e)return[];i=new Map([[r,e]])}const a=[];return i.forEach(e=>{const r=this.getTenantedAccountInfoByFilter(o,s,e,t,n);r&&a.push(r)}),a}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId))&&((!t.name||e.name===t.name)&&(void 0===t.isHomeTenant||e.isHomeTenant===t.isHomeTenant))}idTokenClaimsMatchTenantProfileFilter(e,t){if(t){if(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))return!1;if(t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint))return!1;if(t.username&&!this.matchUsername(e.preferred_username,t.username))return!1;if(t.name&&!this.matchName(e,t.name))return!1;if(t.sid&&!this.matchSid(e,t.sid))return!1}return!0}async saveCacheRecord(e,t,r){var n;if(!e)throw pt(We);try{e.account&&await this.setAccount(e.account,t),e.idToken&&!1!==(null==r?void 0:r.idToken)&&await this.setIdTokenCredential(e.idToken,t),e.accessToken&&!1!==(null==r?void 0:r.accessToken)&&await this.saveAccessToken(e.accessToken,t),e.refreshToken&&!1!==(null==r?void 0:r.refreshToken)&&await this.setRefreshTokenCredential(e.refreshToken,t),e.appMetadata&&this.setAppMetadata(e.appMetadata,t)}catch(o){throw null==(n=this.commonLogger)||n.error("CacheManager.saveCacheRecord: failed"),o instanceof Ce?o:fr(o)}}async saveAccessToken(e,t){const r={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),o=Jt.fromString(e.target);n.accessToken.forEach(e=>{if(!this.accessTokenKeyMatchesFilter(e,r,!1))return;const n=this.getAccessTokenCredential(e,t);if(n&&this.credentialMatchesFilter(n,r)){Jt.fromString(n.target).intersectingScopeSets(o)&&this.removeAccessToken(e,t)}}),await this.setAccessTokenCredential(e,t)}getAccountsFilteredBy(e,t){const r=this.getAccountKeys(),n=[];return r.forEach(r=>{var o;const i=this.getAccount(r,t);if(!i)return;if(e.homeAccountId&&!this.matchHomeAccountId(i,e.homeAccountId))return;if(e.username&&!this.matchUsername(i.username,e.username))return;if(e.environment&&!this.matchEnvironment(i,e.environment))return;if(e.realm&&!this.matchRealm(i,e.realm))return;if(e.nativeAccountId&&!this.matchNativeAccountId(i,e.nativeAccountId))return;if(e.authorityType&&!this.matchAuthorityType(i,e.authorityType))return;const s={localAccountId:null==e?void 0:e.localAccountId,name:null==e?void 0:e.name},a=null==(o=i.tenantProfiles)?void 0:o.filter(e=>this.tenantProfileMatchesFilter(e,s));a&&0===a.length||n.push(i)}),n}credentialMatchesFilter(e,t){if(t.clientId&&!this.matchClientId(e,t.clientId))return!1;if(t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash))return!1;if("string"==typeof t.homeAccountId&&!this.matchHomeAccountId(e,t.homeAccountId))return!1;if(t.environment&&!this.matchEnvironment(e,t.environment))return!1;if(t.realm&&!this.matchRealm(e,t.realm))return!1;if(t.credentialType&&!this.matchCredentialType(e,t.credentialType))return!1;if(t.familyId&&!this.matchFamilyId(e,t.familyId))return!1;if(t.target&&!this.matchTarget(e,t.target))return!1;if((t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash)return!1;if(e.credentialType===K.ACCESS_TOKEN_WITH_AUTH_SCHEME){if(t.tokenType&&!this.matchTokenType(e,t.tokenType))return!1;if(t.tokenType===X.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId))return!1}return!0}getAppMetadataFilteredBy(e){const t=this.getKeys(),r={};return t.forEach(t=>{if(!this.isAppMetadata(t))return;const n=this.getAppMetadata(t);n&&(e.environment&&!this.matchEnvironment(n,e.environment)||e.clientId&&!this.matchClientId(n,e.clientId)||(r[t]=n))}),r}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let r=null;return t.forEach(t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;const n=this.getAuthorityMetadata(t);n&&-1!==n.aliases.indexOf(e)&&(r=n)}),r}removeAllAccounts(e){this.getAllAccounts({},e).forEach(t=>{this.removeAccount(t,e)})}removeAccount(e,t){this.removeAccountContext(e,t);this.getAccountKeys().filter(t=>t.includes(e.homeAccountId)&&t.includes(e.environment)).forEach(e=>{this.removeItem(e,t),this.performanceClient.incrementFields({accountsRemoved:1},t)})}removeAccountContext(e,t){const r=this.getTokenKeys(),n=t=>t.includes(e.homeAccountId)&&t.includes(e.environment);r.idToken.filter(n).forEach(e=>{this.removeIdToken(e,t)}),r.accessToken.filter(n).forEach(e=>{this.removeAccessToken(e,t)}),r.refreshToken.filter(n).forEach(e=>{this.removeRefreshToken(e,t)})}removeAccessToken(e,t){const r=this.getAccessTokenCredential(e,t);if(this.removeItem(e,t),this.performanceClient.incrementFields({accessTokensRemoved:1},t),!r||r.credentialType.toLowerCase()!==K.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()||r.tokenType!==X.POP)return;const n=r.keyId;n&&this.cryptoImpl.removeTokenBindingKey(n).catch(()=>{var e;this.commonLogger.error(`Failed to remove token binding key ${n}`,t),null==(e=this.performanceClient)||e.incrementFields({removeTokenBindingKeyFailure:1},t)})}removeAppMetadata(e){return this.getKeys().forEach(t=>{this.isAppMetadata(t)&&this.removeItem(t,e)}),!0}getIdToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getIdToken called");const i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:K.ID_TOKEN,clientId:this.clientId,realm:n},s=this.getIdTokensByFilter(i,t,r),a=s.size;if(a<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(a>1){let r=s;if(!n){const t=new Map;s.forEach((r,n)=>{r.realm===e.tenantId&&t.set(n,r)});const n=t.size;if(n<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(1===n)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),t.values().next().value;r=t}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),r.forEach((e,r)=>{this.removeIdToken(r,t)}),o&&t&&o.addFields({multiMatchedID:s.size},t),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t,r){const n=r&&r.idToken||this.getTokenKeys().idToken,o=new Map;return n.forEach(r=>{if(!this.idTokenKeyMatchesFilter(r,{clientId:this.clientId,...e}))return;const n=this.getIdTokenCredential(r,t);n&&this.credentialMatchesFilter(n,e)&&o.set(r,n)}),o}idTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return(!t.clientId||-1!==r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e,t){this.removeItem(e,t)}removeRefreshToken(e,t){this.removeItem(e,t)}getAccessToken(e,t,r,n){const o=t.correlationId;this.commonLogger.trace("CacheManager - getAccessToken called",o);const i=Jt.createSearchScopes(t.scopes),s=t.authenticationScheme||X.BEARER,a=s&&s.toLowerCase()!==X.BEARER.toLowerCase()?K.ACCESS_TOKEN_WITH_AUTH_SCHEME:K.ACCESS_TOKEN,c={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:a,clientId:this.clientId,realm:n||e.tenantId,target:i,tokenType:s,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},l=r&&r.accessToken||this.getTokenKeys().accessToken,h=[];l.forEach(e=>{if(this.accessTokenKeyMatchesFilter(e,c,!0)){const t=this.getAccessTokenCredential(e,o);t&&this.credentialMatchesFilter(t,c)&&h.push(t)}});const d=h.length;return d<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found",o),null):d>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them",o),h.forEach(e=>{this.removeAccessToken(this.generateCredentialKey(e),o)}),this.performanceClient.addFields({multiMatchedAT:h.length},o),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token",o),h[0])}accessTokenKeyMatchesFilter(e,t,r){const n=e.toLowerCase();if(t.clientId&&-1===n.indexOf(t.clientId.toLowerCase()))return!1;if(t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase()))return!1;if(t.realm&&-1===n.indexOf(t.realm.toLowerCase()))return!1;if(t.requestedClaimsHash&&-1===n.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){const e=t.target.asArray();for(let t=0;t<e.length;t++){if(r&&!n.includes(e[t].toLowerCase()))return!1;if(!r&&n.includes(e[t].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e,t){const r=this.getTokenKeys(),n=[];return r.accessToken.forEach(r=>{if(!this.accessTokenKeyMatchesFilter(r,e,!0))return;const o=this.getAccessTokenCredential(r,t);o&&this.credentialMatchesFilter(o,e)&&n.push(o)}),n}getRefreshToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getRefreshToken called");const i=t?z:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:K.REFRESH_TOKEN,clientId:this.clientId,familyId:i},a=n&&n.refreshToken||this.getTokenKeys().refreshToken,c=[];a.forEach(e=>{if(this.refreshTokenKeyMatchesFilter(e,s)){const t=this.getRefreshTokenCredential(e,r);t&&this.credentialMatchesFilter(t,s)&&c.push(t)}});const l=c.length;return l<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(l>1&&o&&r&&o.addFields({multiMatchedRT:l},r),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),c[0])}refreshTokenKeyMatchesFilter(e,t){const r=e.toLowerCase();return(!t.familyId||-1!==r.indexOf(t.familyId.toLowerCase()))&&(!(!t.familyId&&t.clientId&&-1===r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase())))}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},r=this.getAppMetadataFilteredBy(t),n=Object.keys(r).map(e=>r[e]),o=n.length;if(o<1)return null;if(o>1)throw pt(Ue);return n[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!(!t||t.familyId!==z)}matchHomeAccountId(e,t){return!("string"!=typeof e.homeAccountId||t!==e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){var r;return!(t.toLowerCase()!==(null==(r=e.name)?void 0:r.toLowerCase()))}matchUsername(e,t){return!(!e||"string"!=typeof e||(null==t?void 0:t.toLowerCase())!==e.toLowerCase())}matchUserAssertionHash(e,t){return!(!e.userAssertionHash||t!==e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const r=function(e,t){var r;let n;const o=e.canonicalAuthority;if(o){const i=new sr(o).getUrlComponents().HostNameAndPort;n=hr(i,null==(r=e.cloudDiscoveryMetadata)?void 0:r.metadata,W,t)||hr(i,cr.metadata,V,t)||e.knownAuthorities}return n||[]}(this.staticAuthorityOptions,this.commonLogger);if(r.includes(t)&&r.includes(e.environment))return!0}const r=this.getAuthorityMetadataByAlias(t);return!!(r&&r.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!(!e.clientId||t!==e.clientId)}matchFamilyId(e,t){return!(!e.familyId||t!==e.familyId)}matchRealm(e,t){var r;return!((null==(r=e.realm)?void 0:r.toLowerCase())!==t.toLowerCase())}matchNativeAccountId(e,t){return!(!e.nativeAccountId||t!==e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||(e.preferred_username===t||e.upn===t)}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!(!e.authorityType||t.toLowerCase()!==e.authorityType.toLowerCase())}matchTarget(e,t){if(e.credentialType!==K.ACCESS_TOKEN&&e.credentialType!==K.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target)return!1;return Jt.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!(!e.tokenType||e.tokenType!==t)}matchKeyId(e,t){return!(!e.keyId||e.keyId!==t)}isAppMetadata(e){return-1!==e.indexOf($)}isAuthorityMetadata(e){return-1!==e.indexOf(j)}generateAuthorityMetadataCacheKey(e){return`${j}-${this.clientId}-${e}`}static toObject(e,t){for(const r in t)e[r]=t[r];return e}}class vr extends yr{async setAccount(){throw pt(ht)}getAccount(){throw pt(ht)}async setIdTokenCredential(){throw pt(ht)}getIdTokenCredential(){throw pt(ht)}async setAccessTokenCredential(){throw pt(ht)}getAccessTokenCredential(){throw pt(ht)}async setRefreshTokenCredential(){throw pt(ht)}getRefreshTokenCredential(){throw pt(ht)}setAppMetadata(){throw pt(ht)}getAppMetadata(){throw pt(ht)}setServerTelemetry(){throw pt(ht)}getServerTelemetry(){throw pt(ht)}setAuthorityMetadata(){throw pt(ht)}getAuthorityMetadata(){throw pt(ht)}getAuthorityMetadataKeys(){throw pt(ht)}setThrottlingCache(){throw pt(ht)}getThrottlingCache(){throw pt(ht)}removeItem(){throw pt(ht)}getKeys(){throw pt(ht)}getAccountKeys(){throw pt(ht)}getTokenKeys(){throw pt(ht)}generateCredentialKey(){throw pt(ht)}generateAccountKey(){throw pt(ht)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */const wr="AAD",Cr="OIDC",Ir="EAR",kr="acquireTokenByCode",Ar="acquireTokenByRefreshToken",Tr="acquireTokenSilent",br="acquireTokenSilentAsync",Sr="acquireTokenPopup",_r="acquireTokenPreRedirect",Pr="acquireTokenRedirect",Rr="cryptoOptsGetPublicKeyThumbprint",Er="cryptoOptsSignJwt",Mr="silentCacheClientAcquireToken",Or="silentIframeClientAcquireToken",qr="awaitConcurrentIframe",Nr="silentRefreshClientAcquireToken",xr="ssoSilent",Hr="standardInteractionClientGetDiscoveredAuthority",Lr="nativeInteractionClientAcquireToken",Ur="networkClientSendPostRequestAsync",Dr="refreshTokenClientExecutePostToTokenEndpoint",Fr="authorizationCodeClientExecutePostToTokenEndpoint",Br="refreshTokenClientExecuteTokenRequest",Kr="refreshTokenClientAcquireToken",$r="refreshTokenClientAcquireTokenWithCachedRefreshToken",zr="refreshTokenClientAcquireTokenByRefreshToken",jr="refreshTokenClientCreateTokenRequestBody",Gr="acquireTokenFromCache",Wr="silentFlowClientAcquireCachedToken",Qr="silentFlowClientGenerateResultFromCacheRecord",Jr="acquireTokenBySilentIframe",Vr="initializeBaseRequest",Yr="initializeSilentRequest",Xr="initializeClientApplication",Zr="initializeCache",en="silentIframeClientTokenHelper",tn="silentHandlerInitiateAuthRequest",rn="silentHandlerMonitorIframeForHash",nn="silentHandlerLoadFrame",on="silentHandlerLoadFrameSync",sn="standardInteractionClientCreateAuthCodeClient",an="standardInteractionClientGetClientConfiguration",cn="standardInteractionClientInitializeAuthorizationRequest",ln="getAuthCodeUrl",hn="getStandardParams",dn="handleCodeResponseFromServer",un="handleCodeResponse",gn="handleResponseEar",pn="handleResponsePlatformBroker",mn="handleResponseCode",fn="updateTokenEndpointAuthority",yn="authClientAcquireToken",vn="authClientExecuteTokenRequest",wn="authClientCreateTokenRequestBody",Cn="popTokenGenerateCnf",In="popTokenGenerateKid",kn="handleServerTokenResponse",An="deserializeResponse",Tn="authorityFactoryCreateDiscoveredInstance",bn="authorityResolveEndpointsAsync",Sn="authorityGetCloudDiscoveryMetadataFromNetwork",_n="authorityUpdateCloudDiscoveryMetadata",Pn="authorityGetEndpointMetadataFromNetwork",Rn="authorityUpdateEndpointMetadata",En="authorityUpdateMetadataWithRegionalInformation",Mn="regionDiscoveryDetectRegion",On="regionDiscoveryGetRegionFromIMDS",qn="regionDiscoveryGetCurrentVersion",Nn="acquireTokenByCodeAsync",xn="handleRedirectPromise",Hn="handleNativeRedirectPromise",Ln="nativeMessageHandlerHandshake",Un="removeHiddenIframe",Dn="clearTokensAndKeysWithClaims",Fn="cacheManagerGetRefreshToken",Bn="importExistingCache",Kn="setUserData",$n="localStorageUpdated",zn="generatePkceCodes",jn="generateCodeVerifier",Gn="generateCodeChallengeFromVerifier",Wn="sha256Digest",Qn="getRandomValues",Jn="generateHKDF",Vn="generateBaseKey",Yn="base64Decode",Xn="urlEncodeArr",Zn="encrypt",eo="decrypt",to="generateEarKey",ro="decryptEarResponse",no=1;
/*! @azure/msal-common v15.12.0 2025-08-19 */
/*! @azure/msal-common v15.12.0 2025-08-19 */
class oo{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class io{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:no,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new oo}}startPerformanceMeasurement(){return new oo}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}
/*! @azure/msal-common v15.12.0 2025-08-19 */const so={tokenRenewalOffsetSeconds:300,preventCorsPreflight:!1},ao={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:ft.Info,correlationId:r.EMPTY_STRING},co={claimsBasedCachingEnabled:!1},lo={async sendGetRequestAsync(){throw pt(ht)},async sendPostRequestAsync(){throw pt(ht)}},ho={sku:r.SKU,version:Ct,cpu:r.EMPTY_STRING,os:r.EMPTY_STRING},uo={clientSecret:r.EMPTY_STRING,clientAssertion:void 0},go={azureCloudInstance:It,tenant:`${r.DEFAULT_COMMON_TENANT}`},po={application:{appName:"",appVersion:""}};function mo(e){return e.authOptions.authority.options.protocolMode===Cr}
/*! @azure/msal-common v15.12.0 2025-08-19 */const fo="home_account_id",yo="UPN";
/*! @azure/msal-common v15.12.0 2025-08-19 */function vo(e,t){if(!e)throw pt(Ae);try{const r=t(e);return JSON.parse(r)}catch(r){throw pt(ke)}}function wo(e){if(!e)throw pt(ke);const t=e.split(B,2);return{uid:t[0],utid:t.length<2?r.EMPTY_STRING:t[1]}}
/*! @azure/msal-common v15.12.0 2025-08-19 */const Co="client_id",Io="redirect_uri",ko="token_type",Ao="req_cnf",To="return_spa_code",bo="x-client-xtra-sku",So="brk_client_id",_o="brk_redirect_uri",Po="instance_aware";
/*! @azure/msal-common v15.12.0 2025-08-19 */
function Ro(e,t,r){if(!t)return;const n=e.get(Co);n&&e.has(So)&&(null==r||r.addFields({embeddedClientId:n,embeddedRedirectUri:e.get(Io)},t))}function Eo(e,t){e.set("response_type",t)}function Mo(e,t,r=!0,n=d){!r||n.includes("openid")||t.includes("openid")||n.push("openid");const o=r?[...t||[],...n]:t||[],i=new Jt(o);e.set("scope",i.printScopes())}function Oo(e,t){e.set(Co,t)}function qo(e,t){e.set(Io,t)}function No(e,t){e.set("login_hint",t)}function xo(e,t){e.set(f,`UPN:${t}`)}function Ho(e,t){e.set(f,`Oid:${t.uid}@${t.utid}`)}function Lo(e,t){e.set("sid",t)}function Uo(e,t,r){const n=function(e,t){let r;if(e)try{r=JSON.parse(e)}catch(n){throw Wt(Pt)}else r={};t&&t.length>0&&(r.hasOwnProperty(A)||(r[A]={}),r[A][T]={values:t});return JSON.stringify(r)}(t,r);try{JSON.parse(n)}catch(o){throw Wt(Pt)}e.set("claims",n)}function Do(e,t){e.set("client-request-id",t)}function Fo(e,t){e.set("x-client-SKU",t.sku),e.set("x-client-VER",t.version),t.os&&e.set("x-client-OS",t.os),t.cpu&&e.set("x-client-CPU",t.cpu)}function Bo(e,t){(null==t?void 0:t.appName)&&e.set("x-app-name",t.appName),(null==t?void 0:t.appVersion)&&e.set("x-app-ver",t.appVersion)}function Ko(e,t){t&&e.set("state",t)}function $o(e,t,r){if(!t||!r)throw Wt(Ot);e.set("code_challenge",t),e.set("code_challenge_method",r)}function zo(e,t){e.set("client_secret",t)}function jo(e,t){t&&e.set("client_assertion",t)}function Go(e,t){t&&e.set("client_assertion_type",t)}function Wo(e,t){e.set("grant_type",t)}function Qo(e){e.set("client_info","1")}function Jo(e){e.has(Po)||e.set(Po,"true")}function Vo(e,t){Object.entries(t).forEach(([t,r])=>{!e.has(t)&&r&&e.set(t,r)})}function Yo(e,t){t&&(e.set(ko,X.POP),e.set(Ao,t))}function Xo(e,t){t&&(e.set(ko,X.SSH),e.set(Ao,t))}function Zo(e,t){e.set("x-client-current-telemetry",t.generateCurrentRequestHeaderValue()),e.set("x-client-last-telemetry",t.generateLastRequestHeaderValue())}function ei(e){e.set("x-ms-lib-capability",re)}function ti(e,t,r){e.has(So)||e.set(So,t),e.has(_o)||e.set(_o,r)}
/*! @azure/msal-common v15.12.0 2025-08-19 */
const ri=0,ni=1,oi=2,ii=3;
/*! @azure/msal-common v15.12.0 2025-08-19 */
/*! @azure/msal-common v15.12.0 2025-08-19 */
const si=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const s=null==n?void 0:n.startMeasurement(t,o);if(o){const e=t+"CallCount";null==n||n.incrementFields({[e]:1},o)}try{const n=e(...i);return null==s||s.end({success:!0}),r.trace(`Returning result from ${t}`),n}catch(a){r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(a))}catch(c){r.trace("Unable to print error message.")}throw null==s||s.end({success:!1},a),a}},ai=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);const s=null==n?void 0:n.startMeasurement(t,o);if(o){const e=t+"CallCount";null==n||n.incrementFields({[e]:1},o)}return null==n||n.setPreQueueTime(t,o),e(...i).then(e=>(r.trace(`Returning result from ${t}`),null==s||s.end({success:!0}),e)).catch(e=>{r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(n){r.trace("Unable to print error message.")}throw null==s||s.end({success:!1},e),e})};
/*! @azure/msal-common v15.12.0 2025-08-19 */
class ci{constructor(e,t,r,n){this.networkInterface=e,this.logger=t,this.performanceClient=r,this.correlationId=n}async detectRegion(e,t){var o;null==(o=this.performanceClient)||o.addQueueMeasurement(Mn,this.correlationId);let s=e;if(s)t.region_source=se;else{const e=ci.IMDS_OPTIONS;try{const o=await ai(this.getRegionFromIMDS.bind(this),On,this.logger,this.performanceClient,this.correlationId)(r.IMDS_VERSION,e);if(o.status===n&&(s=o.body,t.region_source=ae),o.status===i){const r=await ai(this.getCurrentVersion.bind(this),qn,this.logger,this.performanceClient,this.correlationId)(e);if(!r)return t.region_source=ie,null;const o=await ai(this.getRegionFromIMDS.bind(this),On,this.logger,this.performanceClient,this.correlationId)(r,e);o.status===n&&(s=o.body,t.region_source=ae)}}catch(a){return t.region_source=ie,null}}return s||(t.region_source=ie),s||null}async getRegionFromIMDS(e,t){var n;return null==(n=this.performanceClient)||n.addQueueMeasurement(On,this.correlationId),this.networkInterface.sendGetRequestAsync(`${r.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,r.IMDS_TIMEOUT)}async getCurrentVersion(e){var t;null==(t=this.performanceClient)||t.addQueueMeasurement(qn,this.correlationId);try{const t=await this.networkInterface.sendGetRequestAsync(`${r.IMDS_ENDPOINT}?format=json`,e);return t.status===i&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0?t.body["newest-versions"][0]:null}catch(n){return null}}}
/*! @azure/msal-common v15.12.0 2025-08-19 */
function li(){return Math.round((new Date).getTime()/1e3)}function hi(e){return e.getTime()/1e3}function di(e){return e?new Date(1e3*Number(e)):new Date}function ui(e,t){const r=Number(e)||0;return li()+t>r}function gi(e,t){const r=Number(e)+24*t*60*60*1e3;return Date.now()>r}
/*! @azure/msal-common v15.12.0 2025-08-19 */
function pi(e,t,r,n,o){return{credentialType:K.ID_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r,realm:o,lastUpdatedAt:Date.now().toString()}}function mi(e,t,r,n,o,i,s,a,c,l,h,d,u,g,p){var m,f;const y={homeAccountId:e,credentialType:K.ACCESS_TOKEN,secret:r,cachedAt:li().toString(),expiresOn:s.toString(),extendedExpiresOn:a.toString(),environment:t,clientId:n,realm:o,target:i,tokenType:h||X.BEARER,lastUpdatedAt:Date.now().toString()};if(d&&(y.userAssertionHash=d),l&&(y.refreshOn=l.toString()),g&&(y.requestedClaims=g,y.requestedClaimsHash=p),(null==(m=y.tokenType)?void 0:m.toLowerCase())!==X.BEARER.toLowerCase())switch(y.credentialType=K.ACCESS_TOKEN_WITH_AUTH_SCHEME,y.tokenType){case X.POP:const e=Zt(r,c);if(!(null==(f=null==e?void 0:e.cnf)?void 0:f.kid))throw pt(rt);y.keyId=e.cnf.kid;break;case X.SSH:y.keyId=u}return y}function fi(e,t,r,n,o,i,s){const a={credentialType:K.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r,lastUpdatedAt:Date.now().toString()};return i&&(a.userAssertionHash=i),o&&(a.familyId=o),s&&(a.expiresOn=s.toString()),a}function yi(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function vi(e){return!!e&&(yi(e)&&e.hasOwnProperty("realm")&&e.hasOwnProperty("target")&&(e.credentialType===K.ACCESS_TOKEN||e.credentialType===K.ACCESS_TOKEN_WITH_AUTH_SCHEME))}function wi(e){return!!e&&(yi(e)&&e.credentialType===K.REFRESH_TOKEN)}function Ci(){return li()+G}function Ii(e,t,r){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=r,e.jwks_uri=t.jwks_uri}function ki(e,t,r){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=r}function Ai(e){return e.expiresAt<=li()}
/*! @azure/msal-common v15.12.0 2025-08-19 */ci.IMDS_OPTIONS={headers:{Metadata:"true"}};class Ti{constructor(e,t,r,n,o,i,s,a){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=r,this.authorityOptions=n,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=o,this.performanceClient=s,this.correlationId=i,this.managedIdentity=a||!1,this.regionDiscovery=new ci(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(r.CIAM_AUTH_URL))return ii;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case r.ADFS:return ni;case r.DSTS:return oi}return ri}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new sr(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw pt(Se)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw pt(Se)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw pt(Se)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw pt(it);return this.replacePath(this.metadata.end_session_endpoint)}throw pt(Se)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw pt(Se)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw pt(Se)}canReplaceTenant(e){return 1===e.PathSegments.length&&!Ti.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===ri&&this.protocolMode!==Cr}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const r=new sr(this.metadata.canonical_authority).getUrlComponents(),n=r.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((e,o)=>{let i=n[o];if(0===o&&this.canReplaceTenant(r)){const e=new sr(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];i!==e&&(this.logger.verbose(`Replacing tenant domain name ${i} with id ${e}`),i=e)}e!==i&&(t=t.replace(`/${i}/`,`/${e}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===ni||this.protocolMode===Cr&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){var e,t;null==(e=this.performanceClient)||e.addQueueMeasurement(bn,this.correlationId);const r=this.getCurrentMetadataEntity(),n=await ai(this.updateCloudDiscoveryMetadata.bind(this),_n,this.logger,this.performanceClient,this.correlationId)(r);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,r.preferred_network);const o=await ai(this.updateEndpointMetadata.bind(this),Rn,this.logger,this.performanceClient,this.correlationId)(r);this.updateCachedMetadata(r,n,{source:o}),null==(t=this.performanceClient)||t.addFields({cloudDiscoverySource:n,authorityEndpointSource:o},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:Ci(),jwks_uri:""}),e}updateCachedMetadata(e,t,r){t!==Q&&(null==r?void 0:r.source)!==Q&&(e.expiresAt=Ci(),e.canonical_authority=this.canonicalAuthority);const n=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(n,e),this.metadata=e}async updateEndpointMetadata(e){var t,r,n;null==(t=this.performanceClient)||t.addQueueMeasurement(Rn,this.correlationId);const o=this.updateEndpointMetadataFromLocalSources(e);if(o){if(o.source===V&&(null==(r=this.authorityOptions.azureRegionConfiguration)?void 0:r.azureRegion)&&o.metadata){Ii(e,await ai(this.updateMetadataWithRegionalInformation.bind(this),En,this.logger,this.performanceClient,this.correlationId)(o.metadata),!1),e.canonical_authority=this.canonicalAuthority}return o.source}let i=await ai(this.getEndpointMetadataFromNetwork.bind(this),Pn,this.logger,this.performanceClient,this.correlationId)();if(i)return(null==(n=this.authorityOptions.azureRegionConfiguration)?void 0:n.azureRegion)&&(i=await ai(this.updateMetadataWithRegionalInformation.bind(this),En,this.logger,this.performanceClient,this.correlationId)(i)),Ii(e,i,!0),J;throw pt(Pe,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),Ii(e,t,!1),{source:W};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const t=this.getEndpointMetadataFromHardcodedValues();if(t)return Ii(e,t,!1),{source:V,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const r=Ai(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!r?(this.logger.verbose("Found endpoint metadata in the cache."),{source:Q}):(r&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new sr(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw Wt(Nt)}return null}async getEndpointMetadataFromNetwork(){var e;null==(e=this.performanceClient)||e.addQueueMeasurement(Pn,this.correlationId);const t={},r=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${r}`);try{const e=await this.networkInterface.sendGetRequestAsync(r,t),n=function(e){return e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("jwks_uri")}
/*! @azure/msal-common v15.12.0 2025-08-19 */(e.body);return n?e.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(n){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${n}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in ar?ar[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){var t,n,o;null==(t=this.performanceClient)||t.addQueueMeasurement(En,this.correlationId);const i=null==(n=this.authorityOptions.azureRegionConfiguration)?void 0:n.azureRegion;if(i){if(i!==r.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=ce,this.regionDiscoveryMetadata.region_used=i,Ti.replaceWithRegionalInformation(e,i);const t=await ai(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),Mn,this.logger,this.performanceClient,this.correlationId)(null==(o=this.authorityOptions.azureRegionConfiguration)?void 0:o.environmentRegion,this.regionDiscoveryMetadata);if(t)return this.regionDiscoveryMetadata.region_outcome=le,this.regionDiscoveryMetadata.region_used=t,Ti.replaceWithRegionalInformation(e,t);this.regionDiscoveryMetadata.region_outcome=he}return e}async updateCloudDiscoveryMetadata(e){var t;null==(t=this.performanceClient)||t.addQueueMeasurement(_n,this.correlationId);const r=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(r)return r;const n=await ai(this.getCloudDiscoveryMetadataFromNetwork.bind(this),Sn,this.logger,this.performanceClient,this.correlationId)();if(n)return ki(e,n,!0),J;throw Wt(xt)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||r.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||r.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||r.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),ki(e,t,!1),W;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const t=(n=this.hostnameAndPort,dr(cr.metadata,n));if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),ki(e,t,!1),V;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}var n;const o=Ai(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!o?(this.logger.verbose("Found cloud discovery metadata in the cache."),Q):(o&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===ii)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),Ti.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=dr(JSON.parse(this.authorityOptions.cloudDiscoveryMetadata).metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),e)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),e;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),Wt(qt)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),Ti.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){var e;null==(e=this.performanceClient)||e.addQueueMeasurement(Sn,this.correlationId);const t=`${r.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,n={};let o=null;try{const e=await this.networkInterface.sendGetRequestAsync(t,n);let i,s;if(function(e){return e.hasOwnProperty("tenant_discovery_endpoint")&&e.hasOwnProperty("metadata")}
/*! @azure/msal-common v15.12.0 2025-08-19 */(e.body))i=e.body,s=i.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else{if(!function(e){return e.hasOwnProperty("error")&&e.hasOwnProperty("error_description")}(e.body))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${e.status}`),i=e.body,i.error===r.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),s=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),o=dr(s,this.hostnameAndPort)}catch(i){if(i instanceof Ce)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\nError: ${i.errorCode}\nError Description: ${i.errorMessage}`);else{const e=i;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\nError: ${e.name}\nError Description: ${e.message}`)}return null}return o||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),o=Ti.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),o}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(e=>e&&sr.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==It){const e=t.tenant?t.tenant:r.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${e}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return r.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw pt(Se)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return lr.has(e)}static isPublicCloudAuthority(e){return r.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const o=new sr(e);o.validateAsUri();const i=o.getUrlComponents();let s=`${t}.${i.HostNameAndPort}`;this.isPublicCloudAuthority(i.HostNameAndPort)&&(s=`${t}.${r.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const a=sr.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:s}).urlString;return n?`${a}?${n}`:a}static replaceWithRegionalInformation(e,t){const r={...e};return r.authorization_endpoint=Ti.buildRegionalAuthorityString(r.authorization_endpoint,t),r.token_endpoint=Ti.buildRegionalAuthorityString(r.token_endpoint,t),r.end_session_endpoint&&(r.end_session_endpoint=Ti.buildRegionalAuthorityString(r.end_session_endpoint,t)),r}static transformCIAMAuthority(e){let t=e;const n=new sr(e).getUrlComponents();if(0===n.PathSegments.length&&n.HostNameAndPort.endsWith(r.CIAM_AUTH_URL)){t=`${t}${n.HostNameAndPort.split(".")[0]}${r.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}function bi(e){return e.endsWith(r.FORWARD_SLASH)?e:`${e}${r.FORWARD_SLASH}`}
/*! @azure/msal-common v15.12.0 2025-08-19 */
async function Si(e,t,r,n,o,i,s){null==s||s.addQueueMeasurement(Tn,i);const a=Ti.transformCIAMAuthority(bi(e)),c=new Ti(a,t,r,n,o,i,s);try{return await ai(c.resolveEndpointsAsync.bind(c),bn,o,s,i)(),c}catch(l){throw pt(Se)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */Ti.reservedTenantDomains=new Set(["{tenant}","{tenantid}",C,k,I]);class _i extends Ce{constructor(e,t,r,n,o){super(e,t,r),this.name="ServerError",this.errorNo=n,this.status=o,Object.setPrototypeOf(this,_i.prototype)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */function Pi(e,t,r){var n;return{clientId:e,authority:t.authority,scopes:t.scopes,homeAccountIdentifier:r,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid,embeddedClientId:t.embeddedClientId||(null==(n=t.tokenBodyParameters)?void 0:n.clientId)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */class Ri{static generateThrottlingStorageKey(e){return`${te}.${JSON.stringify(e)}`}static preProcess(e,t,n){var o;const i=Ri.generateThrottlingStorageKey(t),s=e.getThrottlingCache(i);if(s){if(s.throttleTime<Date.now())return void e.removeItem(i,n);throw new _i((null==(o=s.errorCodes)?void 0:o.join(" "))||r.EMPTY_STRING,s.errorMessage,s.subError)}}static postProcess(e,t,r,n){if(Ri.checkResponseStatus(r)||Ri.checkResponseForRetryAfter(r)){const o={throttleTime:Ri.calculateThrottleTime(parseInt(r.headers[m])),error:r.body.error,errorCodes:r.body.error_codes,errorMessage:r.body.error_description,subError:r.body.suberror};e.setThrottlingCache(Ri.generateThrottlingStorageKey(t),o,n)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&(e.headers.hasOwnProperty(m)&&(e.status<200||e.status>=300))}static calculateThrottleTime(e){const t=e<=0?0:e,r=Date.now()/1e3;return Math.floor(1e3*Math.min(r+(t||Z),r+ee))}static removeThrottle(e,t,r,n){const o=Pi(t,r,n),i=this.generateThrottlingStorageKey(o);e.removeItem(i,r.correlationId)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */class Ei extends Ce{constructor(e,t,r){super(e.errorCode,e.errorMessage,e.subError),Object.setPrototypeOf(this,Ei.prototype),this.name="NetworkError",this.error=e,this.httpStatus=t,this.responseHeaders=r}}function Mi(e,t,r,n){return e.errorMessage=`${e.errorMessage}, additionalErrorInfo: error.name:${null==n?void 0:n.name}, error.message:${null==n?void 0:n.message}`,new Ei(e,t,r)}
/*! @azure/msal-common v15.12.0 2025-08-19 */class Oi{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:r,cacheOptions:n,storageInterface:o,networkInterface:i,cryptoInterface:s,clientCredentials:a,libraryInfo:c,telemetry:l,serverTelemetryManager:h,persistencePlugin:d,serializableCache:u}){const g={...ao,...r};return{authOptions:(p=e,{clientCapabilities:[],azureCloudOptions:go,skipAuthorityMetadataCache:!1,instanceAware:!1,encodeExtraQueryParams:!1,...p}),systemOptions:{...so,...t},loggerOptions:g,cacheOptions:{...co,...n},storageInterface:o||new vr(e.clientId,mt,new vt(g),new io),networkInterface:i||lo,cryptoInterface:s||mt,clientCredentials:a||uo,libraryInfo:{...ho,...c},telemetry:{...po,...l},serverTelemetryManager:h||null,persistencePlugin:d||null,serializableCache:u||null};var p}(e),this.logger=new vt(this.config.loggerOptions,wt,Ct),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[g]=r.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case fo:try{const r=wo(e.credential);t[f]=`Oid:${r.uid}@${r.utid}`}catch(n){this.logger.verbose("Could not parse home account ID for CCS Header: "+n)}break;case yo:t[f]=`UPN: ${e.credential}`}return t}async executePostToTokenEndpoint(e,t,r,n,o,i){var s;i&&(null==(s=this.performanceClient)||s.addQueueMeasurement(i,o));const a=await this.sendPostRequest(n,e,{body:t,headers:r},o);return this.config.serverTelemetryManager&&a.status<500&&429!==a.status&&this.config.serverTelemetryManager.clearTelemetryCache(),a}async sendPostRequest(e,t,r,n){var o,i,s;let a;Ri.preProcess(this.cacheManager,e,n);try{a=await ai(this.networkClient.sendPostRequestAsync.bind(this.networkClient),Ur,this.logger,this.performanceClient,n)(t,r);const e=a.headers||{};null==(i=this.performanceClient)||i.addFields({refreshTokenSize:(null==(o=a.body.refresh_token)?void 0:o.length)||0,httpVerToken:e[v]||"",requestId:e[y]||""},n)}catch(c){if(c instanceof Ei){const e=c.responseHeaders;throw e&&(null==(s=this.performanceClient)||s.addFields({httpVerToken:e[v]||"",requestId:e[y]||"",contentTypeHeader:e[g]||void 0,contentLengthHeader:e[p]||void 0,httpStatus:c.httpStatus},n)),c.error}throw c instanceof Ce?c:pt(_e)}return Ri.postProcess(this.cacheManager,e,a,n),a}async updateAuthority(e,t){var r;null==(r=this.performanceClient)||r.addQueueMeasurement(fn,t);const n=`https://${e}/${this.authority.tenant}/`,o=await Si(n,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=o}createTokenQueryParameters(e){const t=new Map;return e.embeddedClientId&&ti(t,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenQueryParameters&&Vo(t,e.tokenQueryParameters),Do(t,e.correlationId),Ro(t,e.correlationId,this.performanceClient),or(t)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */function qi(e){if(e){return e.tid||e.tfp||e.acr||null}return null}
/*! @azure/msal-common v15.12.0 2025-08-19 */class Ni{getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,loginHint:this.loginHint,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static createAccount(e,t,r){var n,o,i,s,a,c,l;const h=new Ni;let d;t.authorityType===ni?h.authorityType=U:t.protocolMode===Cr?h.authorityType=D:h.authorityType=L,e.clientInfo&&r&&(d=vo(e.clientInfo,r)),h.clientInfo=e.clientInfo,h.homeAccountId=e.homeAccountId,h.nativeAccountId=e.nativeAccountId;const u=e.environment||t&&t.getPreferredCache();if(!u)throw pt(Qe);h.environment=u,h.realm=(null==d?void 0:d.utid)||qi(e.idTokenClaims)||"",h.localAccountId=(null==d?void 0:d.uid)||(null==(n=e.idTokenClaims)?void 0:n.oid)||(null==(o=e.idTokenClaims)?void 0:o.sub)||"";const g=(null==(i=e.idTokenClaims)?void 0:i.preferred_username)||(null==(s=e.idTokenClaims)?void 0:s.upn),p=(null==(a=e.idTokenClaims)?void 0:a.emails)?e.idTokenClaims.emails[0]:null;if(h.username=g||p||"",h.loginHint=null==(c=e.idTokenClaims)?void 0:c.login_hint,h.name=(null==(l=e.idTokenClaims)?void 0:l.name)||"",h.cloudGraphHostName=e.cloudGraphHostName,h.msGraphHost=e.msGraphHost,e.tenantProfiles)h.tenantProfiles=e.tenantProfiles;else{const t=Yt(e.homeAccountId,h.localAccountId,h.realm,e.idTokenClaims);h.tenantProfiles=[t]}return h}static createFromAccountInfo(e,t,r){var n;const o=new Ni;return o.authorityType=e.authorityType||D,o.homeAccountId=e.homeAccountId,o.localAccountId=e.localAccountId,o.nativeAccountId=e.nativeAccountId,o.realm=e.tenantId,o.environment=e.environment,o.username=e.username,o.name=e.name,o.loginHint=e.loginHint,o.cloudGraphHostName=t,o.msGraphHost=r,o.tenantProfiles=Array.from((null==(n=e.tenantProfiles)?void 0:n.values())||[]),o}static generateHomeAccountId(e,t,r,n,o){if(t!==ni&&t!==oi){if(e)try{const t=vo(e,n.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(i){}r.warning("No client info in response")}return(null==o?void 0:o.sub)||""}static isAccountEntity(e){return!!e&&(e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"))}static accountInfoIsEqual(e,t,r){if(!e||!t)return!1;let n=!0;if(r){const r=e.idTokenClaims||{},o=t.idTokenClaims||{};n=r.iat===o.iat&&r.nonce===o.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.loginHint===t.loginHint&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&n}}
/*! @azure/msal-common v15.12.0 2025-08-19 */const xi="no_tokens_found",Hi="native_account_unavailable",Li="refresh_token_expired",Ui="ux_not_allowed",Di="bad_token",Fi=["interaction_required","consent_required","login_required",Di,Ui],Bi=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],Ki={[xi]:"No refresh token found in the cache. Please sign-in.",[Hi]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[Li]:"Refresh token has expired.",[Di]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.",[Ui]:"`canShowUI` flag in Edge was set to false. User interaction required on web page. Please invoke an interactive API to resolve."};class $i extends Ce{constructor(e,t,n,o,i,s,a,c){super(e,t,n),Object.setPrototypeOf(this,$i.prototype),this.timestamp=o||r.EMPTY_STRING,this.traceId=i||r.EMPTY_STRING,this.correlationId=s||r.EMPTY_STRING,this.claims=a||r.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function zi(e,t,r){const n=!!e&&Fi.indexOf(e)>-1,o=!!r&&Bi.indexOf(r)>-1,i=!!t&&Fi.some(e=>t.indexOf(e)>-1);return n||i||o}function ji(e){return new $i(e,Ki[e])}
/*! @azure/msal-common v15.12.0 2025-08-19 */class Gi{static setRequestState(e,t,n){const o=Gi.generateLibraryState(e,n);return t?`${o}${r.RESOURCE_DELIM}${t}`:o}static generateLibraryState(e,t){if(!e)throw pt(Ve);const r={id:e.createNewGuid()};t&&(r.meta=t);const n=JSON.stringify(r);return e.base64Encode(n)}static parseRequestState(e,t){if(!e)throw pt(Ve);if(!t)throw pt(Ee);try{const n=t.split(r.RESOURCE_DELIM),o=n[0],i=n.length>1?n.slice(1).join(r.RESOURCE_DELIM):r.EMPTY_STRING,s=e.base64Decode(o),a=JSON.parse(s);return{userRequestState:i||r.EMPTY_STRING,libraryState:a}}catch(n){throw pt(Ee)}}}
/*! @azure/msal-common v15.12.0 2025-08-19 */const Wi="sw";class Qi{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){var r;null==(r=this.performanceClient)||r.addQueueMeasurement(Cn,e.correlationId);const n=await ai(this.generateKid.bind(this),Cn,t,this.performanceClient,e.correlationId)(e),o=this.cryptoUtils.base64UrlEncode(JSON.stringify(n));return{kid:n.kid,reqCnfString:o}}async generateKid(e){var t;null==(t=this.performanceClient)||t.addQueueMeasurement(In,e.correlationId);return{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:Wi}}async signPopToken(e,t,r){return this.signPayload(e,t,r)}async signPayload(e,t,r,n){const{resourceRequestMethod:o,resourceRequestUri:i,shrClaims:s,shrNonce:a,shrOptions:c}=r,l=i?new sr(i):void 0,h=null==l?void 0:l.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:li(),m:null==o?void 0:o.toUpperCase(),u:null==h?void 0:h.HostNameAndPort,nonce:a||this.cryptoUtils.createNewGuid(),p:null==h?void 0:h.AbsolutePath,q:(null==h?void 0:h.QueryString)?[[],h.QueryString]:void 0,client_claims:s||void 0,...n},t,c,r.correlationId)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */class Ji{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}
/*! @azure/msal-common v15.12.0 2025-08-19 */class Vi{constructor(e,t,r,n,o,i,s){this.clientId=e,this.cacheStorage=t,this.cryptoObj=r,this.logger=n,this.serializableCache=o,this.persistencePlugin=i,this.performanceClient=s}validateTokenResponse(e,t){var n;if(e.error||e.error_description||e.suberror){const i=`Error(s): ${e.error_codes||r.NOT_AVAILABLE} - Timestamp: ${e.timestamp||r.NOT_AVAILABLE} - Description: ${e.error_description||r.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||r.NOT_AVAILABLE} - Trace ID: ${e.trace_id||r.NOT_AVAILABLE}`,l=(null==(n=e.error_codes)?void 0:n.length)?e.error_codes[0]:void 0,h=new _i(e.error,i,e.suberror,l,e.status);if(t&&e.status&&e.status>=a&&e.status<=c)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\n${h}`);if(t&&e.status&&e.status>=o&&e.status<=s)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\n${h}`);if(zi(e.error,e.error_description,e.suberror))throw new $i(e.error,e.error_description,e.suberror,e.timestamp||r.EMPTY_STRING,e.trace_id||r.EMPTY_STRING,e.correlation_id||r.EMPTY_STRING,e.claims||r.EMPTY_STRING,l);throw h}}async handleServerTokenResponse(e,t,n,o,i,s,a,c,l){var h;let d,u;if(null==(h=this.performanceClient)||h.addQueueMeasurement(kn,e.correlation_id),e.id_token){if(d=Zt(e.id_token||r.EMPTY_STRING,this.cryptoObj.base64Decode),i&&i.nonce&&d.nonce!==i.nonce)throw pt(qe);if(o.maxAge||0===o.maxAge){const e=d.auth_time;if(!e)throw pt(Ne);er(e,o.maxAge)}}this.homeAccountIdentifier=Ni.generateHomeAccountId(e.client_info||r.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,d),i&&i.state&&(u=Gi.parseRequestState(this.cryptoObj,i.state)),e.key_id=e.key_id||o.sshKid||void 0;const g=this.generateCacheRecord(e,t,n,o,d,s,i);let p;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),p=new Ji(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(p)),a&&!c&&g.account){const e=this.cacheStorage.generateAccountKey(g.account.getAccountInfo());if(!this.cacheStorage.getAccount(e,o.correlationId))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await Vi.generateAuthenticationResult(this.cryptoObj,t,g,!1,o,d,u,void 0,l)}await this.cacheStorage.saveCacheRecord(g,o.correlationId,o.storeInCache)}finally{this.persistencePlugin&&this.serializableCache&&p&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(p))}return Vi.generateAuthenticationResult(this.cryptoObj,t,g,!1,o,d,u,e,l)}generateCacheRecord(e,t,r,n,o,i,s){const a=t.getPreferredCache();if(!a)throw pt(Qe);const c=qi(o);let l,h;e.id_token&&o&&(l=pi(this.homeAccountIdentifier,a,e.id_token,this.clientId,c||""),h=Yi(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,n.correlationId,o,e.client_info,a,c,s,void 0,this.logger));let d=null;if(e.access_token){const o=e.scope?Jt.fromString(e.scope):new Jt(n.scopes||[]),s=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,l=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,h=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=r+s,g=u+l,p=h&&h>0?r+h:void 0;d=mi(this.homeAccountIdentifier,a,e.access_token,this.clientId,c||t.tenant||"",o.printScopes(),u,g,this.cryptoObj.base64Decode,p,e.token_type,i,e.key_id,n.claims,n.requestedClaimsHash)}let u=null;if(e.refresh_token){let t;if(e.refresh_token_expires_in){t=r+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)}u=fi(this.homeAccountIdentifier,a,e.refresh_token,this.clientId,e.foci,i,t)}let g=null;return e.foci&&(g={clientId:this.clientId,environment:a,familyId:e.foci}),{account:h,idToken:l,accessToken:d,refreshToken:u,appMetadata:g}}static async generateAuthenticationResult(e,t,n,o,i,s,a,c,l){var h,d,u,g,p;let m,f,y=r.EMPTY_STRING,v=[],w=null,C=r.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType!==X.POP||i.popKid)y=n.accessToken.secret;else{const t=new Qi(e),{secret:r,keyId:o}=n.accessToken;if(!o)throw pt(st);y=await t.signPopToken(r,o,i)}v=Jt.fromString(n.accessToken.target).asArray(),w=di(n.accessToken.expiresOn),m=di(n.accessToken.extendedExpiresOn),n.accessToken.refreshOn&&(f=di(n.accessToken.refreshOn))}n.appMetadata&&(C=n.appMetadata.familyId===z?z:"");const I=(null==s?void 0:s.oid)||(null==s?void 0:s.sub)||"",k=(null==s?void 0:s.tid)||"";(null==c?void 0:c.spa_accountid)&&n.account&&(n.account.nativeAccountId=null==c?void 0:c.spa_accountid);const A=n.account?Xt(n.account.getAccountInfo(),void 0,s,null==(h=n.idToken)?void 0:h.secret):null;return{authority:t.canonicalAuthority,uniqueId:I,tenantId:k,scopes:v,account:A,idToken:(null==(d=null==n?void 0:n.idToken)?void 0:d.secret)||"",idTokenClaims:s||{},accessToken:y,fromCache:o,expiresOn:w,extExpiresOn:m,refreshOn:f,correlationId:i.correlationId,requestId:l||r.EMPTY_STRING,familyId:C,tokenType:(null==(u=n.accessToken)?void 0:u.tokenType)||r.EMPTY_STRING,state:a?a.userRequestState:r.EMPTY_STRING,cloudGraphHostName:(null==(g=n.account)?void 0:g.cloudGraphHostName)||r.EMPTY_STRING,msGraphHost:(null==(p=n.account)?void 0:p.msGraphHost)||r.EMPTY_STRING,code:null==c?void 0:c.spa_code,fromNativeBroker:!1}}}function Yi(e,t,r,n,o,i,s,a,c,l,h,d){null==d||d.verbose("setCachedAccount called");const u=e.getAccountKeys().find(e=>e.startsWith(r));let g=null;u&&(g=e.getAccount(u,o));const p=g||Ni.createAccount({homeAccountId:r,idTokenClaims:i,clientInfo:s,environment:a,cloudGraphHostName:null==l?void 0:l.cloud_graph_host_name,msGraphHost:null==l?void 0:l.msgraph_host,nativeAccountId:h},t,n),m=p.tenantProfiles||[],f=c||p.realm;if(f&&!m.find(e=>e.tenantId===f)){const e=Yt(r,p.localAccountId,f,i);m.push(e)}return p.tenantProfiles=m,p}
/*! @azure/msal-common v15.12.0 2025-08-19 */async function Xi(e,t,r){if("string"==typeof e)return e;return e({clientId:t,tokenEndpoint:r})}
/*! @azure/msal-common v15.12.0 2025-08-19 */class Zi extends Oi{constructor(e,t){var r;super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=null==(r=this.config.authOptions.authority.options.OIDCOptions)?void 0:r.defaultScopes}async acquireToken(e,t){var r,n;if(null==(r=this.performanceClient)||r.addQueueMeasurement(yn,e.correlationId),!e.code)throw pt(De);const o=li(),i=await ai(this.executeTokenRequest.bind(this),vn,this.logger,this.performanceClient,e.correlationId)(this.authority,e),s=null==(n=i.headers)?void 0:n[y],a=new Vi(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return a.validateTokenResponse(i.body),ai(a.handleServerTokenResponse.bind(a),kn,this.logger,this.performanceClient,e.correlationId)(i.body,this.authority,o,e,t,void 0,void 0,void 0,s)}getLogoutUri(e){if(!e)throw Wt(Et);const t=this.createLogoutUrlQueryString(e);return sr.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){var r;null==(r=this.performanceClient)||r.addQueueMeasurement(vn,t.correlationId);const n=this.createTokenQueryParameters(t),o=sr.appendQueryString(e.tokenEndpoint,n),i=await ai(this.createTokenRequestBody.bind(this),wn,this.logger,this.performanceClient,t.correlationId)(t);let s;if(t.clientInfo)try{const e=vo(t.clientInfo,this.cryptoUtils.base64Decode);s={credential:`${e.uid}${B}${e.utid}`,type:fo}}catch(l){this.logger.verbose("Could not parse client info for CCS Header: "+l)}const a=this.createTokenRequestHeaders(s||t.ccsCredential),c=Pi(this.config.authOptions.clientId,t);return ai(this.executePostToTokenEndpoint.bind(this),Fr,this.logger,this.performanceClient,t.correlationId)(o,i,a,c,t.correlationId,Fr)}async createTokenRequestBody(e){var t,r;null==(t=this.performanceClient)||t.addQueueMeasurement(wn,e.correlationId);const n=new Map;if(Oo(n,e.embeddedClientId||(null==(r=e.tokenBodyParameters)?void 0:r[Co])||this.config.authOptions.clientId),this.includeRedirectUri)qo(n,e.redirectUri);else if(!e.redirectUri)throw Wt(kt);if(Mo(n,e.scopes,!0,this.oidcDefaultScopes),function(e,t){e.set("code",t)}(n,e.code),Fo(n,this.config.libraryInfo),Bo(n,this.config.telemetry.application),ei(n),this.serverTelemetryManager&&!mo(this.config)&&Zo(n,this.serverTelemetryManager),e.codeVerifier&&function(e,t){e.set("code_verifier",t)}(n,e.codeVerifier),this.config.clientCredentials.clientSecret&&zo(n,this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const t=this.config.clientCredentials.clientAssertion;jo(n,await Xi(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),Go(n,t.assertionType)}if(Wo(n,x),Qo(n),e.authenticationScheme===X.POP){const t=new Qi(this.cryptoUtils,this.performanceClient);let r;if(e.popKid)r=this.cryptoUtils.encodeKid(e.popKid);else{r=(await ai(t.generateCnf.bind(t),Cn,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString}Yo(n,r)}else if(e.authenticationScheme===X.SSH){if(!e.sshJwk)throw Wt(Ht);Xo(n,e.sshJwk)}let o;if((!Qt.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&Uo(n,e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{const t=vo(e.clientInfo,this.cryptoUtils.base64Decode);o={credential:`${t.uid}${B}${t.utid}`,type:fo}}catch(i){this.logger.verbose("Could not parse client info for CCS Header: "+i)}else o=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&o)switch(o.type){case fo:try{Ho(n,wo(o.credential))}catch(i){this.logger.verbose("Could not parse home account ID for CCS Header: "+i)}break;case yo:xo(n,o.credential)}return e.embeddedClientId&&ti(n,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenBodyParameters&&Vo(n,e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[To]||Vo(n,{[To]:"1"}),Ro(n,e.correlationId,this.performanceClient),or(n)}createLogoutUrlQueryString(e){const t=new Map;return e.postLogoutRedirectUri&&function(e,t){e.set("post_logout_redirect_uri",t)}(t,e.postLogoutRedirectUri),e.correlationId&&Do(t,e.correlationId),e.idTokenHint&&function(e,t){e.set("id_token_hint",t)}(t,e.idTokenHint),e.state&&Ko(t,e.state),e.logoutHint&&function(e,t){e.set("logout_hint",t)}(t,e.logoutHint),e.extraQueryParameters&&Vo(t,e.extraQueryParameters),this.config.authOptions.instanceAware&&Jo(t),or(t,this.config.authOptions.encodeExtraQueryParams,e.extraQueryParameters)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */class es extends Oi{constructor(e,t){super(e,t)}async acquireToken(e){var t,r;null==(t=this.performanceClient)||t.addQueueMeasurement(Kr,e.correlationId);const n=li(),o=await ai(this.executeTokenRequest.bind(this),Br,this.logger,this.performanceClient,e.correlationId)(e,this.authority),i=null==(r=o.headers)?void 0:r[y],s=new Vi(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return s.validateTokenResponse(o.body),ai(s.handleServerTokenResponse.bind(s),kn,this.logger,this.performanceClient,e.correlationId)(o.body,this.authority,n,e,void 0,void 0,!0,e.forceCache,i)}async acquireTokenByRefreshToken(e){var t;if(!e)throw Wt(Rt);if(null==(t=this.performanceClient)||t.addQueueMeasurement(zr,e.correlationId),!e.account)throw pt(Ge);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await ai(this.acquireTokenWithCachedRefreshToken.bind(this),$r,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(r){const t=r instanceof $i&&r.errorCode===xi,n=r instanceof _i&&r.errorCode===ne&&r.subError===oe;if(t||n)return ai(this.acquireTokenWithCachedRefreshToken.bind(this),$r,this.logger,this.performanceClient,e.correlationId)(e,!1);throw r}return ai(this.acquireTokenWithCachedRefreshToken.bind(this),$r,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){var r,n,o;null==(r=this.performanceClient)||r.addQueueMeasurement($r,e.correlationId);const i=si(this.cacheManager.getRefreshToken.bind(this.cacheManager),Fn,this.logger,this.performanceClient,e.correlationId)(e.account,t,e.correlationId,void 0,this.performanceClient);if(!i)throw ji(xi);if(i.expiresOn&&ui(i.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw null==(n=this.performanceClient)||n.addFields({rtExpiresOnMs:Number(i.expiresOn)},e.correlationId),ji(Li);const s={...e,refreshToken:i.secret,authenticationScheme:e.authenticationScheme||X.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:fo}};try{return await ai(this.acquireToken.bind(this),Kr,this.logger,this.performanceClient,e.correlationId)(s)}catch(a){if(a instanceof $i&&(null==(o=this.performanceClient)||o.addFields({rtExpiresOnMs:Number(i.expiresOn)},e.correlationId),a.subError===Di)){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const t=this.cacheManager.generateCredentialKey(i);this.cacheManager.removeRefreshToken(t,e.correlationId)}throw a}}async executeTokenRequest(e,t){var r;null==(r=this.performanceClient)||r.addQueueMeasurement(Br,e.correlationId);const n=this.createTokenQueryParameters(e),o=sr.appendQueryString(t.tokenEndpoint,n),i=await ai(this.createTokenRequestBody.bind(this),jr,this.logger,this.performanceClient,e.correlationId)(e),s=this.createTokenRequestHeaders(e.ccsCredential),a=Pi(this.config.authOptions.clientId,e);return ai(this.executePostToTokenEndpoint.bind(this),Dr,this.logger,this.performanceClient,e.correlationId)(o,i,s,a,e.correlationId,Dr)}async createTokenRequestBody(e){var t,r,n;null==(t=this.performanceClient)||t.addQueueMeasurement(jr,e.correlationId);const o=new Map;if(Oo(o,e.embeddedClientId||(null==(r=e.tokenBodyParameters)?void 0:r[Co])||this.config.authOptions.clientId),e.redirectUri&&qo(o,e.redirectUri),Mo(o,e.scopes,!0,null==(n=this.config.authOptions.authority.options.OIDCOptions)?void 0:n.defaultScopes),Wo(o,H),Qo(o),Fo(o,this.config.libraryInfo),Bo(o,this.config.telemetry.application),ei(o),this.serverTelemetryManager&&!mo(this.config)&&Zo(o,this.serverTelemetryManager),function(e,t){e.set("refresh_token",t)}(o,e.refreshToken),this.config.clientCredentials.clientSecret&&zo(o,this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const t=this.config.clientCredentials.clientAssertion;jo(o,await Xi(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),Go(o,t.assertionType)}if(e.authenticationScheme===X.POP){const t=new Qi(this.cryptoUtils,this.performanceClient);let r;if(e.popKid)r=this.cryptoUtils.encodeKid(e.popKid);else{r=(await ai(t.generateCnf.bind(t),Cn,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString}Yo(o,r)}else if(e.authenticationScheme===X.SSH){if(!e.sshJwk)throw Wt(Ht);Xo(o,e.sshJwk)}if((!Qt.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&Uo(o,e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case fo:try{Ho(o,wo(e.ccsCredential.credential))}catch(i){this.logger.verbose("Could not parse home account ID for CCS Header: "+i)}break;case yo:xo(o,e.ccsCredential.credential)}return e.embeddedClientId&&ti(o,this.config.authOptions.clientId,this.config.authOptions.redirectUri),e.tokenBodyParameters&&Vo(o,e.tokenBodyParameters),Ro(o,e.correlationId,this.performanceClient),or(o)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */class ts extends Oi{constructor(e,t){super(e,t)}async acquireCachedToken(e){var t;null==(t=this.performanceClient)||t.addQueueMeasurement(Wr,e.correlationId);let r=de;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!Qt.isEmptyObj(e.claims))throw this.setCacheOutcome(ue,e.correlationId),pt(et);if(!e.account)throw pt(Ge);const n=e.account.tenantId||function(e){var t;const r=null==(t=new sr(e).getUrlComponents().PathSegments.slice(-1)[0])?void 0:t.toLowerCase();switch(r){case C:case I:case k:return;default:return r}}(e.authority),o=this.cacheManager.getTokenKeys(),i=this.cacheManager.getAccessToken(e.account,e,o,n);if(!i)throw this.setCacheOutcome(ge,e.correlationId),pt(et);if(s=i.cachedAt,Number(s)>li()||ui(i.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(pe,e.correlationId),pt(et);var s;i.refreshOn&&ui(i.refreshOn,0)&&(r=me);const a=e.authority||this.authority.getPreferredCache(),c={account:this.cacheManager.getAccount(this.cacheManager.generateAccountKey(e.account),e.correlationId),accessToken:i,idToken:this.cacheManager.getIdToken(e.account,e.correlationId,o,n,this.performanceClient),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(a)};return this.setCacheOutcome(r,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await ai(this.generateResultFromCacheRecord.bind(this),Qr,this.logger,this.performanceClient,e.correlationId)(c,e),r]}setCacheOutcome(e,t){var r,n;null==(r=this.serverTelemetryManager)||r.setCacheOutcome(e),null==(n=this.performanceClient)||n.addFields({cacheOutcome:e},t),e!==de&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){var r;let n;if(null==(r=this.performanceClient)||r.addQueueMeasurement(Qr,t.correlationId),e.idToken&&(n=Zt(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){const e=null==n?void 0:n.auth_time;if(!e)throw pt(Ne);er(e,t.maxAge)}return Vi.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,n)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */const rs={sendGetRequestAsync:()=>Promise.reject(pt(ht)),sendPostRequestAsync:()=>Promise.reject(pt(ht))};
/*! @azure/msal-common v15.12.0 2025-08-19 */function ns(e,t,r,n){var o,i;const s=t.correlationId,a=new Map;Oo(a,t.embeddedClientId||(null==(o=t.extraQueryParameters)?void 0:o[Co])||e.clientId);if(Mo(a,[...t.scopes||[],...t.extraScopesToConsent||[]],!0,null==(i=e.authority.options.OIDCOptions)?void 0:i.defaultScopes),qo(a,t.redirectUri),Do(a,s),function(e,t){e.set("response_mode",t||N)}(a,t.responseMode),Qo(a),t.prompt&&(!function(e,t){e.set("prompt",t)}(a,t.prompt),null==n||n.addFields({prompt:t.prompt},s)),t.domainHint&&(!function(e,t){e.set("domain_hint",t)}(a,t.domainHint),null==n||n.addFields({domainHintFromRequest:!0},s)),t.prompt!==S)if(t.sid&&t.prompt===P)r.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),Lo(a,t.sid),null==n||n.addFields({sidFromRequest:!0},s);else if(t.account){const e=function(e){var t;return(null==(t=e.idTokenClaims)?void 0:t.sid)||null}(t.account);let o=function(e){var t;return e.loginHint||(null==(t=e.idTokenClaims)?void 0:t.login_hint)||null}
/*! @azure/msal-common v15.12.0 2025-08-19 */(t.account);if(o&&t.domainHint&&(r.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),o=null),o){r.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),No(a,o),null==n||n.addFields({loginHintFromClaim:!0},s);try{Ho(a,wo(t.account.homeAccountId))}catch(c){r.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e&&t.prompt===P){r.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),Lo(a,e),null==n||n.addFields({sidFromClaim:!0},s);try{Ho(a,wo(t.account.homeAccountId))}catch(c){r.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(t.loginHint)r.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),No(a,t.loginHint),xo(a,t.loginHint),null==n||n.addFields({loginHintFromRequest:!0},s);else if(t.account.username){r.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),No(a,t.account.username),null==n||n.addFields({loginHintFromUpn:!0},s);try{Ho(a,wo(t.account.homeAccountId))}catch(c){r.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else t.loginHint&&(r.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),No(a,t.loginHint),xo(a,t.loginHint),null==n||n.addFields({loginHintFromRequest:!0},s));else r.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");return t.nonce&&function(e,t){e.set("nonce",t)}(a,t.nonce),t.state&&Ko(a,t.state),(t.claims||e.clientCapabilities&&e.clientCapabilities.length>0)&&Uo(a,t.claims,e.clientCapabilities),t.embeddedClientId&&ti(a,e.clientId,e.redirectUri),!e.instanceAware||t.extraQueryParameters&&Object.keys(t.extraQueryParameters).includes(Po)||Jo(a),a}function os(e,t,r,n){const o=or(t,r,n);return sr.appendQueryString(e.authorizationEndpoint,o)}function is(e,t){if(!e.state||!t)throw e.state?pt(Oe,"Cached State"):pt(Oe,"Server State");let r,n;try{r=decodeURIComponent(e.state)}catch(o){throw pt(Ee,e.state)}try{n=decodeURIComponent(t)}catch(o){throw pt(Ee,e.state)}if(r!==n)throw pt(Me);if(e.error||e.error_description||e.suberror){const t=function(e){var t,r;const n="code=",o=null==(t=e.error_uri)?void 0:t.lastIndexOf(n);return o&&o>=0?null==(r=e.error_uri)?void 0:r.substring(o+n.length):void 0}(e);if(zi(e.error,e.error_description,e.suberror))throw new $i(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new _i(e.error||"",e.error_description,e.suberror,t)}}function ss(e){const{skus:t,libraryName:r,libraryVersion:n,extensionName:o,extensionVersion:i}=e,s=new Map([[0,[r,n]],[2,[o,i]]]);let a=[];if(null==t?void 0:t.length){if(a=t.split(","),a.length<4)return t}else a=Array.from({length:4},()=>"|");return s.forEach((e,t)=>{var r,n;2===e.length&&(null==(r=e[0])?void 0:r.length)&&(null==(n=e[1])?void 0:n.length)&&function(e){const{skuArr:t,index:r,skuName:n,skuVersion:o}=e;if(r>=t.length)return;t[r]=[n,o].join("|")}({skuArr:a,index:t,skuName:e[0],skuVersion:e[1]})}),a.join(",")}class as{constructor(e,t){this.cacheOutcome=de,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||r.EMPTY_STRING,this.wrapperVer=e.wrapperVer||r.EMPTY_STRING,this.telemetryCacheKey=Y.CACHE_KEY+F+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${Y.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],r=this.getNativeBrokerErrorCode();(null==r?void 0:r.length)&&t.push(`broker_error=${r}`);const n=t.join(Y.VALUE_SEPARATOR),o=[e,this.getRegionDiscoveryFields()].join(Y.VALUE_SEPARATOR);return[Y.SCHEMA_VERSION,o,n].join(Y.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=as.maxErrorsToSend(e),r=e.failedRequests.slice(0,2*t).join(Y.VALUE_SEPARATOR),n=e.errors.slice(0,t).join(Y.VALUE_SEPARATOR),o=e.errors.length,i=[o,t<o?Y.OVERFLOW_TRUE:Y.OVERFLOW_FALSE].join(Y.VALUE_SEPARATOR);return[Y.SCHEMA_VERSION,e.cacheHits,r,n,i].join(Y.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=Y.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof Ce?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(Y.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t,this.correlationId)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e,this.correlationId),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){const e=this.getLastRequests(),t=as.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey,this.correlationId);else{const r={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,r,this.correlationId)}}static maxErrorsToSend(e){let t,n=0,o=0;const i=e.errors.length;for(t=0;t<i;t++){const i=e.failedRequests[2*t]||r.EMPTY_STRING,s=e.failedRequests[2*t+1]||r.EMPTY_STRING,a=e.errors[t]||r.EMPTY_STRING;if(o+=i.toString().length+s.toString().length+a.length+3,!(o<Y.MAX_LAST_HEADER_BYTES))break;n+=1}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||r.EMPTY_STRING),e.push(this.regionSource||r.EMPTY_STRING),e.push(this.regionOutcome||r.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t,this.correlationId)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e,this.correlationId)}static makeExtraSkuString(e){return ss(e)}}
/*! @azure/msal-common v15.12.0 2025-08-19 */const cs="missing_kid_error",ls="missing_alg_error",hs={[cs]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[ls]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class ds extends Ce{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,ds.prototype)}}function us(e){return new ds(e,hs[e])}
/*! @azure/msal-common v15.12.0 2025-08-19 */class gs{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw us(cs);if(!e.alg)throw us(ls);const t=new gs({typ:e.typ||fe,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */const ps="pkce_not_created",ms="ear_jwk_empty",fs="ear_jwe_empty",ys="crypto_nonexistent",vs="empty_navigate_uri",ws="hash_empty_error",Cs="no_state_in_hash",Is="hash_does_not_contain_known_properties",ks="unable_to_parse_state",As="state_interaction_type_mismatch",Ts="interaction_in_progress",bs="popup_window_error",Ss="empty_window_error",_s="user_cancelled",Ps="monitor_popup_timeout",Rs="monitor_window_timeout",Es="redirect_in_iframe",Ms="block_iframe_reload",Os="block_nested_popups",qs="iframe_closed_prematurely",Ns="silent_logout_unsupported",xs="no_account_error",Hs="silent_prompt_value_error",Ls="no_token_request_cache_error",Us="unable_to_parse_token_request_cache_error",Ds="auth_request_not_set_error",Fs="invalid_cache_type",Bs="non_browser_environment",Ks="database_not_open",$s="no_network_connectivity",zs="post_request_failed",js="get_request_failed",Gs="failed_to_parse_response",Ws="unable_to_load_token",Qs="crypto_key_not_found",Js="auth_code_required",Vs="auth_code_or_nativeAccountId_required",Ys="spa_code_and_nativeAccountId_present",Xs="database_unavailable",Zs="unable_to_acquire_token_from_native_platform",ea="native_handshake_timeout",ta="native_extension_not_installed",ra="native_connection_not_established",na="uninitialized_public_client_application",oa="native_prompt_not_supported",ia="invalid_base64_string",sa="invalid_pop_token_request",aa="failed_to_build_headers",ca="failed_to_parse_headers",la="failed_to_decrypt_ear_response",ha="timed_out",da="For more visit: aka.ms/msaljs/browser-errors",ua={[ps]:"The PKCE code challenge and verifier could not be generated.",[ms]:"No EAR encryption key provided. This is unexpected.",[fs]:"Server response does not contain ear_jwe property. This is unexpected.",[ys]:"The crypto object or function is not available.",[vs]:"Navigation URI is empty. Please check stack trace for more info.",[ws]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${da}`,[Cs]:"Hash does not contain state. Please verify that the request originated from msal.",[Is]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${da}`,[ks]:"Unable to parse state. Please verify that the request originated from msal.",[As]:"Hash contains state but the interaction type does not match the caller.",[Ts]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${da}`,[bs]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[Ss]:"window.open returned null or undefined window object.",[_s]:"User cancelled the flow.",[Ps]:`Token acquisition in popup failed due to timeout.  ${da}`,[Rs]:`Token acquisition in iframe failed due to timeout.  ${da}`,[Es]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[Ms]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${da}`,[Os]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[qs]:"The iframe being monitored was closed prematurely.",[Ns]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[xs]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[Hs]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[Ls]:"No token request found in cache.",[Us]:"The cached token request could not be parsed.",[Ds]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[Fs]:"Invalid cache type",[Bs]:"Login and token requests are not supported in non-browser environments.",[Ks]:"Database is not open!",[$s]:"No network connectivity. Check your internet connection.",[zs]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[js]:"Network request failed. Please check the network trace to determine root cause.",[Gs]:"Failed to parse network response. Check network trace.",[Ws]:"Error loading token to cache.",[Qs]:"Cryptographic Key or Keypair not found in browser storage.",[Js]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[Vs]:"An authorization code or nativeAccountId must be provided to this flow.",[Ys]:"Request cannot contain both spa code and native account id.",[Xs]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[Zs]:`Unable to acquire token from native platform.  ${da}`,[ea]:"Timed out while attempting to establish connection to browser extension",[ta]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[ra]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${da}`,[na]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${da}`,[oa]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[ia]:"Invalid base64 encoded string.",[sa]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",[aa]:"Failed to build request headers object.",[ca]:"Failed to parse response headers",[la]:"Failed to decrypt ear response",[ha]:"The request timed out."};class ga extends Ce{constructor(e,t){super(e,ua[e],t),Object.setPrototypeOf(this,ga.prototype),this.name="BrowserAuthError"}}function pa(e,t){return new ga(e,t)}
/*! @azure/msal-browser v4.22.1 2025-09-09 */const ma="invalid_grant",fa=483,ya=600,va="msal",wa=30,Ca="msal.js.browser",Ia="53ee284d-920a-4b59-9d30-a60315b26836",ka="ppnbnpeolgkicgegkbkbjmhlideopiji",Aa="MATS",Ta="MicrosoftEntra",ba="DOM API",Sa="get-token-and-sign-out",_a="PlatformAuthDOMHandler",Pa="PlatformAuthExtensionHandler",Ra="Handshake",Ea="HandshakeResponse",Ma="GetToken",Oa="Response",qa="localStorage",Na="sessionStorage",xa="memoryStorage",Ha="GET",La="POST",Ua="signin",Da="signout",Fa="request.origin",Ba="urlHash",Ka="request.params",$a="code.verifier",za="interaction.status",ja="request.native",Ga="wrapper.sku",Wa="wrapper.version",Qa=861,Ja=862,Va=863,Ya=865,Xa=866,Za=61,ec=961,tc=962;var rc,nc;(nc=rc||(rc={})).Redirect="redirect",nc.Popup="popup",nc.Silent="silent",nc.None="none";const oc="startup",ic="login",sc="logout",ac="acquireToken",cc="ssoSilent",lc="handleRedirect",hc="none",dc={scopes:d},uc="@azure/msal-react",gc="msal.db",pc=`${gc}.keys`,mc=0,fc=1,yc=2,vc=3,wc=4,Cc=5,Ic=[mc,Cc,wc];
/*! @azure/msal-browser v4.22.1 2025-09-09 */
function kc(e){return encodeURIComponent(Tc(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function Ac(e){return bc(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Tc(e){return bc((new TextEncoder).encode(e))}function bc(e){const t=Array.from(e,e=>String.fromCodePoint(e)).join("");return btoa(t)}
/*! @azure/msal-browser v4.22.1 2025-09-09 */function Sc(e){return(new TextDecoder).decode(_c(e))}function _c(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw pa(ia)}const r=atob(t);return Uint8Array.from(r,e=>e.codePointAt(0)||0)}
/*! @azure/msal-browser v4.22.1 2025-09-09 */const Pc="AES-GCM",Rc="HKDF",Ec="SHA-256",Mc=new Uint8Array([1,0,1]),Oc="0123456789abcdef",qc=new Uint32Array(1),Nc="raw",xc="encrypt",Hc="decrypt",Lc={name:"RSASSA-PKCS1-v1_5",hash:Ec,modulusLength:2048,publicExponent:Mc};async function Uc(e,t,r){null==t||t.addQueueMeasurement(Wn,r);const n=(new TextEncoder).encode(e);return window.crypto.subtle.digest(Ec,n)}function Dc(e){return window.crypto.getRandomValues(e)}function Fc(){return window.crypto.getRandomValues(qc),qc[0]}function Bc(){const e=Date.now(),t=1024*Fc()+(1023&Fc()),r=new Uint8Array(16),n=Math.trunc(t/2**30),o=t&2**30-1,i=Fc();r[0]=e/2**40,r[1]=e/2**32,r[2]=e/2**24,r[3]=e/65536,r[4]=e/256,r[5]=e,r[6]=112|n>>>8,r[7]=n,r[8]=128|o>>>24,r[9]=o>>>16,r[10]=o>>>8,r[11]=o,r[12]=i>>>24,r[13]=i>>>16,r[14]=i>>>8,r[15]=i;let s="";for(let a=0;a<r.length;a++)s+=Oc.charAt(r[a]>>>4),s+=Oc.charAt(15&r[a]),3!==a&&5!==a&&7!==a&&9!==a||(s+="-");return s}async function Kc(e){return window.crypto.subtle.exportKey("jwk",e)}async function $c(){const e=await jc(),t={alg:"dir",kty:"oct",k:Ac(new Uint8Array(e))};return Tc(JSON.stringify(t))}async function zc(e,t){const r=t.split(".");if(5!==r.length)throw pa(la,"jwe_length");const n=await async function(e){const t=Sc(e),r=_c(JSON.parse(t).k);return window.crypto.subtle.importKey(Nc,r,Pc,!1,[Hc])}(e).catch(()=>{throw pa(la,"import_key")});try{const e=(new TextEncoder).encode(r[0]),t=_c(r[2]),o=_c(r[3]),i=_c(r[4]),s=8*i.byteLength,a=new Uint8Array(o.length+i.length);a.set(o),a.set(i,o.length);const c=await window.crypto.subtle.decrypt({name:Pc,iv:t,tagLength:s,additionalData:e},n,a);return(new TextDecoder).decode(c)}catch(o){throw pa(la,"decrypt")}}async function jc(){const e=await window.crypto.subtle.generateKey({name:Pc,length:256},!0,[xc,Hc]);return window.crypto.subtle.exportKey(Nc,e)}async function Gc(e){return window.crypto.subtle.importKey(Nc,e,Rc,!1,["deriveKey"])}async function Wc(e,t,r){return window.crypto.subtle.deriveKey({name:Rc,salt:t,hash:Ec,info:(new TextEncoder).encode(r)},e,{name:Pc,length:256},!1,[xc,Hc])}async function Qc(e,t,r){const n=(new TextEncoder).encode(t),o=window.crypto.getRandomValues(new Uint8Array(16)),i=await Wc(e,o,r),s=await window.crypto.subtle.encrypt({name:Pc,iv:new Uint8Array(12)},i,n);return{data:Ac(new Uint8Array(s)),nonce:Ac(o)}}async function Jc(e,t,r,n){const o=_c(n),i=await Wc(e,_c(t),r),s=await window.crypto.subtle.decrypt({name:Pc,iv:new Uint8Array(12)},i,o);return(new TextDecoder).decode(s)}async function Vc(e){const t=await Uc(e);return Ac(new Uint8Array(t))}
/*! @azure/msal-browser v4.22.1 2025-09-09 */const Yc="storage_not_supported",Xc="stubbed_public_client_application_called",Zc="in_mem_redirect_unavailable",el={[Yc]:"Given storage configuration option was not supported.",[Xc]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[Zc]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};class tl extends Ce{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,tl.prototype)}}function rl(e){return new tl(e,el[e])}
/*! @azure/msal-browser v4.22.1 2025-09-09 */function nl(e){e.location.hash="","function"==typeof e.history.replaceState&&e.history.replaceState(null,"",`${e.location.origin}${e.location.pathname}${e.location.search}`)}function ol(){return window.parent!==window}function il(){return"undefined"!=typeof window&&window.location?window.location.href.split("?")[0].split("#")[0]:""}function sl(){if("undefined"!=typeof window&&window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf(`${va}.`))throw pa(Os)}function al(){if("undefined"==typeof window)throw pa(Bs)}function cl(e){if(!e)throw pa(na)}function ll(e){al(),function(){if(sr.hashContainsKnownProperties(window.location.hash)&&ol())throw pa(Ms)}(),sl(),cl(e)}function hl(e,t){if(ll(e),function(e){if(ol()&&!e)throw pa(Es)}(t.system.allowRedirectInIframe),t.cache.cacheLocation===xa&&!t.cache.storeAuthStateInCookie)throw rl(Zc)}function dl(e){const t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t),window.setTimeout(()=>{try{document.head.removeChild(t)}catch{}},1e4)}
/*! @azure/msal-browser v4.22.1 2025-09-09 */
class ul{navigateInternal(e,t){return ul.defaultNavigateWindow(e,t)}navigateExternal(e,t){return ul.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise((e,r)=>{setTimeout(()=>{r(pa(ha,"failed_to_redirect"))},t.timeout)})}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class gl{async sendGetRequestAsync(e,t){let r,n={},o=0;const i=pl(t);try{r=await fetch(e,{method:Ha,headers:i})}catch(s){throw Mi(pa(window.navigator.onLine?js:$s),void 0,void 0,s)}n=ml(r.headers);try{return o=r.status,{headers:n,body:await r.json(),status:o}}catch(s){throw Mi(pa(Gs),o,n,s)}}async sendPostRequestAsync(e,t){const r=t&&t.body||"",n=pl(t);let o,i=0,s={};try{o=await fetch(e,{method:La,headers:n,body:r})}catch(a){throw Mi(pa(window.navigator.onLine?zs:$s),void 0,void 0,a)}s=ml(o.headers);try{return i=o.status,{headers:s,body:await o.json(),status:i}}catch(a){throw Mi(pa(Gs),i,s,a)}}}function pl(e){try{const t=new Headers;if(!e||!e.headers)return t;const r=e.headers;return Object.entries(r).forEach(([e,r])=>{t.append(e,r)}),t}catch(t){throw Mi(pa(aa),void 0,void 0,t)}}function ml(e){try{const t={};return e.forEach((e,r)=>{t[r]=e}),t}catch(t){throw pa(ca)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */const fl=1e4;
/*! @azure/msal-browser v4.22.1 2025-09-09 */
const yl="4.22.1",vl="msal",wl="browser",Cl=`${vl}.${wl}.log.level`,Il=`${vl}.${wl}.log.pii`,kl=`${vl}.${wl}.platform.auth.dom`,Al=`${vl}.version`,Tl="account.keys",bl="token.keys";function Sl(e=1){return e<1?`${vl}.${Tl}`:`${vl}.${e}.${Tl}`}function _l(e,t=1){return t<1?`${vl}.${bl}.${e}`:`${vl}.${t}.${bl}.${e}`}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Pl{static loggerCallback(e,t){switch(e){case ft.Error:return void console.error(t);case ft.Info:return void console.info(t);case ft.Verbose:return void console.debug(t);case ft.Warning:return void console.warn(t);default:return void console.log(t)}}constructor(e){var t;let n;this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:e,cache:t,system:n,telemetry:o},i){const s={clientId:r.EMPTY_STRING,authority:`${r.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:r.EMPTY_STRING,authorityMetadata:r.EMPTY_STRING,redirectUri:"undefined"!=typeof window?il():"",postLogoutRedirectUri:r.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:wr,OIDCOptions:{serverResponseType:q,defaultScopes:[r.OPENID_SCOPE,r.PROFILE_SCOPE,r.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:It,tenant:r.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1,encodeExtraQueryParams:!1},a={cacheLocation:Na,cacheRetentionDays:5,temporaryCacheLocation:Na,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!(!t||t.cacheLocation!==qa),claimsBasedCachingEnabled:!1},c={loggerCallback:()=>{},logLevel:ft.Info,piiLoggingEnabled:!1},l={...{...so,loggerOptions:c,networkClient:i?new gl:rs,navigationClient:new ul,loadFrameTimeout:0,windowHashTimeout:(null==n?void 0:n.loadFrameTimeout)||6e4,iframeHashTimeout:(null==n?void 0:n.loadFrameTimeout)||fl,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowPlatformBroker:!1,nativeBrokerHandshakeTimeout:(null==n?void 0:n.nativeBrokerHandshakeTimeout)||2e3,pollIntervalMilliseconds:wa},...n,loggerOptions:(null==n?void 0:n.loggerOptions)||c},h={application:{appName:r.EMPTY_STRING,appVersion:r.EMPTY_STRING},client:new io};(null==e?void 0:e.protocolMode)!==Cr&&(null==e?void 0:e.OIDCOptions)&&new vt(l.loggerOptions).warning(JSON.stringify(Wt(Ft)));if((null==e?void 0:e.protocolMode)&&e.protocolMode===Cr&&(null==l?void 0:l.allowPlatformBroker))throw Wt(Bt);return{auth:{...s,...e,OIDCOptions:{...s.OIDCOptions,...null==e?void 0:e.OIDCOptions}},cache:{...a,...t},system:l,telemetry:{...h,...o}}}(e,this.browserEnvironment);try{n=window[Na]}catch(l){}const o=null==n?void 0:n.getItem(Cl),i=null==(t=null==n?void 0:n.getItem(Il))?void 0:t.toLowerCase(),s="true"===i||"false"!==i&&void 0,a={...this.config.system.loggerOptions},c=o&&Object.keys(ft).includes(o)?ft[o]:void 0;c&&(a.loggerCallback=Pl.loggerCallback,a.logLevel=c),void 0!==s&&(a.piiLoggingEnabled=s),this.logger=new vt(a,"@azure/msal-browser",yl),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Rl extends Pl{getModuleName(){return Rl.MODULE_NAME}getId(){return Rl.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}Rl.MODULE_NAME="",Rl.ID="StandardOperatingContext";
/*! @azure/msal-browser v4.22.1 2025-09-09 */
class El{constructor(){this.dbName=gc,this.version=1,this.tableName=pc,this.dbOpen=!1}async open(){return new Promise((e,t)=>{const r=window.indexedDB.open(this.dbName,this.version);r.addEventListener("upgradeneeded",e=>{e.target.result.createObjectStore(this.tableName)}),r.addEventListener("success",t=>{const r=t;this.db=r.target.result,this.dbOpen=!0,e()}),r.addEventListener("error",()=>t(pa(Xs)))})}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(pa(Ks));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);n.addEventListener("success",e=>{const r=e;this.closeConnection(),t(r.target.result)}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((r,n)=>{if(!this.db)return n(pa(Ks));const o=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);o.addEventListener("success",()=>{this.closeConnection(),r()}),o.addEventListener("error",e=>{this.closeConnection(),n(e)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(pa(Ks));const n=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);n.addEventListener("success",()=>{this.closeConnection(),t()}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(pa(Ks));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",t=>{const r=t;this.closeConnection(),e(r.target.result)}),r.addEventListener("error",e=>{this.closeConnection(),t(e)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(pa(Ks));const n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);n.addEventListener("success",e=>{const r=e;this.closeConnection(),t(1===r.target.result)}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{const r=window.indexedDB.deleteDatabase(gc),n=setTimeout(()=>t(!1),200);r.addEventListener("success",()=>(clearTimeout(n),e(!0))),r.addEventListener("blocked",()=>(clearTimeout(n),e(!0))),r.addEventListener("error",()=>(clearTimeout(n),t(!1)))})}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Ml{constructor(){this.cache=new Map}async initialize(){}getItem(e){return this.cache.get(e)||null}getUserData(e){return this.getItem(e)}setItem(e,t){this.cache.set(e,t)}async setUserData(e,t){this.setItem(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach((t,r)=>{e.push(r)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}decryptData(){return Promise.resolve(null)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Ol{constructor(e){this.inMemoryCache=new Ml,this.indexedDBCache=new El,this.logger=e}handleDatabaseAccessError(e){if(!(e instanceof ga&&e.errorCode===Xs))throw e;this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.")}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(r){this.handleDatabaseAccessError(r)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(r){this.handleDatabaseAccessError(r)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(t){this.handleDatabaseAccessError(t)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(t){this.handleDatabaseAccessError(t)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(r){this.handleDatabaseAccessError(r)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class ql{constructor(e,t,r){this.logger=e,function(e){if(!window)throw pa(Bs);if(!window.crypto)throw pa(ys);if(!e&&!window.crypto.subtle)throw pa(ys,"crypto_subtle_undefined")}(r??!1),this.cache=new Ol(this.logger),this.performanceClient=t}createNewGuid(){return Bc()}base64Encode(e){return Tc(e)}base64Decode(e){return Sc(e)}base64UrlEncode(e){return kc(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){var t;const r=null==(t=this.performanceClient)?void 0:t.startMeasurement(Rr,e.correlationId),n=await async function(e,t){return window.crypto.subtle.generateKey(Lc,e,t)}(ql.EXTRACTABLE,ql.POP_KEY_USAGES),o=await Kc(n.publicKey),i=Nl({e:o.e,kty:o.kty,n:o.n}),s=await this.hashString(i),a=await Kc(n.privateKey),c=await async function(e,t,r){return window.crypto.subtle.importKey("jwk",e,Lc,t,r)}(a,!1,["sign"]);return await this.cache.setItem(s,{privateKey:c,publicKey:n.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),r&&r.end({success:!0}),s}async removeTokenBindingKey(e){await this.cache.removeItem(e);if(await this.cache.containsKey(e))throw pt(ot)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,r,n){var o;const i=null==(o=this.performanceClient)?void 0:o.startMeasurement(Er,n),s=await this.cache.getItem(t);if(!s)throw pa(Qs);const a=await Kc(s.publicKey),c=Nl(a),l=kc(JSON.stringify({kid:t})),h=kc(gs.getShrHeaderString({...null==r?void 0:r.header,alg:a.alg,kid:l}));e.cnf={jwk:JSON.parse(c)};const d=`${h}.${kc(JSON.stringify(e))}`,u=(new TextEncoder).encode(d),g=await async function(e,t){return window.crypto.subtle.sign(Lc,e,t)}(s.privateKey,u),p=`${d}.${Ac(new Uint8Array(g))}`;return i&&i.end({success:!0}),p}async hashString(e){return Vc(e)}}function Nl(e){return JSON.stringify(e,Object.keys(e).sort())}
/*! @azure/msal-browser v4.22.1 2025-09-09 */ql.POP_KEY_USAGES=["sign","verify"],ql.EXTRACTABLE=!0;const xl=864e5,Hl="Lax",Ll="None";class Ul{initialize(){return Promise.resolve()}getItem(e){const t=`${encodeURIComponent(e)}`,r=document.cookie.split(";");for(let n=0;n<r.length;n++){const e=r[n],[o,...i]=decodeURIComponent(e).trim().split("="),s=i.join("=");if(o===t)return s}return""}getUserData(){throw pt(ht)}setItem(e,t,r,n=!0,o=Hl){let i=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=${o};`;if(r){const e=function(e){const t=new Date((new Date).getTime()+e*xl);return t.toUTCString()}
/*! @azure/msal-browser v4.22.1 2025-09-09 */(r);i+=`expires=${e};`}(n||o===Ll)&&(i+="Secure;"),document.cookie=i}async setUserData(){return Promise.reject(pt(ht))}removeItem(e){this.setItem(e,"",-1)}getKeys(){const e=document.cookie.split(";"),t=[];return e.forEach(e=>{const r=decodeURIComponent(e).trim().split("=");t.push(r[0])}),t}containsKey(e){return this.getKeys().includes(e)}decryptData(){return Promise.resolve(null)}}function Dl(e,t){const r=e.getItem(Sl(t));return r?JSON.parse(r):[]}function Fl(e,t,r){const n=t.getItem(_l(e,r));if(n){const e=JSON.parse(n);if(e&&e.hasOwnProperty("idToken")&&e.hasOwnProperty("accessToken")&&e.hasOwnProperty("refreshToken"))return e}return{idToken:[],accessToken:[],refreshToken:[]}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */function Bl(e){return e.hasOwnProperty("id")&&e.hasOwnProperty("nonce")&&e.hasOwnProperty("data")}
/*! @azure/msal-browser v4.22.1 2025-09-09 */const Kl="msal.cache.encryption";class $l{constructor(e,t,r){if(!window.localStorage)throw rl(Yc);this.memoryStorage=new Ml,this.initialized=!1,this.clientId=e,this.logger=t,this.performanceClient=r,this.broadcast=new BroadcastChannel("msal.broadcast.cache")}async initialize(e){const t=new Ul,r=t.getItem(Kl);let n={key:"",id:""};if(r)try{n=JSON.parse(r)}catch(o){}if(n.key&&n.id){const t=si(_c,Yn,this.logger,this.performanceClient,e)(n.key);this.encryptionCookie={id:n.id,key:await ai(Gc,Jn,this.logger,this.performanceClient,e)(t)}}else{const r=Bc(),n=await ai(jc,Vn,this.logger,this.performanceClient,e)(),o=si(Ac,Xn,this.logger,this.performanceClient,e)(new Uint8Array(n));this.encryptionCookie={id:r,key:await ai(Gc,Jn,this.logger,this.performanceClient,e)(n)};const i={id:r,key:o};t.setItem(Kl,JSON.stringify(i),0,!0,Ll)}await ai(this.importExistingCache.bind(this),Bn,this.logger,this.performanceClient,e)(e),this.broadcast.addEventListener("message",this.updateCache.bind(this)),this.initialized=!0}getItem(e){return window.localStorage.getItem(e)}getUserData(e){if(!this.initialized)throw pa(na);return this.memoryStorage.getItem(e)}async decryptData(e,t,r){if(!this.initialized||!this.encryptionCookie)throw pa(na);if(t.id!==this.encryptionCookie.id)return this.performanceClient.incrementFields({encryptedCacheExpiredCount:1},r),null;const n=await ai(Jc,eo,this.logger,this.performanceClient,r)(this.encryptionCookie.key,t.nonce,this.getContext(e),t.data);if(!n)return null;try{return JSON.parse(n)}catch(o){return this.performanceClient.incrementFields({encryptedCacheCorruptionCount:1},r),null}}setItem(e,t){window.localStorage.setItem(e,t)}async setUserData(e,t,r,n){if(!this.initialized||!this.encryptionCookie)throw pa(na);const{data:o,nonce:i}=await ai(Qc,Zn,this.logger,this.performanceClient,r)(this.encryptionCookie.key,t,this.getContext(e)),s={id:this.encryptionCookie.id,nonce:i,data:o,lastUpdatedAt:n};this.memoryStorage.setItem(e,t),this.setItem(e,JSON.stringify(s)),this.broadcast.postMessage({key:e,value:t,context:this.getContext(e)})}removeItem(e){this.memoryStorage.containsKey(e)&&(this.memoryStorage.removeItem(e),this.broadcast.postMessage({key:e,value:null,context:this.getContext(e)})),window.localStorage.removeItem(e)}getKeys(){return Object.keys(window.localStorage)}containsKey(e){return window.localStorage.hasOwnProperty(e)}clear(){this.memoryStorage.clear();Dl(this).forEach(e=>this.removeItem(e));const e=Fl(this.clientId,this);e.idToken.forEach(e=>this.removeItem(e)),e.accessToken.forEach(e=>this.removeItem(e)),e.refreshToken.forEach(e=>this.removeItem(e)),this.getKeys().forEach(e=>{(e.startsWith(vl)||-1!==e.indexOf(this.clientId))&&this.removeItem(e)})}async importExistingCache(e){if(!this.encryptionCookie)return;let t=Dl(this);t=await this.importArray(t,e),t.length?this.setItem(Sl(),JSON.stringify(t)):this.removeItem(Sl());const r=Fl(this.clientId,this);r.idToken=await this.importArray(r.idToken,e),r.accessToken=await this.importArray(r.accessToken,e),r.refreshToken=await this.importArray(r.refreshToken,e),r.idToken.length||r.accessToken.length||r.refreshToken.length?this.setItem(_l(this.clientId),JSON.stringify(r)):this.removeItem(_l(this.clientId))}async getItemFromEncryptedCache(e,t){if(!this.encryptionCookie)return null;const r=this.getItem(e);if(!r)return null;let n;try{n=JSON.parse(r)}catch(o){return null}return Bl(n)?n.id!==this.encryptionCookie.id?(this.performanceClient.incrementFields({encryptedCacheExpiredCount:1},t),null):ai(Jc,eo,this.logger,this.performanceClient,t)(this.encryptionCookie.key,n.nonce,this.getContext(e),n.data):(this.performanceClient.incrementFields({unencryptedCacheCount:1},t),n)}async importArray(e,t){const r=[],n=[];return e.forEach(e=>{const o=this.getItemFromEncryptedCache(e,t).then(t=>{t?(this.memoryStorage.setItem(e,t),r.push(e)):this.removeItem(e)});n.push(o)}),await Promise.all(n),r}getContext(e){let t="";return e.includes(this.clientId)&&(t=this.clientId),t}updateCache(e){this.logger.trace("Updating internal cache from broadcast event");const t=this.performanceClient.startMeasurement($n);t.add({isBackground:!0});const{key:r,value:n,context:o}=e.data;return r?o&&o!==this.clientId?(this.logger.trace(`Ignoring broadcast event from clientId: ${o}`),void t.end({success:!1,errorCode:"contextMismatch"})):(n?(this.memoryStorage.setItem(r,n),this.logger.verbose("Updated item in internal cache")):(this.memoryStorage.removeItem(r),this.logger.verbose("Removed item from internal cache")),void t.end({success:!0})):(this.logger.error("Broadcast event missing key"),void t.end({success:!1,errorCode:"noKey"}))}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class zl{constructor(){if(!window.sessionStorage)throw rl(Yc)}async initialize(){}getItem(e){return window.sessionStorage.getItem(e)}getUserData(e){return this.getItem(e)}setItem(e,t){window.sessionStorage.setItem(e,t)}async setUserData(e,t){this.setItem(e,t)}removeItem(e){window.sessionStorage.removeItem(e)}getKeys(){return Object.keys(window.sessionStorage)}containsKey(e){return window.sessionStorage.hasOwnProperty(e)}decryptData(){return Promise.resolve(null)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */const jl="msal:initializeStart",Gl="msal:initializeEnd",Wl="msal:accountAdded",Ql="msal:accountRemoved",Jl="msal:activeAccountChanged",Vl="msal:loginStart",Yl="msal:loginSuccess",Xl="msal:loginFailure",Zl="msal:acquireTokenStart",eh="msal:acquireTokenSuccess",th="msal:acquireTokenFailure",rh="msal:acquireTokenFromNetworkStart",nh="msal:ssoSilentStart",oh="msal:ssoSilentSuccess",ih="msal:ssoSilentFailure",sh="msal:acquireTokenByCodeStart",ah="msal:acquireTokenByCodeSuccess",ch="msal:acquireTokenByCodeFailure",lh="msal:handleRedirectStart",hh="msal:handleRedirectEnd",dh="msal:popupOpened",uh="msal:logoutStart",gh="msal:logoutSuccess",ph="msal:logoutFailure",mh="msal:logoutEnd",fh="msal:restoreFromBFCache";
/*! @azure/msal-browser v4.22.1 2025-09-09 */function yh(e,t){const r=e.indexOf(t);r>-1&&e.splice(r,1)}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class vh extends yr{constructor(e,t,r,n,o,i,s){super(e,r,n,o,s),this.cacheConfig=t,this.logger=n,this.internalStorage=new Ml,this.browserStorage=wh(e,t.cacheLocation,n,o),this.temporaryCacheStorage=wh(e,t.temporaryCacheLocation,n,o),this.cookieStorage=new Ul,this.eventHandler=i}async initialize(e){this.performanceClient.addFields({cacheLocation:this.cacheConfig.cacheLocation,cacheRetentionDays:this.cacheConfig.cacheRetentionDays},e),await this.browserStorage.initialize(e),await this.migrateExistingCache(e),this.trackVersionChanges(e)}async migrateExistingCache(e){const t=Dl(this.browserStorage,0),r=Fl(this.clientId,this.browserStorage,0);this.performanceClient.addFields({oldAccountCount:t.length,oldAccessCount:r.accessToken.length,oldIdCount:r.idToken.length,oldRefreshCount:r.refreshToken.length},e);const n=Dl(this.browserStorage,1),o=Fl(this.clientId,this.browserStorage,1);this.performanceClient.addFields({currAccountCount:n.length,currAccessCount:o.accessToken.length,currIdCount:o.idToken.length,currRefreshCount:o.refreshToken.length},e),await Promise.all([this.updateV0ToCurrent(1,t,n,e),this.updateV0ToCurrent(1,r.idToken,o.idToken,e),this.updateV0ToCurrent(1,r.accessToken,o.accessToken,e),this.updateV0ToCurrent(1,r.refreshToken,o.refreshToken,e)]),t.length>0?this.browserStorage.setItem(Sl(0),JSON.stringify(t)):this.browserStorage.removeItem(Sl(0)),n.length>0?this.browserStorage.setItem(Sl(1),JSON.stringify(n)):this.browserStorage.removeItem(Sl(1)),this.setTokenKeys(r,e,0),this.setTokenKeys(o,e,1)}async updateV0ToCurrent(e,t,r,n){const o=[];for(const i of[...t]){const s=this.browserStorage.getItem(i),a=this.validateAndParseJson(s||"");if(!a){yh(t,i);continue}a.lastUpdatedAt||(a.lastUpdatedAt=Date.now().toString(),this.setItem(i,JSON.stringify(a),n));const c=Bl(a)?await this.browserStorage.decryptData(i,a,n):a;let l;if(c&&(vi(c)||wi(c))&&(l=c.expiresOn),!c||gi(a.lastUpdatedAt,this.cacheConfig.cacheRetentionDays)||l&&ui(l,300))this.browserStorage.removeItem(i),yh(t,i),this.performanceClient.incrementFields({expiredCacheRemovedCount:1},n);else if(this.cacheConfig.cacheLocation!==qa||Bl(a)){const t=`${vl}.${e}-${i}`,s=this.browserStorage.getItem(t);if(!s){o.push(this.setUserData(t,JSON.stringify(c),n,a.lastUpdatedAt).then(()=>{r.push(t),this.performanceClient.incrementFields({upgradedCacheCount:1},n)}));continue}{const e=this.validateAndParseJson(s);if(Number(a.lastUpdatedAt)>Number(e.lastUpdatedAt)){o.push(this.setUserData(t,JSON.stringify(c),n,a.lastUpdatedAt).then(()=>{this.performanceClient.incrementFields({updatedCacheFromV0Count:1},n)}));continue}}}}return Promise.all(o)}trackVersionChanges(e){const t=this.browserStorage.getItem(Al);t&&(this.logger.info(`MSAL.js was last initialized by version: ${t}`),this.performanceClient.addFields({previousLibraryVersion:t},e)),t!==yl&&this.setItem(Al,yl,e)}validateAndParseJson(e){if(!e)return null;try{const t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(t){return null}}setItem(e,t,r){let n=0,o=[];for(let s=0;s<=20;s++)try{this.browserStorage.setItem(e,t),s>0&&(s<=n?this.removeAccessTokenKeys(o.slice(0,s),r,0):(this.removeAccessTokenKeys(o.slice(0,n),r,0),this.removeAccessTokenKeys(o.slice(n,s),r)));break}catch(i){const a=fr(i);if(!(a.errorCode===ur&&s<20))throw a;if(!o.length){const r=e===_l(this.clientId,0)?JSON.parse(t).accessToken:this.getTokenKeys(0).accessToken,i=e===_l(this.clientId)?JSON.parse(t).accessToken:this.getTokenKeys().accessToken;o=[...r,...i],n=r.length}if(o.length<=s)throw a;this.removeAccessToken(o[s],r,!1)}}async setUserData(e,t,r,n){let o=0,i=[];for(let a=0;a<=20;a++)try{await ai(this.browserStorage.setUserData.bind(this.browserStorage),Kn,this.logger,this.performanceClient)(e,t,r,n),a>0&&(a<=o?this.removeAccessTokenKeys(i.slice(0,a),r,0):(this.removeAccessTokenKeys(i.slice(0,o),r,0),this.removeAccessTokenKeys(i.slice(o,a),r)));break}catch(s){const e=fr(s);if(!(e.errorCode===ur&&a<20))throw e;if(!i.length){const e=this.getTokenKeys(0).accessToken,t=this.getTokenKeys().accessToken;i=[...e,...t],o=e.length}if(i.length<=a)throw e;this.removeAccessToken(i[a],r,!1)}}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const r=this.browserStorage.getUserData(e);if(!r)return this.removeAccountKeyFromMap(e,t),null;const n=this.validateAndParseJson(r);return n&&Ni.isAccountEntity(n)?yr.toObject(new Ni,n):null}async setAccount(e,t){this.logger.trace("BrowserCacheManager.setAccount called");const r=this.generateAccountKey(e.getAccountInfo()),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.addAccountKeyToMap(r,t);this.cacheConfig.cacheLocation===qa&&o&&this.eventHandler.emitEvent(Wl,void 0,e.getAccountInfo())}getAccountKeys(){return Dl(this.browserStorage)}addAccountKeyToMap(e,t){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const r=this.getAccountKeys();return-1===r.indexOf(e)?(r.push(e),this.setItem(Sl(),JSON.stringify(r),t),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added"),!0):(this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map"),!1)}removeAccountKeyFromMap(e,t){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const r=this.getAccountKeys(),n=r.indexOf(e);if(n>-1){if(r.splice(n,1),0===r.length)return void this.removeItem(Sl());this.setItem(Sl(),JSON.stringify(r),t),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")}else this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}removeAccount(e,t){const r=this.getActiveAccount(t);(null==r?void 0:r.homeAccountId)===e.homeAccountId&&(null==r?void 0:r.environment)===e.environment&&this.setActiveAccount(null,t),super.removeAccount(e,t),this.removeAccountKeyFromMap(this.generateAccountKey(e),t),this.browserStorage.getKeys().forEach(t=>{t.includes(e.homeAccountId)&&t.includes(e.environment)&&this.browserStorage.removeItem(t)}),this.cacheConfig.cacheLocation===qa&&this.eventHandler.emitEvent(Ql,void 0,e)}removeIdToken(e,t){super.removeIdToken(e,t);const r=this.getTokenKeys(),n=r.idToken.indexOf(e);n>-1&&(this.logger.info("idToken removed from tokenKeys map"),r.idToken.splice(n,1),this.setTokenKeys(r,t))}removeAccessToken(e,t,r=!0){super.removeAccessToken(e,t),r&&this.removeAccessTokenKeys([e],t)}removeAccessTokenKeys(e,t,r=1){this.logger.trace("removeAccessTokenKey called");const n=this.getTokenKeys(r);let o=0;if(e.forEach(e=>{const t=n.accessToken.indexOf(e);t>-1&&(n.accessToken.splice(t,1),o++)}),o>0)return this.logger.info(`removed ${o} accessToken keys from tokenKeys map`),void this.setTokenKeys(n,t,r)}removeRefreshToken(e,t){super.removeRefreshToken(e,t);const r=this.getTokenKeys(),n=r.refreshToken.indexOf(e);n>-1&&(this.logger.info("refreshToken removed from tokenKeys map"),r.refreshToken.splice(n,1),this.setTokenKeys(r,t))}getTokenKeys(e=1){return Fl(this.clientId,this.browserStorage,e)}setTokenKeys(e,t,r=1){0!==e.idToken.length||0!==e.accessToken.length||0!==e.refreshToken.length?this.setItem(_l(this.clientId,r),JSON.stringify(e),t):this.removeItem(_l(this.clientId,r))}getIdTokenCredential(e,t){const r=this.browserStorage.getUserData(e);if(!r)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeIdToken(e,t),null;const n=this.validateAndParseJson(r);return n&&((o=n)&&yi(o)&&o.hasOwnProperty("realm")&&o.credentialType===K.ID_TOKEN)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),null);var o}async setIdTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const r=this.generateCredentialKey(e),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.getTokenKeys();-1===o.idToken.indexOf(r)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),o.idToken.push(r),this.setTokenKeys(o,t))}getAccessTokenCredential(e,t){const r=this.browserStorage.getUserData(e);if(!r)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeAccessTokenKeys([e],t),null;const n=this.validateAndParseJson(r);return n&&vi(n)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),null)}async setAccessTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const r=this.generateCredentialKey(e),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.getTokenKeys(),i=o.accessToken.indexOf(r);-1!==i&&o.accessToken.splice(i,1),this.logger.trace(`access token ${-1===i?"added to":"updated in"} map`),o.accessToken.push(r),this.setTokenKeys(o,t)}getRefreshTokenCredential(e,t){const r=this.browserStorage.getUserData(e);if(!r)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeRefreshToken(e,t),null;const n=this.validateAndParseJson(r);return n&&wi(n)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),n):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),null)}async setRefreshTokenCredential(e,t){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const r=this.generateCredentialKey(e),n=Date.now().toString();e.lastUpdatedAt=n,await this.setUserData(r,JSON.stringify(e),t,n);const o=this.getTokenKeys();-1===o.refreshToken.indexOf(r)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),o.refreshToken.push(r),this.setTokenKeys(o,t))}getAppMetadata(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&(n=e,(o=r)&&0===n.indexOf($)&&o.hasOwnProperty("clientId")&&o.hasOwnProperty("environment"))?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null);var n,o}setAppMetadata(e,t){this.logger.trace("BrowserCacheManager.setAppMetadata called");const r=function({environment:e,clientId:t}){return[$,e,t].join(F).toLowerCase()}(e);this.setItem(r,JSON.stringify(e),t)}getServerTelemetry(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){const r=0===e.indexOf(Y.CACHE_KEY);let n=!0;return t&&(n=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),r):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t,r){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t),r)}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){return!!t&&0===e.indexOf(j)&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri")}(e,r)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),r):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(e=>this.isAuthorityMetadata(e))}setWrapperMetadata(e,t){this.internalStorage.setItem(Ga,e),this.internalStorage.setItem(Wa,t)}getWrapperMetadata(){return[this.internalStorage.getItem(Ga)||r.EMPTY_STRING,this.internalStorage.getItem(Wa)||r.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(e){const t=this.generateCacheKey(w),r=this.browserStorage.getItem(t);if(!r)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters found"),null;const n=this.validateAndParseJson(r);return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:n.homeAccountId,localAccountId:n.localAccountId,tenantId:n.tenantId},e)):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e,t){const r=this.generateCacheKey(w);if(e){this.logger.verbose("setActiveAccount: Active account set");const n={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId,lastUpdatedAt:li().toString()};this.setItem(r,JSON.stringify(n),t)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(r);this.eventHandler.emitEvent(Jl)}getThrottlingCache(e){const t=this.browserStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const r=this.validateAndParseJson(t);return r&&function(e,t){let r=!1;e&&(r=0===e.indexOf(te));let n=!0;return t&&(n=t.hasOwnProperty("throttleTime")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),r):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t,r){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t),r)}getTemporaryCache(e,t){const r=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const e=this.cookieStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}const n=this.temporaryCacheStorage.getItem(r);if(!n){if(this.cacheConfig.cacheLocation===qa){const e=this.browserStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),n}setTemporaryCache(e,t,r){const n=r?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(n,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.cookieStorage.setItem(n,t,void 0,this.cacheConfig.secureCookies))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.cookieStorage.removeItem(e))}getKeys(){return this.browserStorage.getKeys()}clear(e){this.removeAllAccounts(e),this.removeAppMetadata(e),this.temporaryCacheStorage.getKeys().forEach(e=>{-1===e.indexOf(vl)&&-1===e.indexOf(this.clientId)||this.removeTemporaryItem(e)}),this.browserStorage.getKeys().forEach(e=>{-1===e.indexOf(vl)&&-1===e.indexOf(this.clientId)||this.browserStorage.removeItem(e)}),this.internalStorage.clear()}clearTokensAndKeysWithClaims(e){this.performanceClient.addQueueMeasurement(Dn,e);const t=this.getTokenKeys();let r=0;t.accessToken.forEach(t=>{const n=this.getAccessTokenCredential(t,e);(null==n?void 0:n.requestedClaimsHash)&&t.includes(n.requestedClaimsHash.toLowerCase())&&(this.removeAccessToken(t,e),r++)}),r>0&&this.logger.warning(`${r} access tokens with claims in the cache keys have been removed from the cache.`)}generateCacheKey(e){return Qt.startsWith(e,vl)?e:`${vl}.${this.clientId}.${e}`}generateCredentialKey(e){const t=e.credentialType===K.REFRESH_TOKEN&&e.familyId||e.clientId,r=e.tokenType&&e.tokenType.toLowerCase()!==X.BEARER.toLowerCase()?e.tokenType.toLowerCase():"";return[`${vl}.1`,e.homeAccountId,e.environment,e.credentialType,t,e.realm||"",e.target||"",e.requestedClaimsHash||"",r].join("-").toLowerCase()}generateAccountKey(e){const t=e.homeAccountId.split(".")[1];return[`${vl}.1`,e.homeAccountId,e.environment,t||e.tenantId||""].join("-").toLowerCase()}resetRequestCache(){this.logger.trace("BrowserCacheManager.resetRequestCache called"),this.removeTemporaryItem(this.generateCacheKey(Ka)),this.removeTemporaryItem(this.generateCacheKey($a)),this.removeTemporaryItem(this.generateCacheKey(Fa)),this.removeTemporaryItem(this.generateCacheKey(Ba)),this.removeTemporaryItem(this.generateCacheKey(ja)),this.setInteractionInProgress(!1)}cacheAuthorizeRequest(e,t){this.logger.trace("BrowserCacheManager.cacheAuthorizeRequest called");const r=Tc(JSON.stringify(e));if(this.setTemporaryCache(Ka,r,!0),t){const e=Tc(t);this.setTemporaryCache($a,e,!0)}}getCachedRequest(){this.logger.trace("BrowserCacheManager.getCachedRequest called");const e=this.getTemporaryCache(Ka,!0);if(!e)throw pa(Ls);const t=this.getTemporaryCache($a,!0);let r,n="";try{r=JSON.parse(Sc(e)),t&&(n=Sc(t))}catch(o){throw this.logger.errorPii(`Attempted to parse: ${e}`),this.logger.error(`Parsing cached token request threw with error: ${o}`),pa(Us)}return[r,n]}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(ja,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){var t;const r=null==(t=this.getInteractionInProgress())?void 0:t.clientId;return e?r===this.clientId:!!r}getInteractionInProgress(){const e=`${vl}.${za}`,t=this.getTemporaryCache(e,!1);try{return t?JSON.parse(t):null}catch(r){return this.logger.error("Cannot parse interaction status. Removing temporary cache items and clearing url hash. Retrying interaction should fix the error"),this.removeTemporaryItem(e),this.resetRequestCache(),nl(window),null}}setInteractionInProgress(e,t=Ua){var r;const n=`${vl}.${za}`;if(e){if(this.getInteractionInProgress())throw pa(Ts);this.setTemporaryCache(n,JSON.stringify({clientId:this.clientId,type:t}),!1)}else e||(null==(r=this.getInteractionInProgress())?void 0:r.clientId)!==this.clientId||this.removeTemporaryItem(n)}async hydrateCache(e,t){var r,n,o;const i=pi(null==(r=e.account)?void 0:r.homeAccountId,null==(n=e.account)?void 0:n.environment,e.idToken,this.clientId,e.tenantId);let s;t.claims&&(s=await this.cryptoImpl.hashString(t.claims));const a={idToken:i,accessToken:mi(null==(o=e.account)?void 0:o.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?hi(e.expiresOn):0,e.extExpiresOn?hi(e.extExpiresOn):0,Sc,void 0,e.tokenType,void 0,t.sshKid,t.claims,s)};return this.saveCacheRecord(a,e.correlationId)}async saveCacheRecord(e,t,r){try{await super.saveCacheRecord(e,t,r)}catch(n){if(n instanceof mr&&this.performanceClient&&t)try{const e=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:e.refreshToken.length,cacheIdCount:e.idToken.length,cacheAtCount:e.accessToken.length},t)}catch(o){}throw n}}}function wh(e,t,r,n){try{switch(t){case qa:return new $l(e,r,n);case Na:return new zl}}catch(o){r.error(o)}return new Ml}class Ch{constructor(e){this.eventCallbacks=new Map,this.logger=e||new vt({}),"undefined"!=typeof BroadcastChannel&&(this.broadcastChannel=new BroadcastChannel("msal.broadcast.event")),this.invokeCrossTabCallbacks=this.invokeCrossTabCallbacks.bind(this)}addEventCallback(e,t,r){if("undefined"!=typeof window){const n=r||Bc();return this.eventCallbacks.has(n)?(this.logger.error(`Event callback with id: ${n} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(n,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${n}`),n)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,r,n){var o;const i={eventType:e,interactionType:t||null,payload:r||null,error:n||null,timestamp:Date.now()};switch(e){case Wl:case Ql:case Jl:null==(o=this.broadcastChannel)||o.postMessage(i);break;default:this.invokeCallbacks(i)}}invokeCallbacks(e){this.eventCallbacks.forEach(([t,r],n)=>{(0===r.length||r.includes(e.eventType))&&(this.logger.verbose(`Emitting event to callback ${n}: ${e.eventType}`),t.apply(null,[e]))})}invokeCrossTabCallbacks(e){const t=e.data;this.invokeCallbacks(t)}subscribeCrossTab(){var e;null==(e=this.broadcastChannel)||e.addEventListener("message",this.invokeCrossTabCallbacks)}unsubscribeCrossTab(){var e;null==(e=this.broadcastChannel)||e.removeEventListener("message",this.invokeCrossTabCallbacks)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Ih{constructor(e,t,r,n,o,i,s,a,c){this.config=e,this.browserStorage=t,this.browserCrypto=r,this.networkClient=this.config.system.networkClient,this.eventHandler=o,this.navigationClient=i,this.platformAuthProvider=a,this.correlationId=c||Bc(),this.logger=n.clone(Ca,yl,this.correlationId),this.performanceClient=s}async clearCacheOnLogout(e,t){if(t)try{this.browserStorage.removeAccount(t,e),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(r){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),this.browserStorage.clear(e),await this.browserCrypto.clearKeystore()}catch(n){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri;return sr.getAbsoluteUrl(t,il())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const r={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new as(r,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,r=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(Hr,this.correlationId);const n={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e.requestAuthority||this.config.auth.authority,i=(null==r?void 0:r.length)?"true"===r:this.config.auth.instanceAware,s=t&&i?this.config.auth.authority.replace(sr.getDomainFromUrl(o),t.environment):o,a=Ti.generateAuthority(s,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),c=await ai(Si,Tn,this.logger,this.performanceClient,this.correlationId)(a,this.config.system.networkClient,this.browserStorage,n,this.logger,this.correlationId,this.performanceClient);if(t&&!c.isAlias(t.environment))throw Wt(Kt);return c}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */async function kh(e,t,r,n){r.addQueueMeasurement(Vr,e.correlationId);const o=e.authority||t.auth.authority,i=[...e&&e.scopes||[]],s={...e,correlationId:e.correlationId,authority:o,scopes:i};if(s.authenticationScheme){if(s.authenticationScheme===X.SSH){if(!e.sshJwk)throw Wt(Ht);if(!e.sshKid)throw Wt(Lt)}n.verbose(`Authentication Scheme set to "${s.authenticationScheme}" as configured in Auth request`)}else s.authenticationScheme=X.BEARER,n.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return t.cache.claimsBasedCachingEnabled&&e.claims&&!Qt.isEmptyObj(e.claims)&&(s.requestedClaimsHash=await Vc(e.claims)),s}async function Ah(e,t,r,n,o){n.addQueueMeasurement(Yr,e.correlationId);const i=await ai(kh,Vr,o,n,e.correlationId)(e,r,n,o);return{...e,...i,account:t,forceRefresh:e.forceRefresh||!1}}function Th(e,t){let r;const n=e.httpMethod;if(t===Ir){if(r=n||h,r!==h)throw Wt($t)}else r=n||l;if(e.authorizePostBodyParameters&&r!==h)throw Wt(zt);return r}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class bh extends Ih{initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",null==e?void 0:e.correlationId);const t={correlationId:this.correlationId||Bc(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const r=this.getLogoutHintFromIdTokenClaims(e.account);r&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=r)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=sr.getAbsoluteUrl(e.postLogoutRedirectUri,il())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=sr.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,il())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=sr.getAbsoluteUrl(il(),il())),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(sn,this.correlationId);const t=await ai(this.getClientConfiguration.bind(this),an,this.logger,this.performanceClient,this.correlationId)(e);return new Zi(t,this.performanceClient)}async getClientConfiguration(e){const{serverTelemetryManager:t,requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:s}=e;this.performanceClient.addQueueMeasurement(an,this.correlationId);const a=await ai(this.getDiscoveredAuthority.bind(this),Hr,this.logger,this.performanceClient,this.correlationId)({requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:s}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:a,clientCapabilities:this.config.auth.clientCapabilities,redirectUri:this.config.auth.redirectUri},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:Ca,version:yl,cpu:r.EMPTY_STRING,os:r.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(cn,this.correlationId);const n=this.getRedirectUri(e.redirectUri),o={interactionType:t},i=Gi.setRequestState(this.browserCrypto,e&&e.state||r.EMPTY_STRING,o),s={...await ai(kh,Vr,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:n,state:i,nonce:e.nonce||Bc(),responseMode:this.config.auth.OIDCOptions.serverResponseType},a={...s,httpMethod:Th(s,this.config.auth.protocolMode)};if(e.loginHint||e.sid)return a;const c=e.account||this.browserStorage.getActiveAccount(this.correlationId);return c&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${c.homeAccountId}`,this.correlationId),a.account=c),a}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */
/*! @azure/msal-browser v4.22.1 2025-09-09 */
function Sh(e,t,r){const n=nr(e);if(!n)throw rr(e)?(r.error(`A ${t} is present in the iframe but it does not contain known properties. It's likely that the ${t} has been replaced by code running on the redirectUri page.`),r.errorPii(`The ${t} detected is: ${e}`),pa(Is)):(r.error(`The request has returned to the redirectUri but a ${t} is not present. It's likely that the ${t} has been removed or the page has been redirected by code running on the redirectUri page.`),pa(ws));return n}function _h(e,t,r){if(!e.state)throw pa(Cs);const n=function(e,t){if(!t)return null;try{return Gi.parseRequestState(e,t).libraryState.meta}catch(r){throw pt(Ee)}}(t,e.state);if(!n)throw pa(ks);if(n.interactionType!==r)throw pa(As)}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Ph{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async handleCodeResponse(e,t){let r;this.performanceClient.addQueueMeasurement(un,t.correlationId);try{r=function(e,t){if(is(e,t),!e.code)throw pt(nt);return e}(e,t.state)}catch(n){throw n instanceof _i&&n.subError===_s?pa(_s):n}return ai(this.handleCodeResponseFromServer.bind(this),dn,this.logger,this.performanceClient,t.correlationId)(r,t)}async handleCodeResponseFromServer(e,t,r=!0){if(this.performanceClient.addQueueMeasurement(dn,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await ai(this.authModule.updateAuthority.bind(this.authModule),fn,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),r&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const e=this.createCcsCredentials(t);e&&(this.authCodeRequest.ccsCredential=e)}return await ai(this.authModule.acquireToken.bind(this.authModule),yn,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:fo}:e.loginHint?{credential:e.loginHint,type:yo}:null}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */const Rh="user_switch",Eh={[Rh]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class Mh extends Ce{constructor(e,t,r){super(e,t),Object.setPrototypeOf(this,Mh.prototype),this.name="NativeAuthError",this.ext=r}}function Oh(e){return!(!e.ext||!e.ext.status||"DISABLED"!==e.ext.status)||(!(!e.ext||!e.ext.error||-2147186943!==e.ext.error)||"ContentError"===e.errorCode)}function qh(e,t,r){if(r&&r.status)switch(r.status){case"ACCOUNT_UNAVAILABLE":return ji(Hi);case"USER_INTERACTION_REQUIRED":return new $i(e,t);case"USER_CANCEL":return pa(_s);case"NO_NETWORK":return pa($s);case"UX_NOT_ALLOWED":return ji(Ui)}return new Mh(e,Eh[e]||t,r)}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Nh extends bh{async acquireToken(e){this.performanceClient.addQueueMeasurement(Mr,e.correlationId);const t=this.initializeServerTelemetryManager(Za),r=await ai(this.getClientConfiguration.bind(this),an,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),n=new ts(r,this.performanceClient);this.logger.verbose("Silent auth client created");try{const t=(await ai(n.acquireCachedToken.bind(n),Wr,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(o){throw o instanceof ga&&o.errorCode===Qs&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),o}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t.correlationId,null==t?void 0:t.account)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class xh extends Ih{constructor(e,t,r,n,o,i,s,a,c,l,h,d){super(e,t,r,n,o,i,a,c,d),this.apiId=s,this.accountId=l,this.platformAuthProvider=c,this.nativeStorageManager=h,this.silentCacheClient=new Nh(e,this.nativeStorageManager,r,n,o,i,a,c,d);const u=this.platformAuthProvider.getExtensionName();this.skus=as.makeExtraSkuString({libraryName:Ca,libraryVersion:yl,extensionName:u,extensionVersion:this.platformAuthProvider.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,[bo]:this.skus}}async acquireToken(e,t){this.performanceClient.addQueueMeasurement(Lr,this.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const r=this.performanceClient.startMeasurement(Lr,this.correlationId),n=li(),o=this.initializeServerTelemetryManager(this.apiId);try{const s=await this.initializeNativeRequest(e);try{const e=await this.acquireTokensFromCache(this.accountId,s);return r.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(i){if(t===fc)throw this.logger.info("MSAL internal Cache does not contain tokens, return error as per cache policy"),r.end({success:!1,brokerErrorCode:"cache_request_failed"}),i;this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const a=await this.platformAuthProvider.sendMessage(s);return await this.handleNativeResponse(a,s,n).then(e=>(r.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),o.clearNativeBrokerErrorCode(),e)).catch(e=>{throw r.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError}),e})}catch(i){throw i instanceof Mh&&o.setNativeBrokerErrorCode(i.errorCode),r.end({success:!1}),i}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:Jt.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),pt(Je);const r=this.browserStorage.getBaseAccountInfo({nativeAccountId:e},this.correlationId);if(!r)throw pt(Je);try{const e=this.createSilentCacheRequest(t,r),n=await this.silentCacheClient.acquireToken(e),o={...r,idTokenClaims:null==n?void 0:n.idTokenClaims,idToken:null==n?void 0:n.idToken};return{...n,account:o}}catch(n){throw n}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...r}=e;delete r.onRedirectNavigate;const n=await this.initializeNativeRequest(r);try{await this.platformAuthProvider.sendMessage(n)}catch(s){if(s instanceof Mh){if(this.initializeServerTelemetryManager(this.apiId).setNativeBrokerErrorCode(s.errorCode),Oh(s))throw s}}this.browserStorage.setTemporaryCache(ja,JSON.stringify(n),!0);const o={apiId:Qa,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},i=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(i,o)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const r=this.browserStorage.getCachedNativeRequest();if(!r)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&(null==e||e.addFields({errorCode:"no_cached_request"},t)),null;const{prompt:n,...o}=r;n&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(ja));const i=li();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const t=await this.platformAuthProvider.sendMessage(o),r=await this.handleNativeResponse(t,o,i);return this.initializeServerTelemetryManager(this.apiId).clearNativeBrokerErrorCode(),e&&this.correlationId&&this.performanceClient.addFields({isNativeBroker:!0},this.correlationId),r}catch(s){throw s}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,r){var n,o;this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const i=Zt(e.id_token,Sc),s=this.createHomeAccountIdentifier(e,i),a=null==(n=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId},this.correlationId))?void 0:n.homeAccountId;if((null==(o=t.extraParameters)?void 0:o.child_client_id)&&e.account.id!==t.accountId)this.logger.info("handleNativeServerResponse: Double broker flow detected, ignoring accountId mismatch");else if(s!==a&&e.account.id!==t.accountId)throw qh(Rh);const c=await this.getDiscoveredAuthority({requestAuthority:t.authority}),l=Yi(this.browserStorage,c,s,Sc,this.correlationId,i,e.client_info,void 0,i.tid,void 0,e.account.id,this.logger);e.expires_in=Number(e.expires_in);const h=await this.generateAuthenticationResult(e,t,i,l,c.canonicalAuthority,r);return await this.cacheAccount(l,this.correlationId),await this.cacheNativeTokens(e,t,s,i,e.access_token,h.tenantId,r),h}createHomeAccountIdentifier(e,t){return Ni.generateHomeAccountId(e.client_info||r.EMPTY_STRING,ri,this.logger,this.browserCrypto,t)}generateScopes(e,t){return t?Jt.fromString(t):Jt.fromString(e)}async generatePopAccessToken(e,t){if(t.tokenType===X.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const r=new Qi(this.browserCrypto),n={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw pt(st);return r.signPopToken(e.access_token,t.keyId,n)}return e.access_token}async generateAuthenticationResult(e,t,n,o,i,s){const a=this.addTelemetryFromNativeResponse(e.properties.MATS),c=this.generateScopes(t.scope,e.scope),l=e.account.properties||{},h=l.UID||n.oid||n.sub||r.EMPTY_STRING,d=l.TenantId||n.tid||r.EMPTY_STRING,u=Xt(o.getAccountInfo(),void 0,n,e.id_token);u.nativeAccountId!==e.account.id&&(u.nativeAccountId=e.account.id);const g=await this.generatePopAccessToken(e,t),p=t.tokenType===X.POP?X.POP:X.BEARER;return{authority:i,uniqueId:h,tenantId:d,scopes:c.asArray(),account:u,idToken:e.id_token,idTokenClaims:n,accessToken:g,fromCache:!!a&&this.isResponseFromCache(a),expiresOn:di(s+e.expires_in),tokenType:p,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}async cacheAccount(e,t){await this.browserStorage.setAccount(e,this.correlationId),this.browserStorage.removeAccountContext(e.getAccountInfo(),t)}cacheNativeTokens(e,t,n,o,i,s,a){const c=pi(n,t.authority,e.id_token||"",t.clientId,o.tid||""),l=a+(t.tokenType===X.POP?r.SHR_NONCE_VALIDITY:("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0),h=this.generateScopes(e.scope,t.scope),d={idToken:c,accessToken:mi(n,t.authority,i,t.clientId,o.tid||s,h.printScopes(),l,0,Sc,void 0,t.tokenType,void 0,t.keyId)};return this.nativeStorageManager.saveCacheRecord(d,this.correlationId,t.storeInCache)}getExpiresInValue(e,t){return e===X.POP?r.SHR_NONCE_VALIDITY:("string"==typeof t?parseInt(t,10):t)||0}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.platformAuthProvider.getExtensionId(),extensionVersion:this.platformAuthProvider.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}getMATSFromResponse(e){if(e)try{return JSON.parse(e)}catch(t){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=await this.getCanonicalAuthority(e),{scopes:r,...n}=e,o=new Jt(r||[]);o.appendScopes(d);const i={...n,accountId:this.accountId,clientId:this.config.auth.clientId,authority:t.urlString,scope:o.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:this.getPrompt(e.prompt),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(i.signPopToken&&e.popKid)throw pa(sa);if(this.handleExtraBrokerParams(i),i.extraParameters=i.extraParameters||{},i.extraParameters.telemetry=Aa,e.authenticationScheme===X.POP){const t={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},r=new Qi(this.browserCrypto);let n;if(i.keyId)n=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:i.keyId})),i.signPopToken=!1;else{const e=await ai(r.generateCnf.bind(r),Cn,this.logger,this.performanceClient,this.correlationId)(t,this.logger);n=e.reqCnfString,i.keyId=e.kid,i.signPopToken=!0}i.reqCnf=n}return this.addRequestSKUs(i),i}async getCanonicalAuthority(e){const t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const r=new sr(t);return r.validateAsUri(),r}getPrompt(e){switch(this.apiId){case Va:case Za:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),P}if(e)switch(e){case P:case _:case b:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e} is not compatible with native flow`),pa(oa)}else this.logger.trace("initializeNativeRequest: prompt was not provided")}handleExtraBrokerParams(e){var t;const r=e.extraParameters&&e.extraParameters.hasOwnProperty(So)&&e.extraParameters.hasOwnProperty(_o)&&e.extraParameters.hasOwnProperty(Co);if(!e.embeddedClientId&&!r)return;let n="";const o=e.redirectUri;e.embeddedClientId?(e.redirectUri=this.config.auth.redirectUri,n=e.embeddedClientId):e.extraParameters&&(e.redirectUri=e.extraParameters[_o],n=e.extraParameters[Co]),e.extraParameters={child_client_id:n,child_redirect_uri:o},null==(t=this.performanceClient)||t.addFields({embeddedClientId:n,embeddedRedirectUri:o},this.correlationId)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */async function Hh(e,t,r,n,o){const i=ns({...e.auth,authority:t},r,n,o);if(Fo(i,{sku:Ca,version:yl,os:"",cpu:""}),e.auth.protocolMode!==Cr&&Bo(i,e.telemetry.application),r.platformBroker&&(function(e){e.set("nativebroker","1")}(i),o.addFields({isPlatformAuthorizeRequest:!0},r.correlationId),r.authenticationScheme===X.POP)){const e=new ql(n,o),t=new Qi(e);let s;if(r.popKid)s=e.encodeKid(r.popKid);else{s=(await ai(t.generateCnf.bind(t),Cn,n,o,r.correlationId)(r,n)).reqCnfString}Yo(i,s)}return Ro(i,r.correlationId,o),i}async function Lh(e,t,n,o,i){if(!n.codeChallenge)throw Wt(Ot);const s=await ai(Hh,hn,o,i,n.correlationId)(e,t,n,o,i);return Eo(s,E),$o(s,n.codeChallenge,r.S256_CODE_CHALLENGE_METHOD),Vo(s,n.extraQueryParameters||{}),os(t,s,e.auth.encodeExtraQueryParams,n.extraQueryParameters)}async function Uh(e,t,r,n,o,i){if(!n.earJwk)throw pa(ms);const s=await Hh(t,r,n,o,i);Eo(s,M),function(e,t){e.set("ear_jwk",encodeURIComponent(t)),e.set("ear_jwe_crypto","eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0")}(s,n.earJwk);const a=new Map;Vo(a,n.extraQueryParameters||{});return Fh(e,os(r,a,t.auth.encodeExtraQueryParams,n.extraQueryParameters),s)}async function Dh(e,t,n,o,i,s){const a=await Hh(t,n,o,i,s);Eo(a,E),$o(a,o.codeChallenge,o.codeChallengeMethod||r.S256_CODE_CHALLENGE_METHOD),function(e,t){Object.entries(t).forEach(([t,r])=>{r&&e.set(t,r)})}(a,o.authorizePostBodyParameters||{});const c=new Map;Vo(c,o.extraQueryParameters||{});return Fh(e,os(n,c,t.auth.encodeExtraQueryParams,o.extraQueryParameters),a)}function Fh(e,t,r){const n=e.createElement("form");return n.method="post",n.action=t,r.forEach((t,r)=>{const o=e.createElement("input");o.hidden=!0,o.name=r,o.value=t,n.appendChild(o)}),e.body.appendChild(n),n}async function Bh(e,t,r,n,o,i,s,a,c,l){if(a.verbose("Account id found, calling WAM for token"),!l)throw pa(ra);const h=new ql(a,c),d=new xh(n,o,h,a,s,n.system.navigationClient,r,c,l,t,i,e.correlationId),{userRequestState:u}=Gi.parseRequestState(h,e.state);return ai(d.acquireToken.bind(d),Lr,a,c,e.correlationId)({...e,state:u,prompt:void 0})}async function Kh(e,t,r,n,o,i,s,a,c,l,h,d){if(Ri.removeThrottle(s,o.auth.clientId,e),t.accountId)return ai(Bh,pn,l,h,e.correlationId)(e,t.accountId,n,o,s,a,c,l,h,d);const u={...e,code:t.code||"",codeVerifier:r},g=new Ph(i,s,u,l,h);return await ai(g.handleCodeResponse.bind(g),un,l,h,e.correlationId)(t,e)}async function $h(e,t,r,n,o,i,s,a,c,l,h){if(Ri.removeThrottle(i,n.auth.clientId,e),is(t,e.state),!t.ear_jwe)throw pa(fs);if(!e.earJwk)throw pa(ms);const d=JSON.parse(await ai(zc,ro,c,l,e.correlationId)(e.earJwk,t.ear_jwe));if(d.accountId)return ai(Bh,pn,c,l,e.correlationId)(e,d.accountId,r,n,i,s,a,c,l,h);const u=new Vi(n.auth.clientId,i,new ql(c,l),c,null,null,l);u.validateTokenResponse(d);const g={code:"",state:e.state,nonce:e.nonce,client_info:d.client_info,cloud_graph_host_name:d.cloud_graph_host_name,cloud_instance_host_name:d.cloud_instance_host_name,cloud_instance_name:d.cloud_instance_name,msgraph_host:d.msgraph_host};return await ai(u.handleServerTokenResponse.bind(u),kn,c,l,e.correlationId)(d,o,li(),e,g,void 0,void 0,void 0,void 0)}
/*! @azure/msal-browser v4.22.1 2025-09-09 */async function zh(e,t,r){e.addQueueMeasurement(zn,r);const n=si(jh,jn,t,e,r)(e,t,r);return{verifier:n,challenge:await ai(Gh,Gn,t,e,r)(n,e,t,r)}}function jh(e,t,r){try{const n=new Uint8Array(32);si(Dc,Qn,t,e,r)(n);return Ac(n)}catch(n){throw pa(ps)}}async function Gh(e,t,r,n){t.addQueueMeasurement(Gn,n);try{const o=await ai(Uc,Wn,r,t,n)(e,t,n);return Ac(new Uint8Array(o))}catch(o){throw pa(ps)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Wh{constructor(e,t,r,n){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=n,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=r,this.handshakeEvent=r.startMeasurement(Ln),this.platformAuthType=Pa}async sendMessage(e){this.logger.trace(this.platformAuthType+" - sendMessage called.");const t={method:Ma,request:e},r={channel:Ia,extensionId:this.extensionId,responseId:Bc(),body:t};this.logger.trace(this.platformAuthType+" - Sending request to browser extension"),this.logger.tracePii(this.platformAuthType+` - Sending request to browser extension: ${JSON.stringify(r)}`),this.messageChannel.port1.postMessage(r);const n=await new Promise((e,t)=>{this.resolvers.set(r.responseId,{resolve:e,reject:t})});return this.validatePlatformBrokerResponse(n)}static async createProvider(e,t,r){e.trace("PlatformAuthExtensionHandler - createProvider called.");try{const n=new Wh(e,t,r,ka);return await n.sendHandshakeRequest(),n}catch(n){const o=new Wh(e,t,r);return await o.sendHandshakeRequest(),o}}async sendHandshakeRequest(){this.logger.trace(this.platformAuthType+" - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:Ia,extensionId:this.extensionId,responseId:Bc(),body:{method:Ra}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,r)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:r}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),r(pa(ea)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace(this.platformAuthType+" - onWindowMessage called"),e.source!==window)return;const t=e.data;if(t.channel&&t.channel===Ia&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===Ra){const e=this.handshakeResolvers.get(t.responseId);if(!e)return void this.logger.trace(this.platformAuthType+`.onWindowMessage - resolver can't be found for request ${t.responseId}`);this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject(pa(ta))}}onChannelMessage(e){this.logger.trace(this.platformAuthType+" - onChannelMessage called.");const t=e.data,r=this.resolvers.get(t.responseId),n=this.handshakeResolvers.get(t.responseId);try{const e=t.body.method;if(e===Oa){if(!r)return;const e=t.body.response;if(this.logger.trace(this.platformAuthType+" - Received response from browser extension"),this.logger.tracePii(this.platformAuthType+` - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)r.reject(qh(e.code,e.description,e.ext));else{if(!e.result)throw Ie(ye,"Event does not contain result.");e.result.code&&e.result.description?r.reject(qh(e.result.code,e.result.description,e.result.ext)):r.resolve(e.result)}this.resolvers.delete(t.responseId)}else if(e===Ea){if(!n)return void this.logger.trace(this.platformAuthType+`.onChannelMessage - resolver can't be found for request ${t.responseId}`);clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(this.platformAuthType+` - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),n.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(o){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${o}`),this.logger.errorPii(`Unable to parse ${e}`),r?r.reject(o):n&&n.reject(o)}}validatePlatformBrokerResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw Ie(ye,"Response missing expected properties.")}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}getExtensionName(){var e;return this.getExtensionId()===ka?"chrome":(null==(e=this.getExtensionId())?void 0:e.length)?"unknown":void 0}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Qh{constructor(e,t,r){this.logger=e,this.performanceClient=t,this.correlationId=r,this.platformAuthType=_a}static async createProvider(e,t,r){var n;if(e.trace("PlatformAuthDOMHandler: createProvider called"),null==(n=window.navigator)?void 0:n.platformAuthentication){const n=await window.navigator.platformAuthentication.getSupportedContracts(Ta);if(null==n?void 0:n.includes(Sa))return e.trace("Platform auth api available in DOM"),new Qh(e,t,r)}}getExtensionId(){return Ta}getExtensionVersion(){return""}getExtensionName(){return ba}async sendMessage(e){this.logger.trace(this.platformAuthType+" - Sending request to browser DOM API");try{const t=this.initializePlatformDOMRequest(e),r=await window.navigator.platformAuthentication.executeGetToken(t);return this.validatePlatformBrokerResponse(r)}catch(t){throw this.logger.error(this.platformAuthType+" - executeGetToken DOM API error"),t}}initializePlatformDOMRequest(e){this.logger.trace(this.platformAuthType+" - initializeNativeDOMRequest called");const{accountId:t,clientId:r,authority:n,scope:o,redirectUri:i,correlationId:s,state:a,storeInCache:c,embeddedClientId:l,extraParameters:h,...d}=e,u=this.getDOMExtraParams(d);return{accountId:t,brokerId:this.getExtensionId(),authority:n,clientId:r,correlationId:s||this.correlationId,extraParameters:{...h,...u},isSecurityTokenService:!1,redirectUri:i,scope:o,state:a,storeInCache:c,embeddedClientId:l}}validatePlatformBrokerResponse(e){if(e.hasOwnProperty("isSuccess")){if(e.hasOwnProperty("accessToken")&&e.hasOwnProperty("idToken")&&e.hasOwnProperty("clientInfo")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scopes")&&e.hasOwnProperty("expiresIn"))return this.logger.trace(this.platformAuthType+" - platform broker returned successful and valid response"),this.convertToPlatformBrokerResponse(e);if(e.hasOwnProperty("error")){const t=e;if(!1===t.isSuccess&&t.error&&t.error.code)throw this.logger.trace(this.platformAuthType+" - platform broker returned error response"),qh(t.error.code,t.error.description,{error:parseInt(t.error.errorCode),protocol_error:t.error.protocolError,status:t.error.status,properties:t.error.properties})}}throw Ie(ye,"Response missing expected properties.")}convertToPlatformBrokerResponse(e){this.logger.trace(this.platformAuthType+" - convertToNativeResponse called");return{access_token:e.accessToken,id_token:e.idToken,client_info:e.clientInfo,account:e.account,expires_in:e.expiresIn,scope:e.scopes,state:e.state||"",properties:e.properties||{},extendedLifetimeToken:e.extendedLifetimeToken??!1,shr:e.proofOfPossessionPayload}}getDOMExtraParams(e){return{...Object.entries(e).reduce((e,[t,r])=>(e[t]=String(r),e),{})}}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */async function Jh(e,t,r,n){e.trace("getPlatformAuthProvider called",r);const o=function(){let e;try{return e=window[Na],"true"===(null==e?void 0:e.getItem(kl))}catch(t){return!1}}();let i;e.trace("Has client allowed platform auth via DOM API: "+o);try{o&&(i=await Qh.createProvider(e,t,r)),i||(e.trace("Platform auth via DOM API not available, checking for extension"),i=await Wh.createProvider(e,n||2e3,t))}catch(s){e.trace("Platform auth not available",s)}return i}function Vh(e,t,r,n){if(t.trace("isPlatformAuthAllowed called"),!e.system.allowPlatformBroker)return t.trace("isPlatformAuthAllowed: allowPlatformBroker is not enabled, returning false"),!1;if(!r)return t.trace("isPlatformAuthAllowed: Platform auth provider is not initialized, returning false"),!1;if(n)switch(n){case X.BEARER:case X.POP:return t.trace("isPlatformAuthAllowed: authenticationScheme is supported, returning true"),!0;default:return t.trace("isPlatformAuthAllowed: authenticationScheme is not supported, returning false"),!1}return!0}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Yh extends bh{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,s,c,l),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=a,this.eventHandler=o}acquireToken(e,t){let r;try{if(r={popupName:this.generatePopupName(e.scopes||d,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window},this.performanceClient.addFields({isAsyncPopup:this.config.system.asyncPopups},this.correlationId),this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,r,t);{const n={...e,httpMethod:Th(e,this.config.auth.protocolMode)};return this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),r.popup=this.openSizedPopup("about:blank",r),this.acquireTokenPopupAsync(n,r,t)}}catch(n){return Promise.reject(n)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),r={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:(null==e?void 0:e.popupWindowAttributes)||{},popupWindowParent:(null==e?void 0:e.popupWindowParent)??window},n=e&&e.authority,o=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,r,n,o)):(this.logger.verbose("asyncPopup set to false, opening popup"),r.popup=this.openSizedPopup("about:blank",r),this.logoutPopupAsync(t,r,n,o))}catch(t){return Promise.reject(t)}}async acquireTokenPopupAsync(e,t,r){this.logger.verbose("acquireTokenPopupAsync called");const n=await ai(this.initializeAuthorizationRequest.bind(this),cn,this.logger,this.performanceClient,this.correlationId)(e,rc.Popup);t.popup&&dl(n.authority);const o=Vh(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme);return n.platformBroker=o,this.config.auth.protocolMode===Ir?this.executeEarFlow(n,t):this.executeCodeFlow(n,t,r)}async executeCodeFlow(e,t,r){var n;const o=e.correlationId,i=this.initializeServerTelemetryManager(Ja),s=r||await ai(zh,zn,this.logger,this.performanceClient,o)(this.performanceClient,this.logger,o),a={...e,codeChallenge:s.challenge};try{const r=await ai(this.createAuthCodeClient.bind(this),sn,this.logger,this.performanceClient,o)({serverTelemetryManager:i,requestAuthority:a.authority,requestAzureCloudOptions:a.azureCloudOptions,requestExtraQueryParameters:a.extraQueryParameters,account:a.account});if(a.httpMethod===h)return await this.executeCodeFlowWithPost(a,t,r,s.verifier);{const n=await ai(Lh,ln,this.logger,this.performanceClient,o)(this.config,r.authority,a,this.logger,this.performanceClient),i=this.initiateAuthRequest(n,t);this.eventHandler.emitEvent(dh,rc.Popup,{popupWindow:i},null);const c=await this.monitorPopupForHash(i,t.popupWindowParent),l=si(Sh,An,this.logger,this.performanceClient,this.correlationId)(c,this.config.auth.OIDCOptions.serverResponseType,this.logger);return await ai(Kh,mn,this.logger,this.performanceClient,o)(e,l,s.verifier,Ja,this.config,r,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}}catch(c){throw null==(n=t.popup)||n.close(),c instanceof Ce&&(c.setCorrelationId(this.correlationId),i.cacheFailedRequest(c)),c}}async executeEarFlow(e,t){const r=e.correlationId,n=await ai(this.getDiscoveredAuthority.bind(this),Hr,this.logger,this.performanceClient,r)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),o=await ai($c,to,this.logger,this.performanceClient,r)(),i={...e,earJwk:o},s=t.popup||this.openPopup("about:blank",t);(await Uh(s.document,this.config,n,i,this.logger,this.performanceClient)).submit();const a=await ai(this.monitorPopupForHash.bind(this),rn,this.logger,this.performanceClient,r)(s,t.popupWindowParent),c=si(Sh,An,this.logger,this.performanceClient,this.correlationId)(a,this.config.auth.OIDCOptions.serverResponseType,this.logger);return ai($h,gn,this.logger,this.performanceClient,r)(i,c,Ja,this.config,n,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}async executeCodeFlowWithPost(e,t,r,n){const o=e.correlationId,i=await ai(this.getDiscoveredAuthority.bind(this),Hr,this.logger,this.performanceClient,o)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),s=t.popup||this.openPopup("about:blank",t);(await Dh(s.document,this.config,i,e,this.logger,this.performanceClient)).submit();const a=await ai(this.monitorPopupForHash.bind(this),rn,this.logger,this.performanceClient,o)(s,t.popupWindowParent),c=si(Sh,An,this.logger,this.performanceClient,this.correlationId)(a,this.config.auth.OIDCOptions.serverResponseType,this.logger);return ai(Kh,mn,this.logger,this.performanceClient,o)(e,c,n,Ja,this.config,r,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}async logoutPopupAsync(e,t,r,n){var o,i,s;this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(uh,rc.Popup,e);const a=this.initializeServerTelemetryManager(tc);try{await this.clearCacheOnLogout(this.correlationId,e.account);const s=await ai(this.createAuthCodeClient.bind(this),sn,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:a,requestAuthority:r,account:e.account||void 0});try{s.authority.endSessionEndpoint}catch{if((null==(o=e.account)?void 0:o.homeAccountId)&&e.postLogoutRedirectUri&&s.authority.protocolMode===Cr){if(this.eventHandler.emitEvent(gh,rc.Popup,e),n){const e={apiId:tc,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=sr.getAbsoluteUrl(n,il());await this.navigationClient.navigateInternal(t,e)}return void(null==(i=t.popup)||i.close())}}const c=s.getLogoutUri(e);this.eventHandler.emitEvent(gh,rc.Popup,e);const l=this.openPopup(c,t);if(this.eventHandler.emitEvent(dh,rc.Popup,{popupWindow:l},null),await this.monitorPopupForHash(l,t.popupWindowParent).catch(()=>{}),n){const e={apiId:tc,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=sr.getAbsoluteUrl(n,il());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(c){throw null==(s=t.popup)||s.close(),c instanceof Ce&&(c.setCorrelationId(this.correlationId),a.cacheFailedRequest(c)),this.eventHandler.emitEvent(ph,rc.Popup,null,c),this.eventHandler.emitEvent(mh,rc.Popup),c}this.eventHandler.emitEvent(mh,rc.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),pa(vs)}monitorPopupForHash(e,t){return new Promise((t,r)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const n=setInterval(()=>{if(e.closed)return this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(n),void r(pa(_s));let o="";try{o=e.location.href}catch(a){}if(!o||"about:blank"===o)return;clearInterval(n);let i="";const s=this.config.auth.OIDCOptions.serverResponseType;e&&(i=s===O?e.location.search:e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(i)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e,t)})}openPopup(e,t){try{let r;if(t.popup?(r=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),r.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),r=this.openSizedPopup(e,t)),!r)throw pa(Ss);return r.focus&&r.focus(),this.currentWindow=r,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),r}catch(r){throw this.logger.error("error opening popup "+r.message),pa(bs)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:r,popupWindowParent:n}){var o,i,s,a;const c=n.screenLeft?n.screenLeft:n.screenX,l=n.screenTop?n.screenTop:n.screenY,h=n.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,d=n.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let u=null==(o=r.popupSize)?void 0:o.width,g=null==(i=r.popupSize)?void 0:i.height,p=null==(s=r.popupPosition)?void 0:s.top,m=null==(a=r.popupPosition)?void 0:a.left;return(!u||u<0||u>h)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),u=fa),(!g||g<0||g>d)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),g=ya),(!p||p<0||p>d)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),p=Math.max(0,d/2-ya/2+l)),(!m||m<0||m>h)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),m=Math.max(0,h/2-fa/2+c)),n.open(e,t,`width=${u}, height=${g}, top=${p}, left=${m}, scrollbars=yes`)}unloadWindow(e){this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow)}generatePopupName(e,t){return`${va}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${va}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class Xh extends bh{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,s,c,l),this.nativeStorage=a}async acquireToken(e){const t=await ai(this.initializeAuthorizationRequest.bind(this),cn,this.logger,this.performanceClient,this.correlationId)(e,rc.Redirect);t.platformBroker=Vh(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme);const r=e=>{e.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.resetRequestCache(),this.eventHandler.emitEvent(fh,rc.Redirect))},n=this.getRedirectStartPage(e.redirectStartPage);this.logger.verbosePii(`Redirect start page: ${n}`),this.browserStorage.setTemporaryCache(Fa,n,!0),window.addEventListener("pageshow",r);try{this.config.auth.protocolMode===Ir?await this.executeEarFlow(t):await this.executeCodeFlow(t,e.onRedirectNavigate)}catch(o){throw o instanceof Ce&&o.setCorrelationId(this.correlationId),window.removeEventListener("pageshow",r),o}}async executeCodeFlow(e,t){const r=e.correlationId,n=this.initializeServerTelemetryManager(Qa),o=await ai(zh,zn,this.logger,this.performanceClient,r)(this.performanceClient,this.logger,r),i={...e,codeChallenge:o.challenge};this.browserStorage.cacheAuthorizeRequest(i,o.verifier);try{if(i.httpMethod===h)return await this.executeCodeFlowWithPost(i);{const r=await ai(this.createAuthCodeClient.bind(this),sn,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:i.authority,requestAzureCloudOptions:i.azureCloudOptions,requestExtraQueryParameters:i.extraQueryParameters,account:i.account}),o=await ai(Lh,ln,this.logger,this.performanceClient,e.correlationId)(this.config,r.authority,i,this.logger,this.performanceClient);return await this.initiateAuthRequest(o,t)}}catch(s){throw s instanceof Ce&&(s.setCorrelationId(this.correlationId),n.cacheFailedRequest(s)),s}}async executeEarFlow(e){const t=e.correlationId,r=await ai(this.getDiscoveredAuthority.bind(this),Hr,this.logger,this.performanceClient,t)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),n=await ai($c,to,this.logger,this.performanceClient,t)(),o={...e,earJwk:n};this.browserStorage.cacheAuthorizeRequest(o);return(await Uh(document,this.config,r,o,this.logger,this.performanceClient)).submit(),new Promise((e,t)=>{setTimeout(()=>{t(pa(ha,"failed_to_redirect"))},this.config.system.redirectNavigationTimeout)})}async executeCodeFlowWithPost(e){const t=e.correlationId,r=await ai(this.getDiscoveredAuthority.bind(this),Hr,this.logger,this.performanceClient,t)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});this.browserStorage.cacheAuthorizeRequest(e);return(await Dh(document,this.config,r,e,this.logger,this.performanceClient)).submit(),new Promise((e,t)=>{setTimeout(()=>{t(pa(ha,"failed_to_redirect"))},this.config.system.redirectNavigationTimeout)})}async handleRedirectPromise(e="",t,n,o){const i=this.initializeServerTelemetryManager(Ya);try{const[s,a]=this.getRedirectResponse(e||"");if(!s)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.resetRequestCache(),"back_forward"!==function(){if("undefined"==typeof window||void 0===window.performance||"function"!=typeof window.performance.getEntriesByType)return;const e=window.performance.getEntriesByType("navigation"),t=e.length?e[0]:void 0;return null==t?void 0:t.type}()?o.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const c=this.browserStorage.getTemporaryCache(Fa,!0)||r.EMPTY_STRING,l=ir(c);if(l===ir(window.location.href)&&this.config.auth.navigateToLoginRequestUrl){this.logger.verbose("Current page is loginRequestUrl, handling response"),c.indexOf("#")>-1&&function(e){const t=e.split("#");t.shift(),window.location.hash=t.length>0?t.join("#"):""}(c);return await this.handleResponse(s,t,n,i)}if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(s,t,n,i);if(!ol()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(Ba,a,!0);const e={apiId:Ya,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let r=!0;if(c&&"null"!==c)this.logger.verbose(`Navigating to loginRequestUrl: ${c}`),r=await this.navigationClient.navigateInternal(c,e);else{const t=function(){const e=new sr(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}();this.browserStorage.setTemporaryCache(Fa,t,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),r=await this.navigationClient.navigateInternal(t,e)}if(!r)return await this.handleResponse(s,t,n,i)}return null}catch(s){throw s instanceof Ce&&(s.setCorrelationId(this.correlationId),i.cacheFailedRequest(s)),s}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(t=this.config.auth.OIDCOptions.serverResponseType===O?window.location.search:window.location.hash);let r=nr(t);if(r){try{_h(r,this.browserCrypto,rc.Redirect)}catch(o){return o instanceof Ce&&this.logger.error(`Interaction type validation failed due to ${o.errorCode}: ${o.errorMessage}`),[null,""]}return nl(window),this.logger.verbose("Hash contains known properties, returning response hash"),[r,t]}const n=this.browserStorage.getTemporaryCache(Ba,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(Ba)),n&&(r=nr(n),r)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[r,n]):[null,""]}async handleResponse(e,t,r,n){if(!e.state)throw pa(Cs);if(e.ear_jwe){const r=await ai(this.getDiscoveredAuthority.bind(this),Hr,this.logger,this.performanceClient,t.correlationId)({requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account});return ai($h,gn,this.logger,this.performanceClient,t.correlationId)(t,e,Qa,this.config,r,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}const o=await ai(this.createAuthCodeClient.bind(this),sn,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority});return ai(Kh,mn,this.logger,this.performanceClient,t.correlationId)(t,e,r,Qa,this.config,o,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const r={apiId:Qa,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},n=t||this.config.auth.onRedirectNavigate;if("function"==typeof n){this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback");return!1!==n(e)?(this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),void(await this.navigationClient.navigateExternal(e,r))):void this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation")}return this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),void(await this.navigationClient.navigateExternal(e,r))}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),pa(vs)}async logout(e){var t;this.logger.verbose("logoutRedirect called");const r=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(ec);try{this.eventHandler.emitEvent(uh,rc.Redirect,e),await this.clearCacheOnLogout(this.correlationId,r.account);const o={apiId:ec,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},i=await ai(this.createAuthCodeClient.bind(this),sn,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:e&&e.authority,requestExtraQueryParameters:null==e?void 0:e.extraQueryParameters,account:e&&e.account||void 0});if(i.authority.protocolMode===Cr)try{i.authority.endSessionEndpoint}catch{if(null==(t=r.account)?void 0:t.homeAccountId)return void this.eventHandler.emitEvent(gh,rc.Redirect,r)}const s=i.getLogoutUri(r);if(this.eventHandler.emitEvent(gh,rc.Redirect,r),!e||"function"!=typeof e.onRedirectNavigate)return this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0,Da),void(await this.navigationClient.navigateExternal(s,o));if(!1!==e.onRedirectNavigate(s))return this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0,Da),void(await this.navigationClient.navigateExternal(s,o));this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}catch(o){throw o instanceof Ce&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),this.eventHandler.emitEvent(ph,rc.Redirect,null,o),this.eventHandler.emitEvent(mh,rc.Redirect),o}this.eventHandler.emitEvent(mh,rc.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return sr.getAbsoluteUrl(t,il())}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */async function Zh(e,t,r,n,o){if(t.addQueueMeasurement(tn,n),!e)throw r.info("Navigate url is empty"),pa(vs);return o?ai(nd,nn,r,t,n)(e,o,t,n):si(od,on,r,t,n)(e)}async function ed(e,t,r,n,o){const i=id();if(!i.contentDocument)throw"No document associated with iframe!";return(await Dh(i.contentDocument,e,t,r,n,o)).submit(),i}async function td(e,t,r,n,o){const i=id();if(!i.contentDocument)throw"No document associated with iframe!";return(await Uh(i.contentDocument,e,t,r,n,o)).submit(),i}async function rd(e,t,r,n,o,i,s){return n.addQueueMeasurement(rn,i),new Promise((n,i)=>{t<fl&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${t}ms) than the default (10000ms). This may result in timeouts.`);const a=window.setTimeout(()=>{window.clearInterval(c),i(pa(Rs))},t),c=window.setInterval(()=>{let t="";const r=e.contentWindow;try{t=r?r.location.href:""}catch(i){}if(!t||"about:blank"===t)return;let o="";r&&(o=s===O?r.location.search:r.location.hash),window.clearTimeout(a),window.clearInterval(c),n(o)},r)}).finally(()=>{si(sd,Un,o,n,i)(e)})}function nd(e,t,r,n){return r.addQueueMeasurement(nn,n),new Promise((r,n)=>{const o=id();window.setTimeout(()=>{o?(o.src=e,r(o)):n("Unable to load iframe")},t)})}function od(e){const t=id();return t.src=e,t}function id(){const e=document.createElement("iframe");return e.className="msalSilentIframe",e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(e),e}function sd(e){document.body===e.parentNode&&document.body.removeChild(e)}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class ad extends bh{constructor(e,t,r,n,o,i,s,a,c,l,h){super(e,t,r,n,o,i,a,l,h),this.apiId=s,this.nativeStorage=c}async acquireToken(e){this.performanceClient.addQueueMeasurement(Or,e.correlationId),e.loginHint||e.sid||e.account&&e.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const t={...e};t.prompt?t.prompt!==P&&t.prompt!==R&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${t.prompt} with ${P}`),t.prompt=P):t.prompt=P;const r=await ai(this.initializeAuthorizationRequest.bind(this),cn,this.logger,this.performanceClient,e.correlationId)(t,rc.Silent);return r.platformBroker=Vh(this.config,this.logger,this.platformAuthProvider,r.authenticationScheme),dl(r.authority),this.config.auth.protocolMode===Ir?this.executeEarFlow(r):this.executeCodeFlow(r)}async executeCodeFlow(e){let t;const r=this.initializeServerTelemetryManager(this.apiId);try{return t=await ai(this.createAuthCodeClient.bind(this),sn,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:r,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),await ai(this.silentTokenHelper.bind(this),en,this.logger,this.performanceClient,e.correlationId)(t,e)}catch(n){if(n instanceof Ce&&(n.setCorrelationId(this.correlationId),r.cacheFailedRequest(n)),!(t&&n instanceof Ce&&n.errorCode===ma))throw n;return this.performanceClient.addFields({retryError:n.errorCode},this.correlationId),await ai(this.silentTokenHelper.bind(this),en,this.logger,this.performanceClient,this.correlationId)(t,e)}}async executeEarFlow(e){const t=e.correlationId,r=await ai(this.getDiscoveredAuthority.bind(this),Hr,this.logger,this.performanceClient,t)({requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),n=await ai($c,to,this.logger,this.performanceClient,t)(),o={...e,earJwk:n},i=await ai(td,tn,this.logger,this.performanceClient,t)(this.config,r,o,this.logger,this.performanceClient),s=this.config.auth.OIDCOptions.serverResponseType,a=await ai(rd,rn,this.logger,this.performanceClient,t)(i,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,t,s),c=si(Sh,An,this.logger,this.performanceClient,t)(a,s,this.logger);return ai($h,gn,this.logger,this.performanceClient,t)(o,c,this.apiId,this.config,r,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}logout(){return Promise.reject(pa(Ns))}async silentTokenHelper(e,t){const r=t.correlationId;this.performanceClient.addQueueMeasurement(en,r);const n=await ai(zh,zn,this.logger,this.performanceClient,r)(this.performanceClient,this.logger,r),o={...t,codeChallenge:n.challenge};let i;if(t.httpMethod===h)i=await ai(ed,tn,this.logger,this.performanceClient,r)(this.config,e.authority,o,this.logger,this.performanceClient);else{const t=await ai(Lh,ln,this.logger,this.performanceClient,r)(this.config,e.authority,o,this.logger,this.performanceClient);i=await ai(Zh,tn,this.logger,this.performanceClient,r)(t,this.performanceClient,this.logger,r,this.config.system.navigateFrameWait)}const s=this.config.auth.OIDCOptions.serverResponseType,a=await ai(rd,rn,this.logger,this.performanceClient,r)(i,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,r,s),c=si(Sh,An,this.logger,this.performanceClient,r)(a,s,this.logger);return ai(Kh,mn,this.logger,this.performanceClient,r)(t,c,n.verifier,this.apiId,this.config,e,this.browserStorage,this.nativeStorage,this.eventHandler,this.logger,this.performanceClient,this.platformAuthProvider)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class cd extends bh{async acquireToken(e){this.performanceClient.addQueueMeasurement(Nr,e.correlationId);const t=await ai(kh,Vr,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),r={...e,...t};e.redirectUri&&(r.redirectUri=this.getRedirectUri(e.redirectUri));const n=this.initializeServerTelemetryManager(Za),o=await this.createRefreshTokenClient({serverTelemetryManager:n,authorityUrl:r.authority,azureCloudOptions:r.azureCloudOptions,account:r.account});return ai(o.acquireTokenByRefreshToken.bind(o),zr,this.logger,this.performanceClient,e.correlationId)(r).catch(e=>{throw e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e),e})}logout(){return Promise.reject(pa(Ns))}async createRefreshTokenClient(e){const t=await ai(this.getClientConfiguration.bind(this),an,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new es(t,this.performanceClient)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class ld{constructor(e,t,r,n){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=r,this.cryptoObj=n}async loadExternalTokens(e,t,r){if(!this.isBrowserEnvironment)throw pa(Bs);const n=e.correlationId||Bc(),o=t.id_token?Zt(t.id_token,Sc):void 0,i={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},s=e.authority?new Ti(Ti.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,i,this.logger,e.correlationId||Bc()):void 0,a=await this.loadAccount(e,r.clientInfo||t.client_info||"",n,o,s),c=await this.loadIdToken(t,a.homeAccountId,a.environment,a.realm,n),l=await this.loadAccessToken(e,t,a.homeAccountId,a.environment,a.realm,r,n),h=await this.loadRefreshToken(t,a.homeAccountId,a.environment,n);return this.generateAuthenticationResult(e,{account:a,idToken:c,accessToken:l,refreshToken:h},o,s)}async loadAccount(e,t,r,n,o){if(this.logger.verbose("TokenCache - loading account"),e.account){const t=Ni.createFromAccountInfo(e.account);return await this.storage.setAccount(t,r),t}if(!o||!t&&!n)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),pa(Ws);const i=Ni.generateHomeAccountId(t,o.authorityType,this.logger,this.cryptoObj,n),s=null==n?void 0:n.tid,a=Yi(this.storage,o,i,Sc,r,n,t,o.hostnameAndPort,s,void 0,void 0,this.logger);return await this.storage.setAccount(a,r),a}async loadIdToken(e,t,r,n,o){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const i=pi(t,r,e.id_token,this.config.auth.clientId,n);return await this.storage.setIdTokenCredential(i,o),i}async loadAccessToken(e,t,r,n,o,i,s){if(!t.access_token)return this.logger.verbose("TokenCache - no access token found in response"),null;if(!t.expires_in)return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;if(!(t.scope||e.scopes&&e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null;this.logger.verbose("TokenCache - loading access token");const a=t.scope?Jt.fromString(t.scope):new Jt(e.scopes),c=i.expiresOn||t.expires_in+li(),l=i.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+li(),h=mi(r,n,t.access_token,this.config.auth.clientId,o,a.printScopes(),c,l,Sc);return await this.storage.setAccessTokenCredential(h,s),h}async loadRefreshToken(e,t,r,n){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const o=fi(t,r,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return await this.storage.setRefreshTokenCredential(o,n),o}generateAuthenticationResult(e,t,r,n){var o,i,s;let a,c="",l=[],h=null;(null==t?void 0:t.accessToken)&&(c=t.accessToken.secret,l=Jt.fromString(t.accessToken.target).asArray(),h=di(t.accessToken.expiresOn),a=di(t.accessToken.extendedExpiresOn));const d=t.account;return{authority:n?n.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:l,account:d.getAccountInfo(),idToken:(null==(o=t.idToken)?void 0:o.secret)||"",idTokenClaims:r||{},accessToken:c,fromCache:!0,expiresOn:h,correlationId:e.correlationId||"",requestId:"",extExpiresOn:a,familyId:(null==(i=t.refreshToken)?void 0:i.familyId)||"",tokenType:(null==(s=null==t?void 0:t.accessToken)?void 0:s.tokenType)||"",state:e.state||"",cloudGraphHostName:d.cloudGraphHostName||"",msGraphHost:d.msGraphHost||"",fromNativeBroker:!1}}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class hd extends Zi{constructor(e){super(e),this.includeRedirectUri=!1}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */class dd extends bh{constructor(e,t,r,n,o,i,s,a,c,l){super(e,t,r,n,o,i,a,c,l),this.apiId=s}async acquireToken(e){if(!e.code)throw pa(Js);const t=await ai(this.initializeAuthorizationRequest.bind(this),cn,this.logger,this.performanceClient,e.correlationId)(e,rc.Silent),r=this.initializeServerTelemetryManager(this.apiId);try{const n={...t,code:e.code},o=await ai(this.getClientConfiguration.bind(this),an,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:r,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),i=new hd(o);this.logger.verbose("Auth code client created");const s=new Ph(i,this.browserStorage,n,this.logger,this.performanceClient);return await ai(s.handleCodeResponseFromServer.bind(s),dn,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(n){throw n instanceof Ce&&(n.setCorrelationId(this.correlationId),r.cacheFailedRequest(n)),n}}logout(){return Promise.reject(pa(Ns))}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */
/*! @azure/msal-browser v4.22.1 2025-09-09 */
function ud(e){const t=null==e?void 0:e.idTokenClaims;return(null==t?void 0:t.tfp)||(null==t?void 0:t.acr)?"B2C":(null==t?void 0:t.tid)?"9188040d-6c67-4c5b-b112-36a304b66dad"===(null==t?void 0:t.tid)?"MSA":"AAD":void 0}function gd(e,t){try{ll(e)}catch(r){throw t.end({success:!1},r),r}}class pd{constructor(e){var t,r,n,o;this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new ql(this.logger,this.performanceClient):mt,this.eventHandler=new Ch(this.logger),this.browserStorage=this.isBrowserEnvironment?new vh(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler,function(e){const t=e.cloudDiscoveryMetadata;let r;if(t)try{r=JSON.parse(t)}catch(n){throw Wt(qt)}return{canonicalAuthority:e.authority?bi(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:r}}(this.config.auth)):(t=this.config.auth.clientId,r=this.logger,n=this.performanceClient,o=this.eventHandler,new vh(t,{cacheLocation:xa,cacheRetentionDays:5,temporaryCacheLocation:xa,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1},mt,r,n,o));const i={cacheLocation:xa,cacheRetentionDays:5,temporaryCacheLocation:xa,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new vh(this.config.auth.clientId,i,this.browserCrypto,this.logger,this.performanceClient,this.eventHandler),this.tokenCache=new ld(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e,t){const r=new pd(e);return await r.initialize(t),r}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e,t){if(this.logger.trace("initialize called"),this.initialized)return void this.logger.info("initialize has already been called, exiting early.");if(!this.isBrowserEnvironment)return this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,void this.eventHandler.emitEvent(Gl);const r=(null==e?void 0:e.correlationId)||this.getRequestCorrelationId(),n=this.config.system.allowPlatformBroker,o=this.performanceClient.startMeasurement(Xr,r);if(this.eventHandler.emitEvent(jl),!t)try{this.logMultipleInstances(o)}catch{}if(await ai(this.browserStorage.initialize.bind(this.browserStorage),Zr,this.logger,this.performanceClient,r)(r),n)try{this.platformAuthProvider=await Jh(this.logger,this.performanceClient,r,this.config.system.nativeBrokerHandshakeTimeout)}catch(i){this.logger.verbose(i)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),si(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),Dn,this.logger,this.performanceClient,r)(r)),this.config.system.asyncPopups&&await this.preGeneratePkceCodes(r),this.initialized=!0,this.eventHandler.emitEvent(Gl),o.end({allowPlatformBroker:n,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),cl(this.initialized),this.isBrowserEnvironment){const t=e||"";let r=this.redirectResponse.get(t);return void 0===r?(r=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,r),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),r}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){var t;if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;if((null==(t=this.browserStorage.getInteractionInProgress())?void 0:t.type)===Da)return this.logger.verbose("handleRedirectPromise removing interaction_in_progress flag and returning null after sign-out"),this.browserStorage.setInteractionInProgress(!1),Promise.resolve(null);const r=this.getAllAccounts(),n=this.browserStorage.getCachedNativeRequest(),o=n&&this.platformAuthProvider&&!e;let i,s;this.eventHandler.emitEvent(lh,rc.Redirect);try{if(o&&this.platformAuthProvider){i=this.performanceClient.startMeasurement(Pr,(null==n?void 0:n.correlationId)||""),this.logger.trace("handleRedirectPromise - acquiring token from native platform"),i.add({isPlatformBrokerRequest:!0});const e=new xh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Ya,this.performanceClient,this.platformAuthProvider,n.accountId,this.nativeInternalStorage,n.correlationId);s=ai(e.handleRedirectPromise.bind(e),Hn,this.logger,this.performanceClient,i.event.correlationId)(this.performanceClient,i.event.correlationId)}else{const[t,r]=this.browserStorage.getCachedRequest(),n=t.correlationId;i=this.performanceClient.startMeasurement(Pr,n),this.logger.trace("handleRedirectPromise - acquiring token from web flow");const o=this.createRedirectClient(n);s=ai(o.handleRedirectPromise.bind(o),xn,this.logger,this.performanceClient,i.event.correlationId)(e,t,r,i)}}catch(a){throw this.browserStorage.resetRequestCache(),a}return s.then(e=>{if(e){this.browserStorage.resetRequestCache();r.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(Yl,rc.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(eh,rc.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),i.end({success:!0,accountType:ud(e.account)})}else i.event.errorCode?i.end({success:!1}):i.discard();return this.eventHandler.emitEvent(hh,rc.Redirect),e}).catch(e=>{this.browserStorage.resetRequestCache();const t=e;throw r.length>0?this.eventHandler.emitEvent(th,rc.Redirect,null,t):this.eventHandler.emitEvent(Xl,rc.Redirect,null,t),this.eventHandler.emitEvent(hh,rc.Redirect),i.end({success:!1},t),e})}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);const r=this.performanceClient.startMeasurement(_r,t);r.add({accountType:ud(e.account),scenarioId:e.scenarioId});const n=e.onRedirectNavigate;if(n)e.onRedirectNavigate=e=>{const t="function"==typeof n?n(e):void 0;return r.add({navigateCallbackResult:!1!==t}),r.event=r.end({success:!0})||r.event,t};else{const e=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=t=>{const n="function"==typeof e?e(t):void 0;return r.add({navigateCallbackResult:!1!==n}),r.event=r.end({success:!0})||r.event,n}}const o=this.getAllAccounts().length>0;try{let n;if(hl(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0,Ua),o?this.eventHandler.emitEvent(Zl,rc.Redirect,e):this.eventHandler.emitEvent(Vl,rc.Redirect,e),this.platformAuthProvider&&this.canUsePlatformBroker(e)){n=new xh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Qa,this.performanceClient,this.platformAuthProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,r).catch(n=>{if(r.add({brokerErrorName:n.name,brokerErrorCode:n.errorCode}),n instanceof Mh&&Oh(n)){this.platformAuthProvider=void 0;return this.createRedirectClient(t).acquireToken(e)}if(n instanceof $i){this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow");return this.createRedirectClient(t).acquireToken(e)}throw n})}else{n=this.createRedirectClient(t).acquireToken(e)}return await n}catch(i){throw this.browserStorage.resetRequestCache(),2===r.event.status?this.performanceClient.startMeasurement(Pr,t).end({success:!1},i):r.end({success:!1},i),o?this.eventHandler.emitEvent(th,rc.Redirect,null,i):this.eventHandler.emitEvent(Xl,rc.Redirect,null,i),i}}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(Sr,t);r.add({scenarioId:e.scenarioId,accountType:ud(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),gd(this.initialized,r),this.browserStorage.setInteractionInProgress(!0,Ua)}catch(s){return Promise.reject(s)}const n=this.getAllAccounts();let o;n.length>0?this.eventHandler.emitEvent(Zl,rc.Popup,e):this.eventHandler.emitEvent(Vl,rc.Popup,e);const i=this.getPreGeneratedPkceCodes(t);if(this.canUsePlatformBroker(e))r.add({isPlatformBrokerRequest:!0}),o=this.acquireTokenNative({...e,correlationId:t},Ja).then(e=>(r.end({success:!0,accountType:ud(e.account)}),e)).catch(n=>{if(r.add({brokerErrorName:n.name,brokerErrorCode:n.errorCode}),n instanceof Mh&&Oh(n)){this.platformAuthProvider=void 0;return this.createPopupClient(t).acquireToken(e,i)}if(n instanceof $i){this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow");return this.createPopupClient(t).acquireToken(e,i)}throw n});else{o=this.createPopupClient(t).acquireToken(e,i)}return o.then(e=>(n.length<this.getAllAccounts().length?this.eventHandler.emitEvent(Yl,rc.Popup,e):this.eventHandler.emitEvent(eh,rc.Popup,e),r.end({success:!0,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:ud(e.account)}),e)).catch(e=>(n.length>0?this.eventHandler.emitEvent(th,rc.Popup,null,e):this.eventHandler.emitEvent(Xl,rc.Popup,null,e),r.end({success:!1},e),Promise.reject(e))).finally(async()=>{this.browserStorage.setInteractionInProgress(!1),this.config.system.asyncPopups&&await this.preGeneratePkceCodes(t)})}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){var t,r,n;const o=this.getRequestCorrelationId(e),i={...e,prompt:e.prompt,correlationId:o};let s;if(this.ssoSilentMeasurement=this.performanceClient.startMeasurement(xr,o),null==(t=this.ssoSilentMeasurement)||t.add({scenarioId:e.scenarioId,accountType:ud(e.account)}),gd(this.initialized,this.ssoSilentMeasurement),null==(r=this.ssoSilentMeasurement)||r.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",o),this.eventHandler.emitEvent(nh,rc.Silent,i),this.canUsePlatformBroker(i))null==(n=this.ssoSilentMeasurement)||n.add({isPlatformBrokerRequest:!0}),s=this.acquireTokenNative(i,Va).catch(e=>{var t;if(null==(t=this.ssoSilentMeasurement)||t.add({brokerErrorName:e.name,brokerErrorCode:e.errorCode}),e instanceof Mh&&Oh(e)){this.platformAuthProvider=void 0;return this.createSilentIframeClient(i.correlationId).acquireToken(i)}throw e});else{s=this.createSilentIframeClient(i.correlationId).acquireToken(i)}return s.then(e=>{var t;return this.eventHandler.emitEvent(oh,rc.Silent,e),null==(t=this.ssoSilentMeasurement)||t.end({success:!0,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:ud(e.account)}),e}).catch(e=>{var t;throw this.eventHandler.emitEvent(ih,rc.Silent,null,e),null==(t=this.ssoSilentMeasurement)||t.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);const r=this.performanceClient.startMeasurement(kr,t);gd(this.initialized,r),this.eventHandler.emitEvent(sh,rc.Silent,e),r.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw pa(Ys);if(e.code){const n=e.code;let o=this.hybridAuthCodeResponses.get(n);return o?(this.logger.verbose("Existing acquireTokenByCode request found",t),r.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),o=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(e=>(this.eventHandler.emitEvent(ah,rc.Silent,e),this.hybridAuthCodeResponses.delete(n),r.end({success:!0,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:ud(e.account)}),e)).catch(e=>{throw this.hybridAuthCodeResponses.delete(n),this.eventHandler.emitEvent(ch,rc.Silent,null,e),r.end({success:!1},e),e}),this.hybridAuthCodeResponses.set(n,o)),await o}if(e.nativeAccountId){if(this.canUsePlatformBroker(e,e.nativeAccountId)){r.add({isPlatformBrokerRequest:!0});const n=await this.acquireTokenNative({...e,correlationId:t},Xa,e.nativeAccountId).catch(e=>{throw e instanceof Mh&&Oh(e)&&(this.platformAuthProvider=void 0),r.add({brokerErrorName:e.name,brokerErrorCode:e.errorCode}),e});return r.end({accountType:ud(n.account),success:!0}),n}throw pa(Zs)}throw pa(Vs)}catch(n){throw this.eventHandler.emitEvent(ch,rc.Silent,null,n),r.end({success:!1},n),n}}async acquireTokenByCodeAsync(e){var t;this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(Nn,e.correlationId),null==(t=this.acquireTokenByCodeAsyncMeasurement)||t.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);const r=this.createSilentAuthCodeClient(e.correlationId);return await r.acquireToken(e).then(e=>{var t;return null==(t=this.acquireTokenByCodeAsyncMeasurement)||t.end({success:!0,fromCache:e.fromCache}),e}).catch(e=>{var t;throw null==(t=this.acquireTokenByCodeAsyncMeasurement)||t.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(Gr,e.correlationId),t){case mc:case fc:case yc:const t=this.createSilentCacheClient(e.correlationId);return ai(t.acquireToken.bind(t),Mr,this.logger,this.performanceClient,e.correlationId)(e);default:throw pt(et)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(Ar,e.correlationId),t){case mc:case yc:case vc:case wc:const t=this.createSilentRefreshClient(e.correlationId);return ai(t.acquireToken.bind(t),Nr,this.logger,this.performanceClient,e.correlationId)(e);default:throw pt(et)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(Jr,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return ai(t.acquireToken.bind(t),Or,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);hl(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0,Da);return this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);ll(this.initialized),this.browserStorage.setInteractionInProgress(!0,Da);return this.createPopupClient(t).logout(e).finally(()=>{this.browserStorage.setInteractionInProgress(!1)})}catch(t){return Promise.reject(t)}}async clearCache(e){if(!this.isBrowserEnvironment)return void this.logger.info("in non-browser environment, returning early.");const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){const t=this.getRequestCorrelationId();
/*! @azure/msal-browser v4.22.1 2025-09-09 */
return function(e,t,r,n,o){return e.verbose("getAllAccounts called"),r?t.getAllAccounts(o||{},n):[]}(this.logger,this.browserStorage,this.isBrowserEnvironment,t,e)}getAccount(e){const t=this.getRequestCorrelationId();return function(e,t,r,n){const o=r.getAccountInfoFilteredBy(e,n);return o?(t.verbose("getAccount: Account matching provided filter found, returning"),o):(t.verbose("getAccount: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage,t)}getAccountByUsername(e){const t=this.getRequestCorrelationId();return function(e,t,r,n){if(t.trace("getAccountByUsername called"),!e)return t.warning("getAccountByUsername: No username provided"),null;const o=r.getAccountInfoFilteredBy({username:e},n);return o?(t.verbose("getAccountByUsername: Account matching username found, returning"),t.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),o):(t.verbose("getAccountByUsername: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage,t)}getAccountByHomeId(e){const t=this.getRequestCorrelationId();return function(e,t,r,n){if(t.trace("getAccountByHomeId called"),!e)return t.warning("getAccountByHomeId: No homeAccountId provided"),null;const o=r.getAccountInfoFilteredBy({homeAccountId:e},n);return o?(t.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),t.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),o):(t.verbose("getAccountByHomeId: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage,t)}getAccountByLocalId(e){const t=this.getRequestCorrelationId();return function(e,t,r,n){if(t.trace("getAccountByLocalId called"),!e)return t.warning("getAccountByLocalId: No localAccountId provided"),null;const o=r.getAccountInfoFilteredBy({localAccountId:e},n);return o?(t.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),t.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),o):(t.verbose("getAccountByLocalId: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage,t)}setActiveAccount(e){const t=this.getRequestCorrelationId();!function(e,t,r){t.setActiveAccount(e,r)}(e,this.browserStorage,t)}getActiveAccount(){const e=this.getRequestCorrelationId();return function(e,t){return e.getActiveAccount(t)}
/*! @azure/msal-browser v4.22.1 2025-09-09 */(this.browserStorage,e)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const r=Ni.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return await this.browserStorage.setAccount(r,e.correlationId),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,r,n){if(this.logger.trace("acquireTokenNative called"),!this.platformAuthProvider)throw pa(ra);return new xh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.platformAuthProvider,r||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e,n)}canUsePlatformBroker(e,t){if(this.logger.trace("canUsePlatformBroker called"),!this.platformAuthProvider)return this.logger.trace("canUsePlatformBroker: platform broker unavilable, returning false"),!1;if(!Vh(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme))return this.logger.trace("canUsePlatformBroker: isBrokerAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case P:case _:case b:this.logger.trace("canUsePlatformBroker: prompt is compatible with platform broker flow");break;default:return this.logger.trace(`canUsePlatformBroker: prompt = ${e.prompt} is not compatible with platform broker flow, returning false`),!1}return!(!t&&!this.getNativeAccountId(e))||(this.logger.trace("canUsePlatformBroker: nativeAccountId is not available, returning false"),!1)}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new Yh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createRedirectClient(e){return new Xh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createSilentIframeClient(e){return new ad(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Va,this.performanceClient,this.nativeInternalStorage,this.platformAuthProvider,e)}createSilentCacheClient(e){return new Nh(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.platformAuthProvider,e)}createSilentRefreshClient(e){return new cd(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.platformAuthProvider,e)}createSilentAuthCodeClient(e){return new dd(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,Xa,this.performanceClient,this.platformAuthProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return al(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){this.config.cache.cacheLocation===qa?this.eventHandler.subscribeCrossTab():this.logger.info("Account storage events are only available when cacheLocation is set to localStorage")}disableAccountStorageEvents(){this.config.cache.cacheLocation===qa?this.eventHandler.unsubscribeCrossTab():this.logger.info("Account storage events are only available when cacheLocation is set to localStorage")}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(e){return(null==e?void 0:e.correlationId)?e.correlationId:this.isBrowserEnvironment?Bc():r.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||dc})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||dc})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(Tr,t);r.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),gd(this.initialized,r),this.logger.verbose("acquireTokenSilent called",t);const n=e.account||this.getActiveAccount();if(!n)throw pa(xs);return r.add({accountType:ud(n)}),this.acquireTokenSilentDeduped(e,n,t).then(n=>(r.end({success:!0,fromCache:n.fromCache,accessTokenSize:n.accessToken.length,idTokenSize:n.idToken.length}),{...n,state:e.state,correlationId:t})).catch(e=>{throw e instanceof Ce&&e.setCorrelationId(t),r.end({success:!1},e),e})}async acquireTokenSilentDeduped(e,t,r){const n=Pi(this.config.auth.clientId,{...e,authority:e.authority||this.config.auth.authority,correlationId:r},t.homeAccountId),o=JSON.stringify(n),i=this.activeSilentTokenRequests.get(o);if(void 0===i){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",r),this.performanceClient.addFields({deduped:!1},r);const n=ai(this.acquireTokenSilentAsync.bind(this),br,this.logger,this.performanceClient,r)({...e,correlationId:r},t);return this.activeSilentTokenRequests.set(o,n),n.finally(()=>{this.activeSilentTokenRequests.delete(o)})}return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",r),this.performanceClient.addFields({deduped:!0},r),i}async acquireTokenSilentAsync(e,t){const r=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(br,e.correlationId),this.eventHandler.emitEvent(Zl,rc.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",r);const n=await ai(Ah,Yr,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),o=e.cacheLookupPolicy||mc;return this.acquireTokenSilentNoIframe(n,o).catch(async e=>{const t=function(e,t){const r=!(e instanceof $i&&e.subError!==Di),n=e.errorCode===ma||e.errorCode===et,o=r&&n||e.errorCode===xi||e.errorCode===Li,i=Ic.includes(t);return o&&i}
/*! @azure/msal-browser v4.22.1 2025-09-09 */(e,o);if(t){if(this.activeIframeRequest){if(o!==Cc){const[t,r]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${r}`,n.correlationId);const i=this.performanceClient.startMeasurement(qr,n.correlationId);i.add({awaitIframeCorrelationId:r});const s=await t;if(i.end({success:s}),s)return this.logger.verbose(`Parallel iframe request with correlationId: ${r} succeeded. Retrying cache and/or RT redemption`,n.correlationId),this.acquireTokenSilentNoIframe(n,o);throw this.logger.info(`Iframe request with correlationId: ${r} failed. Interaction is required.`),e}return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",n.correlationId),ai(this.acquireTokenBySilentIframe.bind(this),Jr,this.logger,this.performanceClient,n.correlationId)(n)}{let e;return this.activeIframeRequest=[new Promise(t=>{e=t}),n.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",n.correlationId),ai(this.acquireTokenBySilentIframe.bind(this),Jr,this.logger,this.performanceClient,n.correlationId)(n).then(t=>(e(!0),t)).catch(t=>{throw e(!1),t}).finally(()=>{this.activeIframeRequest=void 0})}}throw e}).then(t=>(this.eventHandler.emitEvent(eh,rc.Silent,t),e.correlationId&&this.performanceClient.addFields({fromCache:t.fromCache},e.correlationId),t)).catch(e=>{throw this.eventHandler.emitEvent(th,rc.Silent,null,e),e}).finally(()=>{document.removeEventListener("visibilitychange",r)})}async acquireTokenSilentNoIframe(e,t){return Vh(this.config,this.logger,this.platformAuthProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.performanceClient.addFields({isPlatformBrokerRequest:!0},e.correlationId),this.acquireTokenNative(e,Za,e.account.nativeAccountId,t).catch(async t=>{if(this.performanceClient.addFields({brokerErrorName:t.name,brokerErrorCode:t.errorCode},e.correlationId),t instanceof Mh&&Oh(t))throw this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.platformAuthProvider=void 0,pt(et);throw t})):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),t===fc&&this.logger.verbose("acquireTokenSilent - cache lookup policy set to AccessToken, attempting to acquire token from local cache"),ai(this.acquireTokenFromCache.bind(this),Gr,this.logger,this.performanceClient,e.correlationId)(e,t).catch(r=>{if(t===fc)throw r;return this.eventHandler.emitEvent(rh,rc.Silent,e),ai(this.acquireTokenByRefreshToken.bind(this),Ar,this.logger,this.performanceClient,e.correlationId)(e,t)}))}async preGeneratePkceCodes(e){return this.logger.verbose("Generating new PKCE codes"),this.pkceCode=await ai(zh,zn,this.logger,this.performanceClient,e)(this.performanceClient,this.logger,e),Promise.resolve()}getPreGeneratedPkceCodes(e){this.logger.verbose("Attempting to pick up pre-generated PKCE codes");const t=this.pkceCode?{...this.pkceCode}:void 0;return this.pkceCode=void 0,this.logger.verbose((t?"Found":"Did not find")+" pre-generated PKCE codes"),this.performanceClient.addFields({usePreGeneratedPkce:!!t},e),t}logMultipleInstances(e){const t=this.config.auth.clientId;if(!window)return;window.msal=window.msal||{},window.msal.clientIds=window.msal.clientIds||[];window.msal.clientIds.length>0&&this.logger.verbose("There is already an instance of MSAL.js in the window."),window.msal.clientIds.push(t),function(e,t,r){var n;const o=(null==(n=window.msal)?void 0:n.clientIds)||[],i=o.length,s=o.filter(t=>t===e).length;s>1&&r.warning("There is already an instance of MSAL.js in the window with the same client id."),t.add({msalInstanceCount:i,sameClientIdInstanceCount:s})}(t,e,this.logger)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */
class md{static async createPublicClientApplication(e){const t=await async function(e,t){const r=new Rl(e);return await r.initialize(),pd.createController(r,t)}(e);return new md(e,t)}constructor(e,t){this.isBroker=!1,this.controller=t||new pd(new Rl(e))}async initialize(e){return this.controller.initialize(e,this.isBroker)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}
/*! @azure/msal-browser v4.22.1 2025-09-09 */const fd={initialize:()=>Promise.reject(rl(Xc)),acquireTokenPopup:()=>Promise.reject(rl(Xc)),acquireTokenRedirect:()=>Promise.reject(rl(Xc)),acquireTokenSilent:()=>Promise.reject(rl(Xc)),acquireTokenByCode:()=>Promise.reject(rl(Xc)),getAllAccounts:()=>[],getAccount:()=>null,getAccountByHomeId:()=>null,getAccountByUsername:()=>null,getAccountByLocalId:()=>null,handleRedirectPromise:()=>Promise.reject(rl(Xc)),loginPopup:()=>Promise.reject(rl(Xc)),loginRedirect:()=>Promise.reject(rl(Xc)),logout:()=>Promise.reject(rl(Xc)),logoutRedirect:()=>Promise.reject(rl(Xc)),logoutPopup:()=>Promise.reject(rl(Xc)),ssoSilent:()=>Promise.reject(rl(Xc)),addEventCallback:()=>null,removeEventCallback:()=>{},addPerformanceCallback:()=>"",removePerformanceCallback:()=>!1,enableAccountStorageEvents:()=>{},disableAccountStorageEvents:()=>{},getTokenCache:()=>{throw rl(Xc)},getLogger:()=>{throw rl(Xc)},setLogger:()=>{},setActiveAccount:()=>{},getActiveAccount:()=>null,initializeWrapperLibrary:()=>{},setNavigationClient:()=>{},getConfiguration:()=>{throw rl(Xc)},hydrateCache:()=>Promise.reject(rl(Xc)),clearCache:()=>Promise.reject(rl(Xc))};
/*! @azure/msal-browser v4.22.1 2025-09-09 */class yd{static getInteractionStatusFromEvent(e,t){switch(e.eventType){case Vl:return ic;case nh:return cc;case Zl:if(e.interactionType===rc.Redirect||e.interactionType===rc.Popup)return ac;break;case lh:return lc;case uh:return sc;case oh:case ih:if(t&&t!==cc)break;return hc;case mh:if(t&&t!==sc)break;return hc;case hh:if(t&&t!==lc)break;return hc;case Yl:case Xl:case eh:case th:case fh:if(e.interactionType===rc.Redirect||e.interactionType===rc.Popup){if(t&&t!==ic&&t!==ac)break;return hc}}return null}}
/*! @azure/msal-react v3.0.19 2025-08-19 */const vd={instance:fd,inProgress:hc,accounts:[],logger:new vt({})},wd=e.createContext(vd);
/*! @azure/msal-react v3.0.19 2025-08-19 */
function Cd(e,t){if(e.length!==t.length)return!1;const r=[...t];return e.every(e=>{const t=r.shift();return!(!e||!t)&&(e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username)})}wd.Consumer;
/*! @azure/msal-react v3.0.19 2025-08-19 */
const Id="3.0.19",kd="UNBLOCK_INPROGRESS",Ad="EVENT",Td=(e,t)=>{const{type:r,payload:n}=t;let o=e.inProgress;switch(r){case kd:e.inProgress===oc&&(o=hc,n.logger.info("MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'"));break;case Ad:const t=n.message,i=yd.getInteractionStatusFromEvent(t,e.inProgress);i&&(n.logger.info(`MsalProvider - ${t.eventType} results in setting inProgress from ${e.inProgress} to ${i}`),o=i);break;default:throw new Error(`Unknown action type: ${r}`)}if(o===oc)return e;const i=n.instance.getAllAccounts();return o===e.inProgress||Cd(i,e.accounts)?o!==e.inProgress?{...e,inProgress:o}:Cd(i,e.accounts)?e:{...e,accounts:i}:{...e,inProgress:o,accounts:i}};function bd({instance:r,children:n}){e.useEffect(()=>{r.initializeWrapperLibrary(uc,Id)},[r]);const o=e.useMemo(()=>r.getLogger().clone("@azure/msal-react",Id),[r]),[i,s]=e.useReducer(Td,void 0,()=>({inProgress:oc,accounts:[]}));e.useEffect(()=>{const e=r.addEventCallback(e=>{s({payload:{instance:r,logger:o,message:e},type:Ad})});return o.verbose(`MsalProvider - Registered event callback with id: ${e}`),r.initialize().then(()=>{r.handleRedirectPromise().catch(()=>{}).finally(()=>{s({payload:{instance:r,logger:o},type:kd})})}).catch(()=>{}),()=>{e&&(o.verbose(`MsalProvider - Removing event callback ${e}`),r.removeEventCallback(e))}},[r,o]);const a={instance:r,inProgress:i.inProgress,accounts:i.accounts,logger:o};return t.createElement(wd.Provider,{value:a},n)}
/*! @azure/msal-react v3.0.19 2025-08-19 */const Sd=()=>e.useContext(wd);
/*! @azure/msal-react v3.0.19 2025-08-19 */function _d(t){const{accounts:r,inProgress:n}=Sd(),o=e.useMemo(()=>n!==oc&&function(e,t){return t&&(t.username||t.homeAccountId||t.localAccountId)?!!function(e,t){return e.length>0&&(t.homeAccountId||t.localAccountId||t.username)&&e.filter(e=>!(t.username&&t.username.toLowerCase()!==e.username.toLowerCase()||t.homeAccountId&&t.homeAccountId.toLowerCase()!==e.homeAccountId.toLowerCase()||t.localAccountId&&t.localAccountId.toLowerCase()!==e.localAccountId.toLowerCase()))[0]||null}(e,t):e.length>0}(r,t),[r,n,t]);return o}export{bd as M,md as P,Sd as a,_d as u};
//# sourceMappingURL=msal-5feaa718.js.map
